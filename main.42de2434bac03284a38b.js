/*! For license information please see main.42de2434bac03284a38b.js.LICENSE.txt */
(()=>{var e={573:(e,t,n)=>{"use strict";var r="/index.js";n.r(t),n.d(t,{AgeGenderNet:()=>YG,BoundingBox:()=>uU,Box:()=>oU,ComposableTask:()=>OH,ComputeAllFaceDescriptorsTask:()=>xj,ComputeFaceDescriptorsTaskBase:()=>bj,ComputeSingleFaceDescriptorTask:()=>wj,DetectAllFaceLandmarksTask:()=>kj,DetectAllFacesTask:()=>Nj,DetectFaceLandmarksTaskBase:()=>vj,DetectFacesTaskBase:()=>Sj,DetectSingleFaceLandmarksTask:()=>Ij,DetectSingleFaceTask:()=>Tj,Dimensions:()=>HV,FACE_EXPRESSION_LABELS:()=>DG,FaceDetection:()=>cU,FaceDetectionNet:()=>vH,FaceExpressionNet:()=>OG,FaceExpressions:()=>MG,FaceLandmark68Net:()=>JG,FaceLandmark68TinyNet:()=>eH,FaceLandmarkNet:()=>tH,FaceLandmarks:()=>vU,FaceLandmarks5:()=>kU,FaceLandmarks68:()=>IU,FaceMatch:()=>SU,FaceMatcher:()=>Rj,FaceRecognitionNet:()=>oH,Gender:()=>qG,LabeledBox:()=>NU,LabeledFaceDescriptors:()=>TU,NetInput:()=>nG,NeuralNetwork:()=>fG,ObjectDetection:()=>lU,Point:()=>iU,PredictedBox:()=>CU,Rect:()=>wU,SsdMobilenetv1:()=>bH,SsdMobilenetv1Options:()=>yH,TinyFaceDetector:()=>WH,TinyFaceDetectorOptions:()=>MH,TinyYolov2:()=>RH,TinyYolov2Options:()=>EH,allFaces:()=>Aj,allFacesSsdMobilenetv1:()=>_j,allFacesTinyYolov2:()=>Ej,awaitMediaLoaded:()=>KU,bufferToImage:()=>XU,computeFaceDescriptor:()=>KH,createCanvas:()=>ZU,createCanvasFromMedia:()=>JU,createFaceDetectionNet:()=>wH,createFaceRecognitionNet:()=>uH,createSsdMobilenetv1:()=>xH,createTinyFaceDetector:()=>Dj,createTinyYolov2:()=>DH,detectAllFaces:()=>$j,detectFaceLandmarks:()=>jH,detectFaceLandmarksTiny:()=>qH,detectLandmarks:()=>oj,detectSingleFace:()=>Cj,draw:()=>VV,env:()=>PU,euclideanDistance:()=>Fj,extendWithAge:()=>hH,extendWithFaceDescriptor:()=>lH,extendWithFaceDetection:()=>_U,extendWithFaceExpressions:()=>zG,extendWithFaceLandmarks:()=>WG,extendWithGender:()=>pH,extractFaceTensors:()=>sG,extractFaces:()=>aG,fetchImage:()=>oG,fetchJson:()=>uG,fetchNetWeights:()=>lG,fetchOrThrow:()=>iG,fetchVideo:()=>cG,getContext2dOrThrow:()=>WU,getMediaDimensions:()=>YU,imageTensorToCanvas:()=>QU,imageToSquare:()=>tG,inverseSigmoid:()=>bU,iou:()=>hU,isMediaElement:()=>eG,isMediaLoaded:()=>qU,isWithAge:()=>cH,isWithFaceDetection:()=>$U,isWithFaceExpressions:()=>LG,isWithFaceLandmarks:()=>BG,isWithGender:()=>dH,loadAgeGenderModel:()=>aj,loadFaceDetectionModel:()=>sj,loadFaceExpressionModel:()=>rj,loadFaceLandmarkModel:()=>ej,loadFaceLandmarkTinyModel:()=>tj,loadFaceRecognitionModel:()=>nj,loadSsdMobilenetv1Model:()=>ZH,loadTinyFaceDetectorModel:()=>JH,loadTinyYolov2Model:()=>QH,loadWeightMap:()=>dG,locateFaces:()=>ij,matchDimensions:()=>pG,minBbox:()=>dU,nets:()=>VH,nonMaxSuppression:()=>pU,normalize:()=>fU,padToSquare:()=>mU,predictAgeAndGender:()=>YH,recognizeFaceExpressions:()=>XH,resizeResults:()=>Mj,resolveInput:()=>BU,shuffleArray:()=>gU,sigmoid:()=>yU,ssdMobilenetv1:()=>UH,tf:()=>o,tinyFaceDetector:()=>GH,tinyYolov2:()=>HH,toNetInput:()=>rG,utils:()=>GV,validateConfig:()=>TH,version:()=>Oj});var a=Object.defineProperty,s=e=>n(741)(e),i=(e,t)=>{for(var n in(e=>{a(e,"__esModule",{value:!0})})(e),t)a(e,n,{get:t[n],enumerable:!0})},o={};i(o,{Abs:()=>Ke,Acos:()=>Xe,Acosh:()=>Ye,AdadeltaOptimizer:()=>wp,AdagradOptimizer:()=>vp,AdamOptimizer:()=>kp,AdamaxOptimizer:()=>Ip,Add:()=>Ze,AddN:()=>Je,All:()=>Qe,Any:()=>et,ArgMax:()=>tt,ArgMin:()=>nt,Asin:()=>rt,Asinh:()=>at,Atan:()=>st,Atan2:()=>ot,Atanh:()=>it,AvgPool:()=>ut,AvgPool3D:()=>ct,AvgPool3DGrad:()=>ht,AvgPoolGrad:()=>lt,BackendWasm:()=>AV,BatchMatMul:()=>dt,BatchToSpaceND:()=>pt,Bincount:()=>ft,BroadcastTo:()=>mt,Callback:()=>mI,CallbackList:()=>db,Cast:()=>gt,Ceil:()=>yt,ClipByValue:()=>bt,Complex:()=>xt,ComplexAbs:()=>wt,Concat:()=>vt,Conv2D:()=>kt,Conv2DBackpropFilter:()=>It,Conv2DBackpropInput:()=>St,Conv3D:()=>Nt,Conv3DBackpropFilterV2:()=>Tt,Conv3DBackpropInputV2:()=>Ct,Cos:()=>$t,Cosh:()=>_t,CropAndResize:()=>At,Cumsum:()=>Et,CustomCallback:()=>mb,DataStorage:()=>G,DenseBincount:()=>Ft,DepthToSpace:()=>Rt,DepthwiseConv2dNative:()=>Dt,DepthwiseConv2dNativeBackpropFilter:()=>Mt,DepthwiseConv2dNativeBackpropInput:()=>Ot,Diag:()=>Lt,Dilation2D:()=>zt,Dilation2DBackpropFilter:()=>Bt,Dilation2DBackpropInput:()=>Pt,ENV:()=>He,EarlyStopping:()=>vI,Einsum:()=>Vt,Elu:()=>Ut,EluGrad:()=>Gt,Environment:()=>We,Equal:()=>jt,Erf:()=>Ht,Exp:()=>qt,ExpandDims:()=>Kt,Expm1:()=>Xt,FFT:()=>Yt,Fill:()=>Zt,FlipLeftRight:()=>Jt,Floor:()=>Qt,FloorDiv:()=>en,FromPixels:()=>Kr,FusedBatchNorm:()=>tn,FusedConv2D:()=>Zr,FusedDepthwiseConv2D:()=>Jr,GatherNd:()=>rn,GatherV2:()=>nn,GraphModel:()=>JS,Greater:()=>an,GreaterEqual:()=>sn,History:()=>fb,IFFT:()=>un,Identity:()=>on,Imag:()=>ln,InputSpec:()=>Jy,IsFinite:()=>cn,IsInf:()=>hn,IsNan:()=>dn,KernelBackend:()=>H,LRN:()=>In,LRNGrad:()=>Sn,LayerVariable:()=>Xy,LayersModel:()=>wx,LeakyRelu:()=>pn,Less:()=>fn,LessEqual:()=>mn,LinSpace:()=>gn,Log:()=>yn,Log1p:()=>bn,LogSoftmax:()=>kn,LogicalAnd:()=>xn,LogicalNot:()=>wn,LogicalOr:()=>vn,Max:()=>Nn,MaxPool:()=>Cn,MaxPool3D:()=>_n,MaxPool3DGrad:()=>En,MaxPoolGrad:()=>$n,MaxPoolWithArgmax:()=>An,Maximum:()=>Tn,Mean:()=>Fn,Min:()=>Rn,Minimum:()=>Dn,MirrorPad:()=>Mn,Mod:()=>On,MomentumOptimizer:()=>Np,Multinomial:()=>Ln,Multiply:()=>zn,Neg:()=>Pn,NonMaxSuppressionV3:()=>Wn,NonMaxSuppressionV4:()=>Vn,NonMaxSuppressionV5:()=>Un,NotEqual:()=>Bn,OP_SCOPE_SUFFIX:()=>Is,OneHot:()=>Hn,OnesLike:()=>Gn,Optimizer:()=>xp,Pack:()=>jn,PadV2:()=>qn,Pool:()=>Kn,Pow:()=>Xn,Prelu:()=>Yn,Prod:()=>Zn,RMSPropOptimizer:()=>Tp,RNN:()=>Tw,Range:()=>Jn,Rank:()=>Ua,Real:()=>Qn,RealDiv:()=>Wt,Reciprocal:()=>er,Reduction:()=>qd,Relu:()=>tr,Relu6:()=>or,Reshape:()=>nr,ResizeBilinear:()=>sr,ResizeBilinearGrad:()=>ir,ResizeNearestNeighbor:()=>rr,ResizeNearestNeighborGrad:()=>ar,Reverse:()=>ur,RotateWithOffset:()=>Xr,Round:()=>lr,Rsqrt:()=>cr,SGDOptimizer:()=>Sp,ScatterNd:()=>hr,Select:()=>dr,Selu:()=>pr,Sequential:()=>Ix,Sigmoid:()=>br,Sign:()=>yr,Sin:()=>mr,Sinh:()=>gr,Slice:()=>fr,Softmax:()=>Sr,Softplus:()=>xr,SpaceToBatchND:()=>kr,SparseFillEmptyRows:()=>Nr,SparseReshape:()=>Tr,SparseSegmentMean:()=>Cr,SparseSegmentSum:()=>$r,SparseToDense:()=>_r,SplitV:()=>Ir,Sqrt:()=>wr,Square:()=>Ar,SquaredDifference:()=>Er,Step:()=>qr,StridedSlice:()=>Fr,StringNGrams:()=>Rr,StringSplit:()=>Dr,StringToHashBucketFast:()=>Mr,Sub:()=>Or,Sum:()=>vr,SymbolicTensor:()=>Qy,Tan:()=>Lr,Tanh:()=>zr,Tensor:()=>Ba,TensorBuffer:()=>La,Tile:()=>Pr,TopK:()=>Br,Transform:()=>Wr,Transpose:()=>Vr,Unique:()=>Ur,Unpack:()=>Gr,UnsortedSegmentSum:()=>Hr,Variable:()=>Va,ZerosLike:()=>jr,_FusedMatMul:()=>Yr,abs:()=>lu,acos:()=>cu,acosh:()=>hu,add:()=>su,addN:()=>du,all:()=>pu,any:()=>fu,argMax:()=>mu,argMin:()=>gu,asin:()=>yu,asinh:()=>bu,atan:()=>xu,atan2:()=>wu,atanh:()=>vu,avgPool:()=>Ou,avgPool3d:()=>Lu,backend:()=>ru,backend_util:()=>Ap,basicLSTMCell:()=>Vu,batchNorm:()=>Gu,batchNorm2d:()=>Hu,batchNorm3d:()=>ju,batchNorm4d:()=>qu,batchToSpaceND:()=>Uu,bincount:()=>Ku,booleanMaskAsync:()=>Jh,broadcastTo:()=>Xu,browser:()=>Hi,buffer:()=>xi,callbacks:()=>kI,cast:()=>wi,ceil:()=>Yu,clipByValue:()=>Zu,clone:()=>vi,complex:()=>Ns,concat:()=>zu,concat1d:()=>Ju,concat2d:()=>Qu,concat3d:()=>el,concat4d:()=>tl,constraints:()=>Dm,conv1d:()=>rl,conv2d:()=>nl,conv2dTranspose:()=>sl,conv3d:()=>il,conv3dTranspose:()=>ul,copyRegisteredKernels:()=>ua,cos:()=>ll,cosh:()=>cl,cosineWindow:()=>od,cumsum:()=>hl,customGrad:()=>ec,data:()=>tN,denseBincount:()=>dl,deprecationWarn:()=>Wo,depthToSpace:()=>pl,depthwiseConv2d:()=>fl,deregisterOp:()=>TI,device_util:()=>fs,diag:()=>ml,dilation2d:()=>gl,disableDeprecationWarnings:()=>Bo,dispose:()=>qo,disposeVariables:()=>Vo,div:()=>ou,divNoNan:()=>Il,dot:()=>Sl,dropout:()=>sd,einsum:()=>Nl,elu:()=>Tl,enableDebugMode:()=>Po,enableProdMode:()=>zo,enclosingPowerOfTwo:()=>id,engine:()=>Uo,env:()=>Ue,equal:()=>wl,erf:()=>Cl,exp:()=>$l,expandDims:()=>_l,expm1:()=>El,eye:()=>Fl,fft:()=>Ch,fill:()=>Rl,findBackend:()=>eu,findBackendFactory:()=>tu,floor:()=>Dl,floorDiv:()=>iu,fused:()=>ld,gather:()=>Ml,gatherND:()=>ad,gather_util:()=>Zi,getBackend:()=>Jo,getGradient:()=>na,getKernel:()=>ta,getKernelsForBackend:()=>ra,grad:()=>Xl,grads:()=>Yl,greater:()=>Ol,greaterEqual:()=>Ll,ifft:()=>$h,imag:()=>zl,image:()=>fp,inTopKAsync:()=>ud,initializers:()=>wg,input:()=>Cx,io:()=>Ii,irfft:()=>_h,isFinite:()=>Pl,isInf:()=>Bl,isNaN:()=>Wl,keep:()=>Ko,kernel_impls:()=>vf,layers:()=>Py,leakyRelu:()=>Vl,less:()=>Ul,lessEqual:()=>Gl,linalg:()=>mp,linspace:()=>Hl,loadGraphModel:()=>QS,loadLayersModel:()=>Tx,localResponseNormalization:()=>jl,log:()=>ql,log1p:()=>Kl,logSigmoid:()=>ac,logSoftmax:()=>uc,logSumExp:()=>yc,logicalAnd:()=>bc,logicalNot:()=>xc,logicalOr:()=>wc,logicalXor:()=>vc,losses:()=>gp,matMul:()=>Wi,math:()=>Pi,max:()=>sc,maxPool:()=>kc,maxPool3d:()=>Ic,maxPoolWithArgmax:()=>Sc,maximum:()=>Nc,mean:()=>Tc,memory:()=>Go,meshgrid:()=>_c,metrics:()=>Kk,min:()=>Ec,minimum:()=>Ac,mirrorPad:()=>Fc,mod:()=>Rc,model:()=>Sx,models:()=>cI,moments:()=>Mc,movingAverage:()=>td,mul:()=>uu,multiRNNCell:()=>Oc,multinomial:()=>Lc,neg:()=>nc,nextFrame:()=>Ep,norm:()=>ed,notEqual:()=>zc,oneHot:()=>Vi,ones:()=>$c,onesLike:()=>Pc,op:()=>Ss,outerProduct:()=>Bc,pad:()=>Wc,pad1d:()=>Vc,pad2d:()=>Uc,pad3d:()=>Gc,pad4d:()=>Hc,pool:()=>qc,pow:()=>Kc,prelu:()=>Xc,print:()=>ki,prod:()=>Yc,profile:()=>Ho,rand:()=>Zc,randomGamma:()=>eh,randomNormal:()=>th,randomUniform:()=>nh,range:()=>rh,ready:()=>Zo,real:()=>ah,reciprocal:()=>sh,registerBackend:()=>nu,registerCallbackConstructor:()=>$x,registerGradient:()=>sa,registerKernel:()=>aa,registerOp:()=>SI,regularizers:()=>hI,relu:()=>ih,relu6:()=>oh,removeBackend:()=>Qo,reshape:()=>Mu,reverse:()=>uh,reverse1d:()=>lh,reverse2d:()=>ch,reverse3d:()=>hh,reverse4d:()=>dh,rfft:()=>Ah,round:()=>ph,rsqrt:()=>fh,scalar:()=>mh,scatterND:()=>nd,scatter_util:()=>Qi,selu:()=>gh,separableConv2d:()=>yh,sequential:()=>Nx,serialization:()=>vo,setBackend:()=>Yo,setPlatform:()=>au,setWasmPath:()=>PV,setWasmPaths:()=>BV,setdiff1dAsync:()=>bh,sigmoid:()=>Pu,sign:()=>xh,signal:()=>pp,sin:()=>wh,sinh:()=>vh,slice:()=>Bu,slice1d:()=>kh,slice2d:()=>Ih,slice3d:()=>Sh,slice4d:()=>Nh,slice_util:()=>ro,softmax:()=>Th,softplus:()=>rc,spaceToBatchND:()=>jc,sparse:()=>yp,sparseToDense:()=>rd,spectral:()=>dp,split:()=>Eh,sqrt:()=>Fh,square:()=>Dc,squaredDifference:()=>Rh,squeeze:()=>Dh,stack:()=>Mh,step:()=>Oh,stridedSlice:()=>Lh,string:()=>bp,sub:()=>ic,sum:()=>oc,sumOutType:()=>ns,tan:()=>zh,tanh:()=>Wu,tensor:()=>Cs,tensor1d:()=>Ph,tensor2d:()=>Bh,tensor3d:()=>ji,tensor4d:()=>Wh,tensor5d:()=>Vh,tensor6d:()=>Uh,tensor_util:()=>Qa,test_util:()=>No,tidy:()=>jo,tile:()=>Al,time:()=>Xo,topk:()=>Gh,train:()=>$p,transpose:()=>Ui,truncatedNormal:()=>Hh,unique:()=>jh,unregisterGradient:()=>oa,unregisterKernel:()=>ia,unsortedSegmentSum:()=>qh,unstack:()=>Kh,upcastType:()=>ts,util:()=>ca,valueAndGrad:()=>Zl,valueAndGrads:()=>Jl,variable:()=>Xh,variableGrads:()=>Ql,version:()=>OP,version_converter:()=>eN,version_core:()=>Lo,version_layers:()=>Xb,version_wasm:()=>WV,where:()=>vl,whereAsync:()=>Zh,zeros:()=>Cc,zerosLike:()=>kl});var u=Object.create,l=Object.defineProperty,c=Object.getOwnPropertyDescriptor,h=Object.getOwnPropertyNames,d=Object.getPrototypeOf,p=Object.prototype.hasOwnProperty,f=e=>l(e,"__esModule",{value:!0}),m=e=>s(e),g=(e,t)=>function(){return t||(0,e[Object.keys(e)[0]])((t={exports:{}}).exports,t),t.exports},y=(e,t)=>{for(var n in f(e),t)l(e,n,{get:t[n],enumerable:!0})},b=e=>((e,t,n)=>{if(t&&"object"==typeof t||"function"==typeof t)for(let r of h(t))p.call(e,r)||"default"===r||l(e,r,{get:()=>t[r],enumerable:!(n=c(t,r))||n.enumerable});return e})(f(l(null!=e?u(d(e)):{},"default",e&&e.__esModule&&"default"in e?{get:()=>e.default,enumerable:!0}:{value:e,enumerable:!0})),e),x=g({"node_modules/.pnpm/long@4.0.0/node_modules/long/src/long.js"(e,t){t.exports=r;var n=null;try{n=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(e){}function r(e,t,n){this.low=0|e,this.high=0|t,this.unsigned=!!n}function a(e){return!0===(e&&e.__isLong__)}r.prototype.__isLong__,Object.defineProperty(r.prototype,"__isLong__",{value:!0}),r.isLong=a;var s={},i={};function o(e,t){var n,r,a;return t?(a=0<=(e>>>=0)&&e<256)&&(r=i[e])?r:(n=l(e,(0|e)<0?-1:0,!0),a&&(i[e]=n),n):(a=-128<=(e|=0)&&e<128)&&(r=s[e])?r:(n=l(e,e<0?-1:0,!1),a&&(s[e]=n),n)}function u(e,t){if(isNaN(e))return t?b:y;if(t){if(e<0)return b;if(e>=f)return I}else{if(e<=-m)return S;if(e+1>=m)return k}return e<0?u(-e,t).neg():l(e%p|0,e/p|0,t)}function l(e,t,n){return new r(e,t,n)}r.fromInt=o,r.fromNumber=u,r.fromBits=l;var c=Math.pow;function h(e,t,n){if(0===e.length)throw Error("empty string");if("NaN"===e||"Infinity"===e||"+Infinity"===e||"-Infinity"===e)return y;if("number"==typeof t?(n=t,t=!1):t=!!t,(n=n||10)<2||36<n)throw RangeError("radix");var r;if((r=e.indexOf("-"))>0)throw Error("interior hyphen");if(0===r)return h(e.substring(1),t,n).neg();for(var a=u(c(n,8)),s=y,i=0;i<e.length;i+=8){var o=Math.min(8,e.length-i),l=parseInt(e.substring(i,i+o),n);if(o<8){var d=u(c(n,o));s=s.mul(d).add(u(l))}else s=(s=s.mul(a)).add(u(l))}return s.unsigned=t,s}function d(e,t){return"number"==typeof e?u(e,t):"string"==typeof e?h(e,t):l(e.low,e.high,"boolean"==typeof t?t:e.unsigned)}r.fromString=h,r.fromValue=d;var p=4294967296,f=p*p,m=f/2,g=o(1<<24),y=o(0);r.ZERO=y;var b=o(0,!0);r.UZERO=b;var x=o(1);r.ONE=x;var w=o(1,!0);r.UONE=w;var v=o(-1);r.NEG_ONE=v;var k=l(-1,2147483647,!1);r.MAX_VALUE=k;var I=l(-1,-1,!0);r.MAX_UNSIGNED_VALUE=I;var S=l(0,-2147483648,!1);r.MIN_VALUE=S;var N=r.prototype;N.toInt=function(){return this.unsigned?this.low>>>0:this.low},N.toNumber=function(){return this.unsigned?(this.high>>>0)*p+(this.low>>>0):this.high*p+(this.low>>>0)},N.toString=function(e){if((e=e||10)<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(S)){var t=u(e),n=this.div(t),r=n.mul(t).sub(this);return n.toString(e)+r.toInt().toString(e)}return"-"+this.neg().toString(e)}for(var a=u(c(e,6),this.unsigned),s=this,i="";;){var o=s.div(a),l=(s.sub(o.mul(a)).toInt()>>>0).toString(e);if((s=o).isZero())return l+i;for(;l.length<6;)l="0"+l;i=""+l+i}},N.getHighBits=function(){return this.high},N.getHighBitsUnsigned=function(){return this.high>>>0},N.getLowBits=function(){return this.low},N.getLowBitsUnsigned=function(){return this.low>>>0},N.getNumBitsAbs=function(){if(this.isNegative())return this.eq(S)?64:this.neg().getNumBitsAbs();for(var e=0!=this.high?this.high:this.low,t=31;t>0&&0==(e&1<<t);t--);return 0!=this.high?t+33:t+1},N.isZero=function(){return 0===this.high&&0===this.low},N.eqz=N.isZero,N.isNegative=function(){return!this.unsigned&&this.high<0},N.isPositive=function(){return this.unsigned||this.high>=0},N.isOdd=function(){return 1==(1&this.low)},N.isEven=function(){return 0==(1&this.low)},N.equals=function(e){return a(e)||(e=d(e)),(this.unsigned===e.unsigned||this.high>>>31!=1||e.high>>>31!=1)&&this.high===e.high&&this.low===e.low},N.eq=N.equals,N.notEquals=function(e){return!this.eq(e)},N.neq=N.notEquals,N.ne=N.notEquals,N.lessThan=function(e){return this.comp(e)<0},N.lt=N.lessThan,N.lessThanOrEqual=function(e){return this.comp(e)<=0},N.lte=N.lessThanOrEqual,N.le=N.lessThanOrEqual,N.greaterThan=function(e){return this.comp(e)>0},N.gt=N.greaterThan,N.greaterThanOrEqual=function(e){return this.comp(e)>=0},N.gte=N.greaterThanOrEqual,N.ge=N.greaterThanOrEqual,N.compare=function(e){if(a(e)||(e=d(e)),this.eq(e))return 0;var t=this.isNegative(),n=e.isNegative();return t&&!n?-1:!t&&n?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1},N.comp=N.compare,N.negate=function(){return!this.unsigned&&this.eq(S)?S:this.not().add(x)},N.neg=N.negate,N.add=function(e){a(e)||(e=d(e));var t=this.high>>>16,n=65535&this.high,r=this.low>>>16,s=65535&this.low,i=e.high>>>16,o=65535&e.high,u=e.low>>>16,c=0,h=0,p=0,f=0;return p+=(f+=s+(65535&e.low))>>>16,h+=(p+=r+u)>>>16,c+=(h+=n+o)>>>16,c+=t+i,l((p&=65535)<<16|(f&=65535),(c&=65535)<<16|(h&=65535),this.unsigned)},N.subtract=function(e){return a(e)||(e=d(e)),this.add(e.neg())},N.sub=N.subtract,N.multiply=function(e){if(this.isZero())return y;if(a(e)||(e=d(e)),n)return l(n.mul(this.low,this.high,e.low,e.high),n.get_high(),this.unsigned);if(e.isZero())return y;if(this.eq(S))return e.isOdd()?S:y;if(e.eq(S))return this.isOdd()?S:y;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(g)&&e.lt(g))return u(this.toNumber()*e.toNumber(),this.unsigned);var t=this.high>>>16,r=65535&this.high,s=this.low>>>16,i=65535&this.low,o=e.high>>>16,c=65535&e.high,h=e.low>>>16,p=65535&e.low,f=0,m=0,b=0,x=0;return b+=(x+=i*p)>>>16,m+=(b+=s*p)>>>16,b&=65535,m+=(b+=i*h)>>>16,f+=(m+=r*p)>>>16,m&=65535,f+=(m+=s*h)>>>16,m&=65535,f+=(m+=i*c)>>>16,f+=t*p+r*h+s*c+i*o,l((b&=65535)<<16|(x&=65535),(f&=65535)<<16|(m&=65535),this.unsigned)},N.mul=N.multiply,N.divide=function(e){if(a(e)||(e=d(e)),e.isZero())throw Error("division by zero");var t,r,s;if(n)return this.unsigned||-2147483648!==this.high||-1!==e.low||-1!==e.high?l((this.unsigned?n.div_u:n.div_s)(this.low,this.high,e.low,e.high),n.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?b:y;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return b;if(e.gt(this.shru(1)))return w;s=b}else{if(this.eq(S))return e.eq(x)||e.eq(v)?S:e.eq(S)?x:(t=this.shr(1).div(e).shl(1)).eq(y)?e.isNegative()?x:v:(r=this.sub(e.mul(t)),s=t.add(r.div(e)));if(e.eq(S))return this.unsigned?b:y;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();s=y}for(r=this;r.gte(e);){t=Math.max(1,Math.floor(r.toNumber()/e.toNumber()));for(var i=Math.ceil(Math.log(t)/Math.LN2),o=i<=48?1:c(2,i-48),h=u(t),p=h.mul(e);p.isNegative()||p.gt(r);)p=(h=u(t-=o,this.unsigned)).mul(e);h.isZero()&&(h=x),s=s.add(h),r=r.sub(p)}return s},N.div=N.divide,N.modulo=function(e){return a(e)||(e=d(e)),n?l((this.unsigned?n.rem_u:n.rem_s)(this.low,this.high,e.low,e.high),n.get_high(),this.unsigned):this.sub(this.div(e).mul(e))},N.mod=N.modulo,N.rem=N.modulo,N.not=function(){return l(~this.low,~this.high,this.unsigned)},N.and=function(e){return a(e)||(e=d(e)),l(this.low&e.low,this.high&e.high,this.unsigned)},N.or=function(e){return a(e)||(e=d(e)),l(this.low|e.low,this.high|e.high,this.unsigned)},N.xor=function(e){return a(e)||(e=d(e)),l(this.low^e.low,this.high^e.high,this.unsigned)},N.shiftLeft=function(e){return a(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?l(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):l(0,this.low<<e-32,this.unsigned)},N.shl=N.shiftLeft,N.shiftRight=function(e){return a(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?l(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):l(this.high>>e-32,this.high>=0?0:-1,this.unsigned)},N.shr=N.shiftRight,N.shiftRightUnsigned=function(e){if(a(e)&&(e=e.toInt()),0==(e&=63))return this;var t=this.high;return e<32?l(this.low>>>e|t<<32-e,t>>>e,this.unsigned):l(32===e?t:t>>>e-32,0,this.unsigned)},N.shru=N.shiftRightUnsigned,N.shr_u=N.shiftRightUnsigned,N.toSigned=function(){return this.unsigned?l(this.low,this.high,!1):this},N.toUnsigned=function(){return this.unsigned?this:l(this.low,this.high,!0)},N.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()},N.toBytesLE=function(){var e=this.high,t=this.low;return[255&t,t>>>8&255,t>>>16&255,t>>>24,255&e,e>>>8&255,e>>>16&255,e>>>24]},N.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,255&e,t>>>24,t>>>16&255,t>>>8&255,255&t]},r.fromBytes=function(e,t,n){return n?r.fromBytesLE(e,t):r.fromBytesBE(e,t)},r.fromBytesLE=function(e,t){return new r(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)},r.fromBytesBE=function(e,t){return new r(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)}}}),w=g({"(disabled):node_modules/.pnpm/node-fetch@2.6.1/node_modules/node-fetch/browser.js"(){}}),v=g({"node_modules/.pnpm/seedrandom@2.4.3/node_modules/seedrandom/lib/alea.js"(e,t){!function(e,t,n){function r(e){var t,n=this,r=(t=4022871197,function(e){e=e.toString();for(var n=0;n<e.length;n++){var r=.02519603282416938*(t+=e.charCodeAt(n));r-=t=r>>>0,t=(r*=t)>>>0,t+=4294967296*(r-=t)}return 2.3283064365386963e-10*(t>>>0)});n.next=function(){var e=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=e-(n.c=0|e)},n.c=1,n.s0=r(" "),n.s1=r(" "),n.s2=r(" "),n.s0-=r(e),n.s0<0&&(n.s0+=1),n.s1-=r(e),n.s1<0&&(n.s1+=1),n.s2-=r(e),n.s2<0&&(n.s2+=1),r=null}function a(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function s(e,t){var n=new r(e),s=t&&t.state,i=n.next;return i.int32=function(){return 4294967296*n.next()|0},i.double=function(){return i()+11102230246251565e-32*(2097152*i()|0)},i.quick=i,s&&("object"==typeof s&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.alea=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)}}),k=g({"node_modules/.pnpm/seedrandom@2.4.3/node_modules/seedrandom/lib/xor128.js"(e,t){!function(e,t,n){function r(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next()}function a(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function s(e,t){var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,s&&("object"==typeof s&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.xor128=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)}}),I=g({"node_modules/.pnpm/seedrandom@2.4.3/node_modules/seedrandom/lib/xorwow.js"(e,t){!function(e,t,n){function r(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function a(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function s(e,t){var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,s&&("object"==typeof s&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.xorwow=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)}}),S=g({"node_modules/.pnpm/seedrandom@2.4.3/node_modules/seedrandom/lib/xorshift7.js"(e,t){!function(e,t,n){function r(e){var t=this;t.next=function(){var e,n,r=t.x,a=t.i;return e=r[a],n=(e^=e>>>7)^e<<24,n^=(e=r[a+1&7])^e>>>10,n^=(e=r[a+3&7])^e>>>3,n^=(e=r[a+4&7])^e<<7,e=r[a+7&7],n^=(e^=e<<13)^e<<9,r[a]=n,t.i=a+1&7,n},function(e,t){var n,r=[];if(t===(0|t))r[0]=t;else for(t=""+t,n=0;n<t.length;++n)r[7&n]=r[7&n]<<15^t.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],e.x=r,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function a(e,t){return t.x=e.x.slice(),t.i=e.i,t}function s(e,t){null==e&&(e=+new Date);var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,s&&(s.x&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.xorshift7=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)}}),N=g({"node_modules/.pnpm/seedrandom@2.4.3/node_modules/seedrandom/lib/xor4096.js"(e,t){!function(e,t,n){function r(e){var t=this;t.next=function(){var e,n,r=t.w,a=t.X,s=t.i;return t.w=r=r+1640531527|0,n=a[s+34&127],e=a[s=s+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=a[s]=n^e,t.i=s,n+(r^r>>>16)|0},function(e,t){var n,r,a,s,i,o=[],u=128;for(t===(0|t)?(r=t,t=null):(t+="\0",r=0,u=Math.max(u,t.length)),a=0,s=-32;s<u;++s)t&&(r^=t.charCodeAt((s+32)%t.length)),0===s&&(i=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,s>=0&&(i=i+1640531527|0,a=0==(n=o[127&s]^=r+i)?a+1:0);for(a>=128&&(o[127&(t&&t.length||0)]=-1),a=127,s=512;s>0;--s)r=o[a+34&127],n=o[a=a+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,o[a]=r^n;e.w=i,e.X=o,e.i=a}(t,e)}function a(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function s(e,t){null==e&&(e=+new Date);var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,s&&(s.X&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.xor4096=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)}}),T=g({"node_modules/.pnpm/seedrandom@2.4.3/node_modules/seedrandom/lib/tychei.js"(e,t){!function(e,t,n){function r(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,r=t.d,a=t.a;return e=e<<25^e>>>7^n,n=n-r|0,r=r<<24^r>>>8^a,a=a-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-r|0,t.d=r<<16^n>>>16^a,t.a=a-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var r=0;r<n.length+20;r++)t.b^=0|n.charCodeAt(r),t.next()}function a(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function s(e,t){var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,s&&("object"==typeof s&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.tychei=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)}}),C=g({"(disabled):crypto"(){}}),$=g({"node_modules/.pnpm/seedrandom@2.4.3/node_modules/seedrandom/seedrandom.js"(e,t){!function(e,r){var a,s=this,i=256,o=r.pow(i,6),u=r.pow(2,52),l=2*u,c=255;function h(t,n,c){var h=[],y=m(f((n=1==n?{entropy:!0}:n||{}).entropy?[t,g(e)]:null==t?function(){try{var t;return a&&(t=a.randomBytes)?t=t(i):(t=new Uint8Array(i),(s.crypto||s.msCrypto).getRandomValues(t)),g(t)}catch(t){var n=s.navigator,r=n&&n.plugins;return[+new Date,s,r,s.screen,g(e)]}}():t,3),h),b=new d(h),x=function(){for(var e=b.g(6),t=o,n=0;e<u;)e=(e+n)*i,t*=i,n=b.g(1);for(;e>=l;)e/=2,t/=2,n>>>=1;return(e+n)/t};return x.int32=function(){return 0|b.g(4)},x.quick=function(){return b.g(4)/4294967296},x.double=x,m(g(b.S),e),(n.pass||c||function(e,t,n,a){return a&&(a.S&&p(a,b),e.state=function(){return p(b,{})}),n?(r.random=e,t):e})(x,y,"global"in n?n.global:this==r,n.state)}function d(e){var t,n=e.length,r=this,a=0,s=r.i=r.j=0,o=r.S=[];for(n||(e=[n++]);a<i;)o[a]=a++;for(a=0;a<i;a++)o[a]=o[s=c&s+e[a%n]+(t=o[a])],o[s]=t;(r.g=function(e){for(var t,n=0,a=r.i,s=r.j,o=r.S;e--;)t=o[a=c&a+1],n=n*i+o[c&(o[a]=o[s=c&s+t])+(o[s]=t)];return r.i=a,r.j=s,n})(i)}function p(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function f(e,t){var n,r=[],a=typeof e;if(t&&"object"==a)for(n in e)try{r.push(f(e[n],t-1))}catch(e){}return r.length?r:"string"==a?e:e+"\0"}function m(e,t){for(var n,r=e+"",a=0;a<r.length;)t[c&a]=c&(n^=19*t[c&a])+r.charCodeAt(a++);return g(t)}function g(e){return String.fromCharCode.apply(0,e)}if(r.seedrandom=h,m(r.random(),e),"object"==typeof t&&t.exports){t.exports=h;try{a=C()}catch(e){}}else"function"==typeof define&&n.amdO&&define((function(){return h}))}([],Math)}}),_=g({"node_modules/.pnpm/seedrandom@2.4.3/node_modules/seedrandom/index.js"(e,t){var n=v(),r=k(),a=I(),s=S(),i=N(),o=T(),u=$();u.alea=n,u.xor128=r,u.xorwow=a,u.xorshift7=s,u.xor4096=i,u.tychei=o,t.exports=u}}),E=g({"node_modules/.pnpm/seedrandom@3.0.5/node_modules/seedrandom/lib/alea.js"(e,t){!function(e,t,n){function r(e){var t,n=this,r=(t=4022871197,function(e){e=String(e);for(var n=0;n<e.length;n++){var r=.02519603282416938*(t+=e.charCodeAt(n));r-=t=r>>>0,t=(r*=t)>>>0,t+=4294967296*(r-=t)}return 2.3283064365386963e-10*(t>>>0)});n.next=function(){var e=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=e-(n.c=0|e)},n.c=1,n.s0=r(" "),n.s1=r(" "),n.s2=r(" "),n.s0-=r(e),n.s0<0&&(n.s0+=1),n.s1-=r(e),n.s1<0&&(n.s1+=1),n.s2-=r(e),n.s2<0&&(n.s2+=1),r=null}function a(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function s(e,t){var n=new r(e),s=t&&t.state,i=n.next;return i.int32=function(){return 4294967296*n.next()|0},i.double=function(){return i()+11102230246251565e-32*(2097152*i()|0)},i.quick=i,s&&("object"==typeof s&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.alea=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)}}),A=g({"node_modules/.pnpm/seedrandom@3.0.5/node_modules/seedrandom/lib/xor128.js"(e,t){!function(e,t,n){function r(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next()}function a(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function s(e,t){var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,s&&("object"==typeof s&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.xor128=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)}}),F=g({"node_modules/.pnpm/seedrandom@3.0.5/node_modules/seedrandom/lib/xorwow.js"(e,t){!function(e,t,n){function r(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function a(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function s(e,t){var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,s&&("object"==typeof s&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.xorwow=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)}}),R=g({"node_modules/.pnpm/seedrandom@3.0.5/node_modules/seedrandom/lib/xorshift7.js"(e,t){!function(e,t,n){function r(e){var t=this;t.next=function(){var e,n,r=t.x,a=t.i;return e=r[a],n=(e^=e>>>7)^e<<24,n^=(e=r[a+1&7])^e>>>10,n^=(e=r[a+3&7])^e>>>3,n^=(e=r[a+4&7])^e<<7,e=r[a+7&7],n^=(e^=e<<13)^e<<9,r[a]=n,t.i=a+1&7,n},function(e,t){var n,r=[];if(t===(0|t))r[0]=t;else for(t=""+t,n=0;n<t.length;++n)r[7&n]=r[7&n]<<15^t.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],e.x=r,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function a(e,t){return t.x=e.x.slice(),t.i=e.i,t}function s(e,t){null==e&&(e=+new Date);var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,s&&(s.x&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.xorshift7=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)}}),D=g({"node_modules/.pnpm/seedrandom@3.0.5/node_modules/seedrandom/lib/xor4096.js"(e,t){!function(e,t,n){function r(e){var t=this;t.next=function(){var e,n,r=t.w,a=t.X,s=t.i;return t.w=r=r+1640531527|0,n=a[s+34&127],e=a[s=s+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=a[s]=n^e,t.i=s,n+(r^r>>>16)|0},function(e,t){var n,r,a,s,i,o=[],u=128;for(t===(0|t)?(r=t,t=null):(t+="\0",r=0,u=Math.max(u,t.length)),a=0,s=-32;s<u;++s)t&&(r^=t.charCodeAt((s+32)%t.length)),0===s&&(i=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,s>=0&&(i=i+1640531527|0,a=0==(n=o[127&s]^=r+i)?a+1:0);for(a>=128&&(o[127&(t&&t.length||0)]=-1),a=127,s=512;s>0;--s)r=o[a+34&127],n=o[a=a+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,o[a]=r^n;e.w=i,e.X=o,e.i=a}(t,e)}function a(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function s(e,t){null==e&&(e=+new Date);var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,s&&(s.X&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.xor4096=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)}}),M=g({"node_modules/.pnpm/seedrandom@3.0.5/node_modules/seedrandom/lib/tychei.js"(e,t){!function(e,t,n){function r(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,r=t.d,a=t.a;return e=e<<25^e>>>7^n,n=n-r|0,r=r<<24^r>>>8^a,a=a-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-r|0,t.d=r<<16^n>>>16^a,t.a=a-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var r=0;r<n.length+20;r++)t.b^=0|n.charCodeAt(r),t.next()}function a(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function s(e,t){var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,s&&("object"==typeof s&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.tychei=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)}}),O=g({"node_modules/.pnpm/seedrandom@3.0.5/node_modules/seedrandom/seedrandom.js"(e,t){!function(e,r,a){var s,i=256,o=a.pow(i,6),u=a.pow(2,52),l=2*u,c=255;function h(t,n,c){var h=[],y=m(f((n=1==n?{entropy:!0}:n||{}).entropy?[t,g(r)]:null==t?function(){try{var t;return s&&(t=s.randomBytes)?t=t(i):(t=new Uint8Array(i),(e.crypto||e.msCrypto).getRandomValues(t)),g(t)}catch(t){var n=e.navigator,a=n&&n.plugins;return[+new Date,e,a,e.screen,g(r)]}}():t,3),h),b=new d(h),x=function(){for(var e=b.g(6),t=o,n=0;e<u;)e=(e+n)*i,t*=i,n=b.g(1);for(;e>=l;)e/=2,t/=2,n>>>=1;return(e+n)/t};return x.int32=function(){return 0|b.g(4)},x.quick=function(){return b.g(4)/4294967296},x.double=x,m(g(b.S),r),(n.pass||c||function(e,t,n,r){return r&&(r.S&&p(r,b),e.state=function(){return p(b,{})}),n?(a.random=e,t):e})(x,y,"global"in n?n.global:this==a,n.state)}function d(e){var t,n=e.length,r=this,a=0,s=r.i=r.j=0,o=r.S=[];for(n||(e=[n++]);a<i;)o[a]=a++;for(a=0;a<i;a++)o[a]=o[s=c&s+e[a%n]+(t=o[a])],o[s]=t;(r.g=function(e){for(var t,n=0,a=r.i,s=r.j,o=r.S;e--;)t=o[a=c&a+1],n=n*i+o[c&(o[a]=o[s=c&s+t])+(o[s]=t)];return r.i=a,r.j=s,n})(i)}function p(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function f(e,t){var n,r=[],a=typeof e;if(t&&"object"==a)for(n in e)try{r.push(f(e[n],t-1))}catch(e){}return r.length?r:"string"==a?e:e+"\0"}function m(e,t){for(var n,r=e+"",a=0;a<r.length;)t[c&a]=c&(n^=19*t[c&a])+r.charCodeAt(a++);return g(t)}function g(e){return String.fromCharCode.apply(0,e)}if(m(a.random(),r),"object"==typeof t&&t.exports){t.exports=h;try{s=C()}catch(e){}}else"function"==typeof define&&n.amdO?define((function(){return h})):a.seedrandom=h}("undefined"!=typeof self?self:e,[],Math)}}),L=g({"node_modules/.pnpm/seedrandom@3.0.5/node_modules/seedrandom/index.js"(e,t){var n=E(),r=A(),a=F(),s=R(),i=D(),o=M(),u=O();u.alea=n,u.xor128=r,u.xorwow=a,u.xorshift7=s,u.xor4096=i,u.tychei=o,t.exports=u}}),z=g({"(disabled):node_modules/.pnpm/string_decoder@1.1.1/node_modules/string_decoder/lib/string_decoder.js"(){}}),P=g({"(disabled):path"(){}}),B=g({"(disabled):worker_threads"(){}}),W=g({"(disabled):perf_hooks"(){}}),V=g({"node_modules/.pnpm/@tensorflow+tfjs-backend-wasm@3.8.0/node_modules/@tensorflow/tfjs-backend-wasm/wasm-out/tfjs-backend-wasm-threaded-simd.js"(e,t){var a,s=(a=(a="undefined"!=typeof document&&document.currentScript?document.currentScript.src:void 0)||r,function(e){function t(){return F.buffer!=M&&ne(F.buffer),O}function r(){return F.buffer!=M&&ne(F.buffer),L}function s(){return F.buffer!=M&&ne(F.buffer),z}function i(){return F.buffer!=M&&ne(F.buffer),V}function o(){return F.buffer!=M&&ne(F.buffer),U}var u,l,c=void 0!==(e=e||{})?e:{};c.ready=new Promise((function(e,t){u=e,l=t}));var h,d={};for(h in c)c.hasOwnProperty(h)&&(d[h]=c[h]);var p=[],f=function(e,t){throw t},g=!1,y=!1,b=!1,x=!1;g="object"==typeof window,y="function"==typeof importScripts,b="object"==typeof process&&"object"==typeof process.versions&&"string"==typeof process.versions.node,x=!g&&!b&&!y;var w=c.ENVIRONMENT_IS_PTHREAD||!1;w&&(M=c.buffer);var v,k,I,S,N,T="";function C(e){return c.locateFile?c.locateFile(e,T):T+e}if(b){var $;T=y?P().dirname(T)+"/":"//",v=function(e,t){return S||(S=m("fs")),N||(N=P()),e=N.normalize(e),S.readFileSync(e,t?null:"utf8")},I=function(e){var t=v(e,!0);return t.buffer||(t=new Uint8Array(t)),H(t.buffer),t},process.argv.length>1&&process.argv[1].replace(/\\/g,"/"),p=process.argv.slice(2),process.on("uncaughtException",(function(e){if(!(e instanceof cn))throw e})),process.on("unhandledRejection",ve),f=function(e){process.exit(e)},c.inspect=function(){return"[Emscripten Module object]"};try{$=B()}catch(e){throw console.error('The "worker_threads" module is not supported in this node.js build - perhaps a newer version is needed?'),e}n.g.Worker=$.Worker}else x?("undefined"!=typeof read&&(v=function(e){return read(e)}),I=function(e){var t;return"function"==typeof readbuffer?new Uint8Array(readbuffer(e)):(H("object"==typeof(t=read(e,"binary"))),t)},"undefined"!=typeof scriptArgs?p=scriptArgs:void 0!==arguments&&(p=arguments),"function"==typeof quit&&(f=function(e){quit(e)}),"undefined"!=typeof print&&("undefined"==typeof console&&(console={}),console.log=print,console.warn=console.error="undefined"!=typeof printErr?printErr:print)):(g||y)&&(y?T=self.location.href:"undefined"!=typeof document&&document.currentScript&&(T=document.currentScript.src),void 0!==a&&a&&(T=a),T=0!==T.indexOf("blob:")?T.substr(0,T.lastIndexOf("/")+1):"",b?(v=function(e,t){return S||(S=m("fs")),N||(N=P()),e=N.normalize(e),S.readFileSync(e,t?null:"utf8")},I=function(e){var t=v(e,!0);return t.buffer||(t=new Uint8Array(t)),H(t.buffer),t}):(v=function(e){var t=new XMLHttpRequest;return t.open("GET",e,!1),t.send(null),t.responseText},y&&(I=function(e){var t=new XMLHttpRequest;return t.open("GET",e,!1),t.responseType="arraybuffer",t.send(null),new Uint8Array(t.response)}),k=function(e,t,n){var r=new XMLHttpRequest;r.open("GET",e,!0),r.responseType="arraybuffer",r.onload=function(){200==r.status||0==r.status&&r.response?t(r.response):n()},r.onerror=n,r.send(null)}));b&&"undefined"==typeof performance&&(n.g.performance=W().performance);var _,E=c.print||console.log.bind(console),A=c.printErr||console.warn.bind(console);for(h in d)d.hasOwnProperty(h)&&(c[h]=d[h]);d=null,c.arguments&&(p=c.arguments),c.thisProgram&&c.thisProgram,c.quit&&(f=c.quit),Atomics.load,Atomics.store,Atomics.compareExchange,c.wasmBinary&&(_=c.wasmBinary);var F,R,D=c.noExitRuntime||!0;"object"!=typeof WebAssembly&&ve("no native wasm support detected");var M,O,L,z,V,U,G=!1;function H(e,t){e||ve("Assertion failed: "+t)}function j(e){var t=c["_"+e];return H(t,"Cannot call unknown function "+e+", make sure it is exported"),t}function q(e,t,n,r,a){var s={string:function(e){var t=0;if(null!=e&&0!==e){var n=1+(e.length<<2);J(e,t=an(n),n)}return t},array:function(e){var t=an(e.length);return ee(e,t),t}},i=j(e),o=[],u=0;if(r)for(var l=0;l<r.length;l++){var c=s[n[l]];c?(0===u&&(u=nn()),o[l]=c(r[l])):o[l]=r[l]}var h,d=i.apply(null,o);return h=d,d="string"===t?Y(h):"boolean"===t?Boolean(h):h,0!==u&&rn(u),d}function K(e,t,n,r){var a=(n=n||[]).every((function(e){return"number"===e}));return"string"!==t&&a&&!r?j(e):function(){return q(e,t,n,arguments)}}function X(e,t,n){for(var r=t+n,a="";!(t>=r);){var s=e[t++];if(!s)return a;if(128&s){var i=63&e[t++];if(192!=(224&s)){var o=63&e[t++];if((s=224==(240&s)?(15&s)<<12|i<<6|o:(7&s)<<18|i<<12|o<<6|63&e[t++])<65536)a+=String.fromCharCode(s);else{var u=s-65536;a+=String.fromCharCode(55296|u>>10,56320|1023&u)}}else a+=String.fromCharCode((31&s)<<6|i)}else a+=String.fromCharCode(s)}return a}function Y(e,t){return e?X(r(),e,t):""}function Z(e,t,n,r){if(!(r>0))return 0;for(var a=n,s=n+r-1,i=0;i<e.length;++i){var o=e.charCodeAt(i);if(o>=55296&&o<=57343&&(o=65536+((1023&o)<<10)|1023&e.charCodeAt(++i)),o<=127){if(n>=s)break;t[n++]=o}else if(o<=2047){if(n+1>=s)break;t[n++]=192|o>>6,t[n++]=128|63&o}else if(o<=65535){if(n+2>=s)break;t[n++]=224|o>>12,t[n++]=128|o>>6&63,t[n++]=128|63&o}else{if(n+3>=s)break;t[n++]=240|o>>18,t[n++]=128|o>>12&63,t[n++]=128|o>>6&63,t[n++]=128|63&o}}return t[n]=0,n-a}function J(e,t,n){return Z(e,r(),t,n)}function Q(e){for(var t=0,n=0;n<e.length;++n){var r=e.charCodeAt(n);r>=55296&&r<=57343&&(r=65536+((1023&r)<<10)|1023&e.charCodeAt(++n)),r<=127?++t:t+=r<=2047?2:r<=65535?3:4}return t}function ee(e,n){t().set(e,n)}function te(e,t){return e%t>0&&(e+=t-e%t),e}function ne(e){M=e,c.HEAP8=O=new Int8Array(e),c.HEAP16=new Int16Array(e),c.HEAP32=z=new Int32Array(e),c.HEAPU8=L=new Uint8Array(e),c.HEAPU16=new Uint16Array(e),c.HEAPU32=V=new Uint32Array(e),c.HEAPF32=new Float32Array(e),c.HEAPF64=U=new Float64Array(e)}var re,ae=c.INITIAL_MEMORY||16777216;if(w)F=c.wasmMemory,M=c.buffer;else if(c.wasmMemory)F=c.wasmMemory;else if(!((F=new WebAssembly.Memory({initial:ae/65536,maximum:32768,shared:!0})).buffer instanceof SharedArrayBuffer))throw A("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),b&&console.log("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and also use a recent version)"),Error("bad memory");F&&(M=F.buffer),ae=M.byteLength,ne(M);var se=[],ie=[],oe=[],ue=[],le=[];function ce(){if(!w){if(c.preRun)for("function"==typeof c.preRun&&(c.preRun=[c.preRun]);c.preRun.length;)fe(c.preRun.shift());Re(se)}}function he(){w||Re(ie)}function de(){w||Re(oe)}function pe(){if(!w){if(c.postRun)for("function"==typeof c.postRun&&(c.postRun=[c.postRun]);c.postRun.length;)me(c.postRun.shift());Re(le)}}function fe(e){se.unshift(e)}function me(e){le.unshift(e)}w||ie.push({func:function(){Vt()}});var ge=0,ye=null,be=null;function xe(e){H(!w,"addRunDependency cannot be used in a pthread worker"),ge++,c.monitorRunDependencies&&c.monitorRunDependencies(ge)}function we(e){if(ge--,c.monitorRunDependencies&&c.monitorRunDependencies(ge),0==ge&&(null!==ye&&(clearInterval(ye),ye=null),be)){var t=be;be=null,t()}}function ve(e){c.onAbort&&c.onAbort(e),w&&console.error("Pthread aborting at "+(new Error).stack),A(e+=""),G=!0,e="abort("+e+"). Build with -s ASSERTIONS=1 for more info.";var t=new WebAssembly.RuntimeError(e);throw l(t),t}function ke(e,t){return String.prototype.startsWith?e.startsWith(t):0===e.indexOf(t)}c.preloadedImages={},c.preloadedAudios={};var Ie="data:application/octet-stream;base64,";function Se(e){return ke(e,Ie)}var Ne="file://";function Te(e){return ke(e,Ne)}var Ce="tfjs-backend-wasm-threaded-simd.wasm";function $e(e){try{if(e==Ce&&_)return new Uint8Array(_);if(I)return I(e);throw"both async and sync fetching of the wasm failed"}catch(e){ve(e)}}function _e(){if(!_&&(g||y)){if("function"==typeof fetch&&!Te(Ce))return fetch(Ce,{credentials:"same-origin"}).then((function(e){if(!e.ok)throw"failed to load wasm binary file at '"+Ce+"'";return e.arrayBuffer()})).catch((function(){return $e(Ce)}));if(k)return new Promise((function(e,t){k(Ce,(function(t){e(new Uint8Array(t))}),t)}))}return Promise.resolve().then((function(){return $e(Ce)}))}function Ee(){var e={a:Wt};function t(e,t){var n=e.exports;if(c.asm=n,re=c.asm.F,R=t,!w){var r=Pe.unusedWorkers.length;Pe.unusedWorkers.forEach((function(e){Pe.loadWasmModuleToWorker(e,(function(){--r||we()}))}))}}function n(e){t(e.instance,e.module)}function r(t){return _e().then((function(t){return WebAssembly.instantiate(t,e)})).then(t,(function(e){A("failed to asynchronously prepare wasm: "+e),ve(e)}))}if(w||xe(),c.instantiateWasm)try{return c.instantiateWasm(e,t)}catch(e){return A("Module.instantiateWasm callback failed with error: "+e),!1}return(_||"function"!=typeof WebAssembly.instantiateStreaming||Se(Ce)||Te(Ce)||"function"!=typeof fetch?r(n):fetch(Ce,{credentials:"same-origin"}).then((function(t){return WebAssembly.instantiateStreaming(t,e).then(n,(function(e){return A("wasm streaming compile failed: "+e),A("falling back to ArrayBuffer instantiation"),r(n)}))}))).catch(l),{}}Se(Ce)||(Ce=C(Ce));var Ae={9832:function(){throw"Canceled!"},9850:function(e,t){setTimeout((function(){Zt(e,t)}),0)}};function Fe(){Pe.initRuntime()}function Re(e){for(;e.length>0;){var t=e.shift();if("function"!=typeof t){var n=t.func;"number"==typeof n?void 0===t.arg?re.get(n)():re.get(n)(t.arg):n(void 0===t.arg?null:t.arg)}else t(c)}}function De(e,n){if(e<=0||e>t().length||!0&e||n<0)return-28;if(0==n)return 0;n>=2147483647&&(n=1/0);var r=Atomics.load(s(),ln>>2),a=0;if(r==e&&Atomics.compareExchange(s(),ln>>2,r,0)==r&&(a=1,--n<=0))return 1;var i=Atomics.notify(s(),e>>2,n);if(i>=0)return i+a;throw"Atomics.notify returned an unexpected value "+i}function Me(e){if(w)throw"Internal Error! killThread() can only ever be called from main application thread!";if(!e)throw"Internal Error! Null pthread_ptr in killThread!";s()[e+12>>2]=0;var t=Pe.pthreads[e];t.worker.terminate(),Pe.freeThreadData(t),Pe.runningWorkers.splice(Pe.runningWorkers.indexOf(t.worker),1),t.worker.pthread=void 0}function Oe(e){if(w)throw"Internal Error! cancelThread() can only ever be called from main application thread!";if(!e)throw"Internal Error! Null pthread_ptr in cancelThread!";Pe.pthreads[e].worker.postMessage({cmd:"cancel"})}function Le(e){if(w)throw"Internal Error! cleanupThread() can only ever be called from main application thread!";if(!e)throw"Internal Error! Null pthread_ptr in cleanupThread!";var t=Pe.pthreads[e];if(t){s()[e+12>>2]=0;var n=t.worker;Pe.returnWorkerToPool(n)}}c._emscripten_futex_wake=De;var ze,Pe={unusedWorkers:[],runningWorkers:[],initMainThreadBlock:function(){for(var e=Math.min(4,Math.max(1,(navigator.hardwareConcurrency||1)/2)),t=0;t<e;++t)Pe.allocateUnusedWorker()},initRuntime:function(){for(var e=Ut(228),t=0;t<57;++t)i()[e/4+t]=0;s()[e+12>>2]=e;var n=e+152;s()[n>>2]=n;var r=Ut(512);for(t=0;t<128;++t)i()[r/4+t]=0;Atomics.store(i(),e+100>>2,r),Atomics.store(i(),e+40>>2,e),tn(e,!y,1),Yt(e)},initWorker:function(){},pthreads:{},threadExitHandlers:[],setThreadStatus:function(){},runExitHandlers:function(){for(;Pe.threadExitHandlers.length>0;)Pe.threadExitHandlers.pop()();w&&qt()&&Kt()},runExitHandlersAndDeinitThread:function(e,t){Atomics.store(i(),e+56>>2,1),Atomics.store(i(),e+60>>2,0),Pe.runExitHandlers(),Atomics.store(i(),e+4>>2,t),Atomics.store(i(),e+0>>2,1),De(e+0,2147483647),tn(0,0,0)},threadExit:function(e){var t=qt();t&&(Pe.runExitHandlersAndDeinitThread(t,e),w&&postMessage({cmd:"exit"}))},threadCancel:function(){Pe.runExitHandlersAndDeinitThread(qt(),-1),postMessage({cmd:"cancelDone"})},terminateAllThreads:function(){for(var e in Pe.pthreads)(r=Pe.pthreads[e])&&r.worker&&Pe.returnWorkerToPool(r.worker);Pe.pthreads={};for(var t=0;t<Pe.unusedWorkers.length;++t)(n=Pe.unusedWorkers[t]).terminate();for(Pe.unusedWorkers=[],t=0;t<Pe.runningWorkers.length;++t){var n,r=(n=Pe.runningWorkers[t]).pthread;Pe.freeThreadData(r),n.terminate()}Pe.runningWorkers=[]},freeThreadData:function(e){if(e){if(e.threadInfoStruct){var t=s()[e.threadInfoStruct+100>>2];s()[e.threadInfoStruct+100>>2]=0,Gt(t),Gt(e.threadInfoStruct)}e.threadInfoStruct=0,e.allocatedOwnStack&&e.stackBase&&Gt(e.stackBase),e.stackBase=0,e.worker&&(e.worker.pthread=null)}},returnWorkerToPool:function(e){Pe.runWithoutMainThreadQueuedCalls((function(){delete Pe.pthreads[e.pthread.threadInfoStruct],Pe.unusedWorkers.push(e),Pe.runningWorkers.splice(Pe.runningWorkers.indexOf(e),1),Pe.freeThreadData(e.pthread),e.pthread=void 0}))},runWithoutMainThreadQueuedCalls:function(e){s()[un>>2]=0;try{e()}finally{s()[un>>2]=1}},receiveObjectTransfer:function(e){},loadWasmModuleToWorker:function(e,t){e.onmessage=function(n){var r=n.data,a=r.cmd;if(e.pthread&&(Pe.currentProxiedOperationCallerThread=e.pthread.threadInfoStruct),r.targetThread&&r.targetThread!=qt()){var s=Pe.pthreads[r.targetThread];return s?s.worker.postMessage(n.data,r.transferList):console.error('Internal error! Worker sent a message "'+a+'" to target pthread '+r.targetThread+", but that thread no longer exists!"),void(Pe.currentProxiedOperationCallerThread=void 0)}if("processQueuedMainThreadWork"===a)Xt();else if("spawnThread"===a)Ot(n.data);else if("cleanupThread"===a)Le(r.thread);else if("killThread"===a)Me(r.thread);else if("cancelThread"===a)Oe(r.thread);else if("loaded"===a)e.loaded=!0,t&&t(e),e.runPthread&&(e.runPthread(),delete e.runPthread);else if("print"===a)E("Thread "+r.threadId+": "+r.text);else if("printErr"===a)A("Thread "+r.threadId+": "+r.text);else if("alert"===a)alert("Thread "+r.threadId+": "+r.text);else if("exit"===a)e.pthread&&Atomics.load(i(),e.pthread.threadInfoStruct+64>>2)&&Pe.returnWorkerToPool(e);else if("exitProcess"===a)try{dn(r.returnCode)}catch(e){if(e instanceof cn)return;throw e}else"cancelDone"===a?Pe.returnWorkerToPool(e):"objectTransfer"===a?Pe.receiveObjectTransfer(n.data):"setimmediate"===n.data.target?e.postMessage(n.data):A("worker sent an unknown command "+a);Pe.currentProxiedOperationCallerThread=void 0},e.onerror=function(e){A("pthread sent an error! "+e.filename+":"+e.lineno+": "+e.message)},b&&(e.on("message",(function(t){e.onmessage({data:t})})),e.on("error",(function(t){e.onerror(t)})),e.on("exit",(function(e){}))),e.postMessage({cmd:"load",urlOrBlob:c.mainScriptUrlOrBlob||a,wasmMemory:F,wasmModule:R})},allocateUnusedWorker:function(){var e=C("tfjs-backend-wasm-threaded-simd.worker.js");Pe.unusedWorkers.push(new Worker(e))},getNewWorker:function(){return 0==Pe.unusedWorkers.length&&(Pe.allocateUnusedWorker(),Pe.loadWasmModuleToWorker(Pe.unusedWorkers[0])),Pe.unusedWorkers.length>0?Pe.unusedWorkers.pop():null},busySpinWait:function(e){for(var t=performance.now()+e;performance.now()<t;);}};function Be(e,t){sn(e,t),rn(e)}function We(){return D}function Ve(e,t){return re.get(e)(t)}function Ue(e,t,n,r){ve("Assertion failed: "+Y(e)+", at: "+[t?Y(t):"unknown filename",n,r?Y(r):"unknown function"])}function Ge(e,t){_main(e,t)}function He(e){return s()[Ht()>>2]=e,e}function je(e,t){if(w)return et(1,1,e,t)}function qe(e,t){if(e==t)postMessage({cmd:"processQueuedMainThreadWork"});else if(w)postMessage({targetThread:e,cmd:"processThreadQueue"});else{var n=Pe.pthreads[e],r=n&&n.worker;if(!r)return;r.postMessage({cmd:"processThreadQueue"})}return 1}function Ke(){ve()}function Xe(e,t,n){var r=rt(t,n);return Ae[e].apply(null,r)}function Ye(e,t){}function Ze(e,n,r){if(e<=0||e>t().length||!0&e)return-28;if(g){if(Atomics.load(s(),e>>2)!=n)return-6;var a=performance.now(),i=a+r;for(Atomics.exchange(s(),ln>>2,e);;){if((a=performance.now())>i)return Atomics.exchange(s(),ln>>2,0),-73;if(0==Atomics.exchange(s(),ln>>2,0))break;if(Xt(),Atomics.load(s(),e>>2)!=n)return-6;Atomics.exchange(s(),ln>>2,e)}return 0}var o=Atomics.wait(s(),e>>2,n,r);if("timed-out"===o)return-73;if("not-equal"===o)return-6;if("ok"===o)return 0;throw"Atomics.wait returned an unexpected value "+o}function Je(e,t,n){r().copyWithin(e,t,t+n)}function Qe(){return b?m("os").cpus().length:navigator.hardwareConcurrency}function et(e,t){for(var n=arguments.length-2,r=nn(),a=n,s=an(8*a),i=s>>3,u=0;u<n;u++){var l=arguments[2+u];o()[i+u]=l}var c=Qt(e,a,s,t);return rn(r),c}c.establishStackSpace=Be,c.getNoExitRuntime=We,c.invokeEntryPoint=Ve,ze=b?function(){var e=process.hrtime();return 1e3*e[0]+e[1]/1e6}:w?function(){return performance.now()-c.__performance_now_clock_drift}:"undefined"!=typeof dateNow?dateNow:function(){return performance.now()};var tt=[],nt=[];function rt(e,t){var n;for(nt.length=0,t>>=2;n=r()[e++];){var a=n<105;a&&1&t&&t++,nt.push(a?o()[t++>>1]:s()[t]),++t}return nt}function at(e,t,n){tt.length=t;for(var r=n>>3,a=0;a<t;a++)tt[a]=o()[r+a];return(e<0?Ae[-e-1]:Bt[e]).apply(null,tt)}function st(){return r().length}function it(e){try{return F.grow(e-M.byteLength+65535>>>16),ne(F.buffer),1}catch(e){}}function ot(e){var t=st();if(e<=t)return!1;var n=2147483648;if(e>n)return!1;for(var r=1;r<=4;r*=2){var a=t*(1+.2/r);if(a=Math.min(a,e+100663296),it(Math.min(n,te(Math.max(e,a),65536))))return!0}return!1}var ut={inEventHandler:0,removeAllEventListeners:function(){for(var e=ut.eventHandlers.length-1;e>=0;--e)ut._removeHandler(e);ut.eventHandlers=[],ut.deferredCalls=[]},registerRemoveEventListeners:function(){ut.removeEventListenersRegistered||(ue.push(ut.removeAllEventListeners),ut.removeEventListenersRegistered=!0)},deferredCalls:[],deferCall:function(e,t,n){function r(e,t){if(e.length!=t.length)return!1;for(var n in e)if(e[n]!=t[n])return!1;return!0}for(var a in ut.deferredCalls){var s=ut.deferredCalls[a];if(s.targetFunction==e&&r(s.argsList,n))return}ut.deferredCalls.push({targetFunction:e,precedence:t,argsList:n}),ut.deferredCalls.sort((function(e,t){return e.precedence<t.precedence}))},removeDeferredCalls:function(e){for(var t=0;t<ut.deferredCalls.length;++t)ut.deferredCalls[t].targetFunction==e&&(ut.deferredCalls.splice(t,1),--t)},canPerformEventHandlerRequests:function(){return ut.inEventHandler&&ut.currentEventHandler.allowsDeferredCalls},runDeferredCalls:function(){if(ut.canPerformEventHandlerRequests())for(var e=0;e<ut.deferredCalls.length;++e){var t=ut.deferredCalls[e];ut.deferredCalls.splice(e,1),--e,t.targetFunction.apply(null,t.argsList)}},eventHandlers:[],removeAllHandlersOnTarget:function(e,t){for(var n=0;n<ut.eventHandlers.length;++n)ut.eventHandlers[n].target!=e||t&&t!=ut.eventHandlers[n].eventTypeString||ut._removeHandler(n--)},_removeHandler:function(e){var t=ut.eventHandlers[e];t.target.removeEventListener(t.eventTypeString,t.eventListenerFunc,t.useCapture),ut.eventHandlers.splice(e,1)},registerOrRemoveHandler:function(e){var t=function(t){++ut.inEventHandler,ut.currentEventHandler=e,ut.runDeferredCalls(),e.handlerFunc(t),ut.runDeferredCalls(),--ut.inEventHandler};if(e.callbackfunc)e.eventListenerFunc=t,e.target.addEventListener(e.eventTypeString,t,e.useCapture),ut.eventHandlers.push(e),ut.registerRemoveEventListeners();else for(var n=0;n<ut.eventHandlers.length;++n)ut.eventHandlers[n].target==e.target&&ut.eventHandlers[n].eventTypeString==e.eventTypeString&&ut._removeHandler(n--)},queueEventHandlerOnThread_iiii:function(e,t,n,r,a){var i=nn(),o=an(12);s()[o>>2]=n,s()[o+4>>2]=r,s()[o+8>>2]=a,en(0,e,637534208,t,r,o),rn(i)},getTargetThreadForEventCallback:function(e){switch(e){case 1:return 0;case 2:return Pe.currentProxiedOperationCallerThread;default:return e}},getNodeNameForTarget:function(e){return e?e==window?"#window":e==screen?"#screen":e&&e.nodeName?e.nodeName:"":""},fullscreenEnabled:function(){return document.fullscreenEnabled||document.webkitFullscreenEnabled}};function lt(e){var t=Q(e)+1,n=Ut(t);return J(e,n,t),n}function ct(e,t,n,r){var a=nn(),i=an(12),o=0;t&&(o=lt(t)),s()[i>>2]=o,s()[i+4>>2]=n,s()[i+8>>2]=r,en(0,e,657457152,0,o,i),rn(a)}function ht(e,t,n,r){ct(e,t=t?Y(t):"",n,r)}function dt(e){return e>2?Y(e):e}var pt=[0,"undefined"!=typeof document?document:0,"undefined"!=typeof window?window:0];function ft(e){return e=dt(e),pt[e]||("undefined"!=typeof document?document.querySelector(e):void 0)}function mt(e){return ft(e)}function gt(e,t,n){var r=mt(e);if(!r)return-4;if(r.canvasSharedPtr&&(s()[r.canvasSharedPtr>>2]=t,s()[r.canvasSharedPtr+4>>2]=n),!r.offscreenCanvas&&r.controlTransferredOffscreen)return r.canvasSharedPtr?(ht(s()[r.canvasSharedPtr+8>>2],e,t,n),1):-4;r.offscreenCanvas&&(r=r.offscreenCanvas);var a=!1;if(r.GLctxObject&&r.GLctxObject.GLctx){var i=r.GLctxObject.GLctx.getParameter(2978);a=0===i[0]&&0===i[1]&&i[2]===r.width&&i[3]===r.height}return r.width=t,r.height=n,a&&r.GLctxObject.GLctx.viewport(0,0,t,n),0}function yt(e,t,n){return w?et(2,1,e,t,n):gt(e,t,n)}function bt(e,t,n){return mt(e)?gt(e,t,n):yt(e,t,n)}function xt(e){}function wt(e,t){}function vt(e){var t=e.getExtension("ANGLE_instanced_arrays");if(t)return e.vertexAttribDivisor=function(e,n){t.vertexAttribDivisorANGLE(e,n)},e.drawArraysInstanced=function(e,n,r,a){t.drawArraysInstancedANGLE(e,n,r,a)},e.drawElementsInstanced=function(e,n,r,a,s){t.drawElementsInstancedANGLE(e,n,r,a,s)},1}function kt(e){var t=e.getExtension("OES_vertex_array_object");if(t)return e.createVertexArray=function(){return t.createVertexArrayOES()},e.deleteVertexArray=function(e){t.deleteVertexArrayOES(e)},e.bindVertexArray=function(e){t.bindVertexArrayOES(e)},e.isVertexArray=function(e){return t.isVertexArrayOES(e)},1}function It(e){var t=e.getExtension("WEBGL_draw_buffers");if(t)return e.drawBuffers=function(e,n){t.drawBuffersWEBGL(e,n)},1}function St(e){return!!(e.multiDrawWebgl=e.getExtension("WEBGL_multi_draw"))}var Nt={counter:1,buffers:[],programs:[],framebuffers:[],renderbuffers:[],textures:[],uniforms:[],shaders:[],vaos:[],contexts:{},offscreenCanvases:{},timerQueriesEXT:[],programInfos:{},stringCache:{},unpackAlignment:4,recordError:function(e){Nt.lastError||(Nt.lastError=e)},getNewId:function(e){for(var t=Nt.counter++,n=e.length;n<t;n++)e[n]=null;return t},getSource:function(e,t,n,r){for(var a="",i=0;i<t;++i){var o=r?s()[r+4*i>>2]:-1;a+=Y(s()[n+4*i>>2],o<0?void 0:o)}return a},createContext:function(e,t){var n=e.getContext("webgl",t);return n?Nt.registerContext(n,t):0},registerContext:function(e,t){var n=Ut(8);s()[n+4>>2]=qt();var r={handle:n,attributes:t,version:t.majorVersion,GLctx:e};return e.canvas&&(e.canvas.GLctxObject=r),Nt.contexts[n]=r,(void 0===t.enableExtensionsByDefault||t.enableExtensionsByDefault)&&Nt.initExtensions(r),n},makeContextCurrent:function(e){return Nt.currentContext=Nt.contexts[e],c.ctx=_t=Nt.currentContext&&Nt.currentContext.GLctx,!(e&&!_t)},getContext:function(e){return Nt.contexts[e]},deleteContext:function(e){Nt.currentContext===Nt.contexts[e]&&(Nt.currentContext=null),"object"==typeof ut&&ut.removeAllHandlersOnTarget(Nt.contexts[e].GLctx.canvas),Nt.contexts[e]&&Nt.contexts[e].GLctx.canvas&&(Nt.contexts[e].GLctx.canvas.GLctxObject=void 0),Gt(Nt.contexts[e].handle),Nt.contexts[e]=null},initExtensions:function(e){if(e||(e=Nt.currentContext),!e.initExtensionsDone){e.initExtensionsDone=!0;var t=e.GLctx;vt(t),kt(t),It(t),t.disjointTimerQueryExt=t.getExtension("EXT_disjoint_timer_query"),St(t),(t.getSupportedExtensions()||[]).forEach((function(e){e.indexOf("lose_context")<0&&e.indexOf("debug")<0&&t.getExtension(e)}))}},populateUniformTable:function(e){for(var t=Nt.programs[e],n=Nt.programInfos[e]={uniforms:{},maxUniformLength:0,maxAttributeLength:-1,maxUniformBlockNameLength:-1},r=n.uniforms,a=_t.getProgramParameter(t,35718),s=0;s<a;++s){var i=_t.getActiveUniform(t,s),o=i.name;n.maxUniformLength=Math.max(n.maxUniformLength,o.length+1),"]"==o.slice(-1)&&(o=o.slice(0,o.lastIndexOf("[")));var u=_t.getUniformLocation(t,o);if(u){var l=Nt.getNewId(Nt.uniforms);r[o]=[i.size,l],Nt.uniforms[l]=u;for(var c=1;c<i.size;++c){var h=o+"["+c+"]";u=_t.getUniformLocation(t,h),l=Nt.getNewId(Nt.uniforms),Nt.uniforms[l]=u}}}}},Tt=["default","low-power","high-performance"];function Ct(e,t){var n=t>>2,r=s()[n+6],a={alpha:!!s()[n+0],depth:!!s()[n+1],stencil:!!s()[n+2],antialias:!!s()[n+3],premultipliedAlpha:!!s()[n+4],preserveDrawingBuffer:!!s()[n+5],powerPreference:Tt[r],failIfMajorPerformanceCaveat:!!s()[n+7],majorVersion:s()[n+8],minorVersion:s()[n+9],enableExtensionsByDefault:s()[n+10],explicitSwapControl:s()[n+11],proxyContextToMainThread:s()[n+12],renderViaOffscreenBackBuffer:s()[n+13]},i=mt(e);return i?a.explicitSwapControl?0:Nt.createContext(i,a):0}function $t(e,t){return Ct(e,t)}var _t,Et={mappings:{},buffers:[null,[],[]],printChar:function(e,t){var n=Et.buffers[e];0===t||10===t?((1===e?E:A)(X(n,0)),n.length=0):n.push(t)},varargs:void 0,get:function(){return Et.varargs+=4,s()[Et.varargs-4>>2]},getStr:function(e){return Y(e)},get64:function(e,t){return e}};function At(e){return w?et(3,1,e):0}function Ft(e,t,n,r,a){if(w)return et(4,1,e,t,n,r,a)}function Rt(e,t,n,a){if(w)return et(5,1,e,t,n,a);for(var i=0,o=0;o<n;o++){for(var u=s()[t+8*o>>2],l=s()[t+(8*o+4)>>2],c=0;c<l;c++)Et.printChar(e,r()[u+c]);i+=l}return s()[a>>2]=i,0}function Dt(e){var t=Pe.threadExitHandlers.pop();e&&t()}function Mt(e,t){Pe.threadExitHandlers.push((function(){re.get(e)(t)}))}function Ot(e){if(w)throw"Internal Error! spawnThread() can only ever be called from main application thread!";var t=Pe.getNewWorker();if(void 0!==t.pthread)throw"Internal error!";if(!e.pthread_ptr)throw"Internal error, no pthread ptr!";Pe.runningWorkers.push(t);for(var n=Ut(512),r=0;r<128;++r)s()[n+4*r>>2]=0;var a=e.stackBase+e.stackSize,o=Pe.pthreads[e.pthread_ptr]={worker:t,stackBase:e.stackBase,stackSize:e.stackSize,allocatedOwnStack:e.allocatedOwnStack,threadInfoStruct:e.pthread_ptr},u=o.threadInfoStruct>>2;Atomics.store(i(),u+16,e.detached),Atomics.store(i(),u+25,n),Atomics.store(i(),u+10,o.threadInfoStruct),Atomics.store(i(),u+20,e.stackSize),Atomics.store(i(),u+19,a),Atomics.store(i(),u+26,e.stackSize),Atomics.store(i(),u+28,a),Atomics.store(i(),u+29,e.detached);var l=jt()+40;Atomics.store(i(),u+43,l),t.pthread=o;var c={cmd:"run",start_routine:e.startRoutine,arg:e.arg,threadInfoStruct:e.pthread_ptr,stackBase:e.stackBase,stackSize:e.stackSize};t.runPthread=function(){c.time=performance.now(),t.postMessage(c,e.transferList)},t.loaded&&(t.runPthread(),delete t.runPthread)}function Lt(e,t,n,r){if("undefined"==typeof SharedArrayBuffer)return A("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;if(!e)return A("pthread_create called with a null thread pointer!"),28;var a=[];if(w&&0===a.length)return Jt(687865856,e,t,n,r);var o=0,u=0,l=0;t&&-1!=t?(o=s()[t>>2],o+=81920,u=s()[t+8>>2],l=0!==s()[t+12>>2]):o=2097152;var c=0==u;c?u=on(16,o):H((u-=o)>0);for(var h=Ut(228),d=0;d<57;++d)i()[(h>>2)+d]=0;s()[e>>2]=h,s()[h+12>>2]=h;var p=h+152;s()[p>>2]=p;var f={stackBase:u,stackSize:o,allocatedOwnStack:c,detached:l,startRoutine:n,pthread_ptr:h,arg:r,transferList:a};return w?(f.cmd="spawnThread",postMessage(f,a)):Ot(f),0}function zt(e){if(w)return et(6,1,e);switch(e){case 30:return 16384;case 85:return 131072;case 132:case 133:case 12:case 137:case 138:case 15:case 235:case 16:case 17:case 18:case 19:case 20:case 149:case 13:case 10:case 236:case 153:case 9:case 21:case 22:case 159:case 154:case 14:case 77:case 78:case 139:case 82:case 68:case 67:case 164:case 11:case 29:case 47:case 48:case 95:case 52:case 51:case 46:return 200809;case 27:case 246:case 127:case 128:case 23:case 24:case 160:case 161:case 181:case 182:case 242:case 183:case 184:case 243:case 244:case 245:case 165:case 178:case 179:case 49:case 50:case 168:case 169:case 175:case 170:case 171:case 172:case 97:case 76:case 32:case 173:case 35:case 80:case 81:case 79:return-1;case 176:case 177:case 7:case 155:case 8:case 157:case 125:case 126:case 92:case 93:case 129:case 130:case 131:case 94:case 91:return 1;case 74:case 60:case 69:case 70:case 4:return 1024;case 31:case 42:case 72:return 32;case 87:case 26:case 33:return 2147483647;case 34:case 1:return 47839;case 38:case 36:return 99;case 43:case 37:return 2048;case 0:return 2097152;case 3:return 65536;case 28:return 32768;case 44:return 32767;case 75:return 16384;case 39:return 1e3;case 89:return 700;case 71:return 256;case 40:return 255;case 2:return 100;case 180:return 64;case 25:return 20;case 5:return 16;case 6:return 6;case 73:return 4;case 84:return"object"==typeof navigator&&navigator.hardwareConcurrency||1}return He(28),-1}w||Pe.initMainThreadBlock();var Pt,Bt=[null,je,yt,At,Ft,Rt,zt],Wt={e:Ue,r:Ge,x:qe,b:Ke,y:Xe,j:Ye,c:Ze,d:De,f:ze,p:Je,z:Qe,u:at,q:ot,v:bt,i:xt,t:wt,w:$t,m:At,n:Ft,g:Rt,o:Fe,a:F||c.wasmMemory,k:Dt,l:Mt,h:Lt,s:zt},Vt=(Ee(),c.___wasm_call_ctors=function(){return(Vt=c.___wasm_call_ctors=c.asm.A).apply(null,arguments)}),Ut=(c._init=function(){return(c._init=c.asm.B).apply(null,arguments)},c._register_tensor=function(){return(c._register_tensor=c.asm.C).apply(null,arguments)},c._dispose_data=function(){return(c._dispose_data=c.asm.D).apply(null,arguments)},c._dispose=function(){return(c._dispose=c.asm.E).apply(null,arguments)},c._Abs=function(){return(c._Abs=c.asm.G).apply(null,arguments)},c._Add=function(){return(c._Add=c.asm.H).apply(null,arguments)},c._AddN=function(){return(c._AddN=c.asm.I).apply(null,arguments)},c._All=function(){return(c._All=c.asm.J).apply(null,arguments)},c._Any=function(){return(c._Any=c.asm.K).apply(null,arguments)},c._ArgMax=function(){return(c._ArgMax=c.asm.L).apply(null,arguments)},c._AvgPool=function(){return(c._AvgPool=c.asm.M).apply(null,arguments)},c._BatchMatMul=function(){return(c._BatchMatMul=c.asm.N).apply(null,arguments)},c._Ceil=function(){return(c._Ceil=c.asm.O).apply(null,arguments)},c._ClipByValue=function(){return(c._ClipByValue=c.asm.P).apply(null,arguments)},c._Conv2D=function(){return(c._Conv2D=c.asm.Q).apply(null,arguments)},c._Conv2DBackpropInput=function(){return(c._Conv2DBackpropInput=c.asm.R).apply(null,arguments)},c._Cos=function(){return(c._Cos=c.asm.S).apply(null,arguments)},c._Cosh=function(){return(c._Cosh=c.asm.T).apply(null,arguments)},c._CropAndResize=function(){return(c._CropAndResize=c.asm.U).apply(null,arguments)},c._Cumsum=function(){return(c._Cumsum=c.asm.V).apply(null,arguments)},c._DepthToSpace=function(){return(c._DepthToSpace=c.asm.W).apply(null,arguments)},c._DepthwiseConv2dNative=function(){return(c._DepthwiseConv2dNative=c.asm.X).apply(null,arguments)},c._Equal=function(){return(c._Equal=c.asm.Y).apply(null,arguments)},c._Exp=function(){return(c._Exp=c.asm.Z).apply(null,arguments)},c._FlipLeftRight=function(){return(c._FlipLeftRight=c.asm._).apply(null,arguments)},c._Floor=function(){return(c._Floor=c.asm.$).apply(null,arguments)},c._FloorDiv=function(){return(c._FloorDiv=c.asm.aa).apply(null,arguments)},c._FusedBatchNorm=function(){return(c._FusedBatchNorm=c.asm.ba).apply(null,arguments)},c._FusedConv2D=function(){return(c._FusedConv2D=c.asm.ca).apply(null,arguments)},c._FusedDepthwiseConv2D=function(){return(c._FusedDepthwiseConv2D=c.asm.da).apply(null,arguments)},c._Gather=function(){return(c._Gather=c.asm.ea).apply(null,arguments)},c._GatherNd=function(){return(c._GatherNd=c.asm.fa).apply(null,arguments)},c._Greater=function(){return(c._Greater=c.asm.ga).apply(null,arguments)},c._GreaterEqual=function(){return(c._GreaterEqual=c.asm.ha).apply(null,arguments)},c._LeakyRelu=function(){return(c._LeakyRelu=c.asm.ia).apply(null,arguments)},c._Less=function(){return(c._Less=c.asm.ja).apply(null,arguments)},c._LessEqual=function(){return(c._LessEqual=c.asm.ka).apply(null,arguments)},c._Log=function(){return(c._Log=c.asm.la).apply(null,arguments)},c._LogicalAnd=function(){return(c._LogicalAnd=c.asm.ma).apply(null,arguments)},c._Max=function(){return(c._Max=c.asm.na).apply(null,arguments)},c._MaxPool=function(){return(c._MaxPool=c.asm.oa).apply(null,arguments)},c._Maximum=function(){return(c._Maximum=c.asm.pa).apply(null,arguments)},c._Mean=function(){return(c._Mean=c.asm.qa).apply(null,arguments)},c._Min=function(){return(c._Min=c.asm.ra).apply(null,arguments)},c._Minimum=function(){return(c._Minimum=c.asm.sa).apply(null,arguments)},c._MirrorPad=function(){return(c._MirrorPad=c.asm.ta).apply(null,arguments)},c._Multiply=function(){return(c._Multiply=c.asm.ua).apply(null,arguments)},c._Neg=function(){return(c._Neg=c.asm.va).apply(null,arguments)},c._NonMaxSuppressionV3=function(){return(c._NonMaxSuppressionV3=c.asm.wa).apply(null,arguments)},c._NonMaxSuppressionV4=function(){return(c._NonMaxSuppressionV4=c.asm.xa).apply(null,arguments)},c._NonMaxSuppressionV5=function(){return(c._NonMaxSuppressionV5=c.asm.ya).apply(null,arguments)},c._NotEqual=function(){return(c._NotEqual=c.asm.za).apply(null,arguments)},c._OneHot=function(){return(c._OneHot=c.asm.Aa).apply(null,arguments)},c._PadV2=function(){return(c._PadV2=c.asm.Ba).apply(null,arguments)},c._Pow=function(){return(c._Pow=c.asm.Ca).apply(null,arguments)},c._Prelu=function(){return(c._Prelu=c.asm.Da).apply(null,arguments)},c._Prod=function(){return(c._Prod=c.asm.Ea).apply(null,arguments)},c._RealDiv=function(){return(c._RealDiv=c.asm.Fa).apply(null,arguments)},c._Relu=function(){return(c._Relu=c.asm.Ga).apply(null,arguments)},c._Relu6=function(){return(c._Relu6=c.asm.Ha).apply(null,arguments)},c._ResizeBilinear=function(){return(c._ResizeBilinear=c.asm.Ia).apply(null,arguments)},c._Reverse=function(){return(c._Reverse=c.asm.Ja).apply(null,arguments)},c._RotateWithOffset=function(){return(c._RotateWithOffset=c.asm.Ka).apply(null,arguments)},c._Round=function(){return(c._Round=c.asm.La).apply(null,arguments)},c._Rsqrt=function(){return(c._Rsqrt=c.asm.Ma).apply(null,arguments)},c._ScatterNd=function(){return(c._ScatterNd=c.asm.Na).apply(null,arguments)},c._SelectV2=function(){return(c._SelectV2=c.asm.Oa).apply(null,arguments)},c._Sigmoid=function(){return(c._Sigmoid=c.asm.Pa).apply(null,arguments)},c._Sin=function(){return(c._Sin=c.asm.Qa).apply(null,arguments)},c._Softmax=function(){return(c._Softmax=c.asm.Ra).apply(null,arguments)},c._Sqrt=function(){return(c._Sqrt=c.asm.Sa).apply(null,arguments)},c._Square=function(){return(c._Square=c.asm.Ta).apply(null,arguments)},c._SquaredDifference=function(){return(c._SquaredDifference=c.asm.Ua).apply(null,arguments)},c._Step=function(){return(c._Step=c.asm.Va).apply(null,arguments)},c._StridedSlice=function(){return(c._StridedSlice=c.asm.Wa).apply(null,arguments)},c._Sub=function(){return(c._Sub=c.asm.Xa).apply(null,arguments)},c._Sum=function(){return(c._Sum=c.asm.Ya).apply(null,arguments)},c._Tan=function(){return(c._Tan=c.asm.Za).apply(null,arguments)},c._Tanh=function(){return(c._Tanh=c.asm._a).apply(null,arguments)},c._Tile=function(){return(c._Tile=c.asm.$a).apply(null,arguments)},c._TopK=function(){return(c._TopK=c.asm.ab).apply(null,arguments)},c._Transform=function(){return(c._Transform=c.asm.bb).apply(null,arguments)},c._Transpose=function(){return(c._Transpose=c.asm.cb).apply(null,arguments)},c.__FusedMatMul=function(){return(c.__FusedMatMul=c.asm.db).apply(null,arguments)},c._malloc=function(){return(Ut=c._malloc=c.asm.eb).apply(null,arguments)}),Gt=c._free=function(){return(Gt=c._free=c.asm.fb).apply(null,arguments)},Ht=c.___errno_location=function(){return(Ht=c.___errno_location=c.asm.gb).apply(null,arguments)},jt=c._emscripten_get_global_libc=function(){return(jt=c._emscripten_get_global_libc=c.asm.hb).apply(null,arguments)},qt=c._pthread_self=function(){return(qt=c._pthread_self=c.asm.ib).apply(null,arguments)},Kt=c.___pthread_tsd_run_dtors=function(){return(Kt=c.___pthread_tsd_run_dtors=c.asm.jb).apply(null,arguments)},Xt=c._emscripten_main_thread_process_queued_calls=function(){return(Xt=c._emscripten_main_thread_process_queued_calls=c.asm.kb).apply(null,arguments)},Yt=(c._emscripten_current_thread_process_queued_calls=function(){return(c._emscripten_current_thread_process_queued_calls=c.asm.lb).apply(null,arguments)},c._emscripten_register_main_browser_thread_id=function(){return(Yt=c._emscripten_register_main_browser_thread_id=c.asm.mb).apply(null,arguments)}),Zt=c.__emscripten_do_dispatch_to_thread=function(){return(Zt=c.__emscripten_do_dispatch_to_thread=c.asm.nb).apply(null,arguments)},Jt=c._emscripten_sync_run_in_main_thread_4=function(){return(Jt=c._emscripten_sync_run_in_main_thread_4=c.asm.ob).apply(null,arguments)},Qt=c._emscripten_run_in_main_runtime_thread_js=function(){return(Qt=c._emscripten_run_in_main_runtime_thread_js=c.asm.pb).apply(null,arguments)},en=c.__emscripten_call_on_thread=function(){return(en=c.__emscripten_call_on_thread=c.asm.qb).apply(null,arguments)},tn=(c._emscripten_tls_init=function(){return(c._emscripten_tls_init=c.asm.rb).apply(null,arguments)},c.__emscripten_thread_init=function(){return(tn=c.__emscripten_thread_init=c.asm.sb).apply(null,arguments)}),nn=c.stackSave=function(){return(nn=c.stackSave=c.asm.tb).apply(null,arguments)},rn=c.stackRestore=function(){return(rn=c.stackRestore=c.asm.ub).apply(null,arguments)},an=c.stackAlloc=function(){return(an=c.stackAlloc=c.asm.vb).apply(null,arguments)},sn=c._emscripten_stack_set_limits=function(){return(sn=c._emscripten_stack_set_limits=c.asm.wb).apply(null,arguments)},on=c._memalign=function(){return(on=c._memalign=c.asm.xb).apply(null,arguments)},un=c.__emscripten_allow_main_runtime_queued_calls=9824,ln=c.__emscripten_main_thread_futex=11448;function cn(e){this.name="ExitStatus",this.message="Program terminated with exit("+e+")",this.status=e}function hn(e){if(e=e||p,!(ge>0)){if(w)return u(c),he(),void postMessage({cmd:"loaded"});ce(),ge>0||(c.setStatus?(c.setStatus("Running..."),setTimeout((function(){setTimeout((function(){c.setStatus("")}),1),t()}),1)):t())}function t(){Pt||(Pt=!0,c.calledRun=!0,G||(he(),de(),u(c),c.onRuntimeInitialized&&c.onRuntimeInitialized(),pe()))}}function dn(e,t){if(!t||!D||0!==e){if(!t&&w)throw postMessage({cmd:"exitProcess",returnCode:e}),new cn(e);D||(Pe.terminateAllThreads(),c.onExit&&c.onExit(e),G=!0),f(e,new cn(e))}}if(c.cwrap=K,c.PThread=Pe,c.PThread=Pe,c.wasmMemory=F,c.ExitStatus=cn,be=function e(){Pt||hn(),Pt||(be=e)},c.run=hn,c.preInit)for("function"==typeof c.preInit&&(c.preInit=[c.preInit]);c.preInit.length>0;)c.preInit.pop()();return w&&(D=!1,Pe.initWorker()),hn(),e.ready});"object"==typeof e&&"object"==typeof t?t.exports=s:"function"==typeof define&&n.amdO?define([],(function(){return s})):"object"==typeof e&&(e.WasmBackendModuleThreadedSimd=s)}}),U=g({"node_modules/.pnpm/@tensorflow+tfjs-backend-wasm@3.8.0/node_modules/@tensorflow/tfjs-backend-wasm/wasm-out/tfjs-backend-wasm.js"(e,t){var a,s=(a=(a="undefined"!=typeof document&&document.currentScript?document.currentScript.src:void 0)||r,function(e){var t,n,r=void 0!==(e=e||{})?e:{};r.ready=new Promise((function(e,r){t=e,n=r}));var s,i={};for(s in r)r.hasOwnProperty(s)&&(i[s]=r[s]);var o=[],u=!1,l=!1,c=!1,h=!1;u="object"==typeof window,l="function"==typeof importScripts,c="object"==typeof process&&"object"==typeof process.versions&&"string"==typeof process.versions.node,h=!u&&!c&&!l;var d,p,f,g,y,b="";function x(e){return r.locateFile?r.locateFile(e,b):b+e}c?(b=l?P().dirname(b)+"/":"//",d=function(e,t){return g||(g=m("fs")),y||(y=P()),e=y.normalize(e),g.readFileSync(e,t?null:"utf8")},f=function(e){var t=d(e,!0);return t.buffer||(t=new Uint8Array(t)),N(t.buffer),t},process.argv.length>1&&process.argv[1].replace(/\\/g,"/"),o=process.argv.slice(2),process.on("uncaughtException",(function(e){if(!(e instanceof De))throw e})),process.on("unhandledRejection",ae),r.inspect=function(){return"[Emscripten Module object]"}):h?("undefined"!=typeof read&&(d=function(e){return read(e)}),f=function(e){var t;return"function"==typeof readbuffer?new Uint8Array(readbuffer(e)):(N("object"==typeof(t=read(e,"binary"))),t)},"undefined"!=typeof scriptArgs?o=scriptArgs:void 0!==arguments&&(o=arguments),"undefined"!=typeof print&&("undefined"==typeof console&&(console={}),console.log=print,console.warn=console.error="undefined"!=typeof printErr?printErr:print)):(u||l)&&(l?b=self.location.href:"undefined"!=typeof document&&document.currentScript&&(b=document.currentScript.src),a&&(b=a),b=0!==b.indexOf("blob:")?b.substr(0,b.lastIndexOf("/")+1):"",d=function(e){var t=new XMLHttpRequest;return t.open("GET",e,!1),t.send(null),t.responseText},l&&(f=function(e){var t=new XMLHttpRequest;return t.open("GET",e,!1),t.responseType="arraybuffer",t.send(null),new Uint8Array(t.response)}),p=function(e,t,n){var r=new XMLHttpRequest;r.open("GET",e,!0),r.responseType="arraybuffer",r.onload=function(){200==r.status||0==r.status&&r.response?t(r.response):n()},r.onerror=n,r.send(null)});var w,v,k=r.print||console.log.bind(console),I=r.printErr||console.warn.bind(console);for(s in i)i.hasOwnProperty(s)&&(r[s]=i[s]);i=null,r.arguments&&(o=r.arguments),r.thisProgram&&r.thisProgram,r.quit&&r.quit,r.wasmBinary&&(w=r.wasmBinary),r.noExitRuntime,"object"!=typeof WebAssembly&&ae("no native wasm support detected");var S=!1;function N(e,t){e||ae("Assertion failed: "+t)}function T(e){var t=r["_"+e];return N(t,"Cannot call unknown function "+e+", make sure it is exported"),t}function C(e,t,n,r,a){var s={string:function(e){var t=0;if(null!=e&&0!==e){var n=1+(e.length<<2);L(e,t=Re(n),n)}return t},array:function(e){var t=Re(e.length);return z(e,t),t}},i=T(e),o=[],u=0;if(r)for(var l=0;l<r.length;l++){var c=s[n[l]];c?(0===u&&(u=Ae()),o[l]=c(r[l])):o[l]=r[l]}var h,d=i.apply(null,o);return h=d,d="string"===t?M(h):"boolean"===t?Boolean(h):h,0!==u&&Fe(u),d}function $(e,t,n,r){var a=(n=n||[]).every((function(e){return"number"===e}));return"string"!==t&&a&&!r?T(e):function(){return C(e,t,n,arguments)}}var _,E,A,F,R="undefined"!=typeof TextDecoder?new TextDecoder("utf8"):void 0;function D(e,t,n){for(var r=t+n,a=t;e[a]&&!(a>=r);)++a;if(a-t>16&&e.subarray&&R)return R.decode(e.subarray(t,a));for(var s="";t<a;){var i=e[t++];if(128&i){var o=63&e[t++];if(192!=(224&i)){var u=63&e[t++];if((i=224==(240&i)?(15&i)<<12|o<<6|u:(7&i)<<18|o<<12|u<<6|63&e[t++])<65536)s+=String.fromCharCode(i);else{var l=i-65536;s+=String.fromCharCode(55296|l>>10,56320|1023&l)}}else s+=String.fromCharCode((31&i)<<6|o)}else s+=String.fromCharCode(i)}return s}function M(e,t){return e?D(A,e,t):""}function O(e,t,n,r){if(!(r>0))return 0;for(var a=n,s=n+r-1,i=0;i<e.length;++i){var o=e.charCodeAt(i);if(o>=55296&&o<=57343&&(o=65536+((1023&o)<<10)|1023&e.charCodeAt(++i)),o<=127){if(n>=s)break;t[n++]=o}else if(o<=2047){if(n+1>=s)break;t[n++]=192|o>>6,t[n++]=128|63&o}else if(o<=65535){if(n+2>=s)break;t[n++]=224|o>>12,t[n++]=128|o>>6&63,t[n++]=128|63&o}else{if(n+3>=s)break;t[n++]=240|o>>18,t[n++]=128|o>>12&63,t[n++]=128|o>>6&63,t[n++]=128|63&o}}return t[n]=0,n-a}function L(e,t,n){return O(e,A,t,n)}function z(e,t){E.set(e,t)}function B(e,t){return e%t>0&&(e+=t-e%t),e}function W(e){_=e,r.HEAP8=E=new Int8Array(e),r.HEAP16=new Int16Array(e),r.HEAP32=F=new Int32Array(e),r.HEAPU8=A=new Uint8Array(e),r.HEAPU16=new Uint16Array(e),r.HEAPU32=new Uint32Array(e),r.HEAPF32=new Float32Array(e),r.HEAPF64=new Float64Array(e)}r.INITIAL_MEMORY;var V,U=[],G=[],H=[],j=[];function q(){if(r.preRun)for("function"==typeof r.preRun&&(r.preRun=[r.preRun]);r.preRun.length;)Z(r.preRun.shift());fe(U)}function K(){fe(G)}function X(){fe(H)}function Y(){if(r.postRun)for("function"==typeof r.postRun&&(r.postRun=[r.postRun]);r.postRun.length;)J(r.postRun.shift());fe(j)}function Z(e){U.unshift(e)}function J(e){j.unshift(e)}G.push({func:function(){_e()}});var Q=0,ee=null,te=null;function ne(e){Q++,r.monitorRunDependencies&&r.monitorRunDependencies(Q)}function re(e){if(Q--,r.monitorRunDependencies&&r.monitorRunDependencies(Q),0==Q&&(null!==ee&&(clearInterval(ee),ee=null),te)){var t=te;te=null,t()}}function ae(e){r.onAbort&&r.onAbort(e),I(e+=""),S=!0,e="abort("+e+"). Build with -s ASSERTIONS=1 for more info.";var t=new WebAssembly.RuntimeError(e);throw n(t),t}function se(e,t){return String.prototype.startsWith?e.startsWith(t):0===e.indexOf(t)}r.preloadedImages={},r.preloadedAudios={};var ie="data:application/octet-stream;base64,";function oe(e){return se(e,ie)}var ue="file://";function le(e){return se(e,ue)}var ce="tfjs-backend-wasm.wasm";function he(e){try{if(e==ce&&w)return new Uint8Array(w);if(f)return f(e);throw"both async and sync fetching of the wasm failed"}catch(e){ae(e)}}function de(){if(!w&&(u||l)){if("function"==typeof fetch&&!le(ce))return fetch(ce,{credentials:"same-origin"}).then((function(e){if(!e.ok)throw"failed to load wasm binary file at '"+ce+"'";return e.arrayBuffer()})).catch((function(){return he(ce)}));if(p)return new Promise((function(e,t){p(ce,(function(t){e(new Uint8Array(t))}),t)}))}return Promise.resolve().then((function(){return he(ce)}))}function pe(){var e={a:$e};function t(e,t){var n=e.exports;r.asm=n,W((v=r.asm.i).buffer),V=r.asm.o,re()}function a(e){t(e.instance)}function s(t){return de().then((function(t){return WebAssembly.instantiate(t,e)})).then(t,(function(e){I("failed to asynchronously prepare wasm: "+e),ae(e)}))}if(ne(),r.instantiateWasm)try{return r.instantiateWasm(e,t)}catch(e){return I("Module.instantiateWasm callback failed with error: "+e),!1}return(w||"function"!=typeof WebAssembly.instantiateStreaming||oe(ce)||le(ce)||"function"!=typeof fetch?s(a):fetch(ce,{credentials:"same-origin"}).then((function(t){return WebAssembly.instantiateStreaming(t,e).then(a,(function(e){return I("wasm streaming compile failed: "+e),I("falling back to ArrayBuffer instantiation"),s(a)}))}))).catch(n),{}}function fe(e){for(;e.length>0;){var t=e.shift();if("function"!=typeof t){var n=t.func;"number"==typeof n?void 0===t.arg?V.get(n)():V.get(n)(t.arg):n(void 0===t.arg?null:t.arg)}else t(r)}}function me(){ae()}function ge(e,t,n){A.copyWithin(e,t,t+n)}function ye(){return A.length}function be(e){try{return v.grow(e-_.byteLength+65535>>>16),W(v.buffer),1}catch(e){}}function xe(e){var t=ye(),n=2147483648;if(e>n)return!1;for(var r=1;r<=4;r*=2){var a=t*(1+.2/r);if(a=Math.min(a,e+100663296),be(Math.min(n,B(Math.max(e,a),65536))))return!0}return!1}oe(ce)||(ce=x(ce));var we={mappings:{},buffers:[null,[],[]],printChar:function(e,t){var n=we.buffers[e];0===t||10===t?((1===e?k:I)(D(n,0)),n.length=0):n.push(t)},varargs:void 0,get:function(){return we.varargs+=4,F[we.varargs-4>>2]},getStr:function(e){return M(e)},get64:function(e,t){return e}};function ve(e){return 0}function ke(e,t,n,r,a){}function Ie(e,t,n,r){for(var a=0,s=0;s<n;s++){for(var i=F[t+8*s>>2],o=F[t+(8*s+4)>>2],u=0;u<o;u++)we.printChar(e,A[i+u]);a+=o}return F[r>>2]=a,0}function Se(){return 6}function Ne(e){return F[Ee()>>2]=e,e}function Te(e){switch(e){case 30:return 16384;case 85:return 131072;case 132:case 133:case 12:case 137:case 138:case 15:case 235:case 16:case 17:case 18:case 19:case 20:case 149:case 13:case 10:case 236:case 153:case 9:case 21:case 22:case 159:case 154:case 14:case 77:case 78:case 139:case 82:case 68:case 67:case 164:case 11:case 29:case 47:case 48:case 95:case 52:case 51:case 46:return 200809;case 27:case 246:case 127:case 128:case 23:case 24:case 160:case 161:case 181:case 182:case 242:case 183:case 184:case 243:case 244:case 245:case 165:case 178:case 179:case 49:case 50:case 168:case 169:case 175:case 170:case 171:case 172:case 97:case 76:case 32:case 173:case 35:case 80:case 81:case 79:return-1;case 176:case 177:case 7:case 155:case 8:case 157:case 125:case 126:case 92:case 93:case 129:case 130:case 131:case 94:case 91:return 1;case 74:case 60:case 69:case 70:case 4:return 1024;case 31:case 42:case 72:return 32;case 87:case 26:case 33:return 2147483647;case 34:case 1:return 47839;case 38:case 36:return 99;case 43:case 37:return 2048;case 0:return 2097152;case 3:return 65536;case 28:return 32768;case 44:return 32767;case 75:return 16384;case 39:return 1e3;case 89:return 700;case 71:return 256;case 40:return 255;case 2:return 100;case 180:return 64;case 25:return 20;case 5:return 16;case 6:return 6;case 73:return 4;case 84:return"object"==typeof navigator&&navigator.hardwareConcurrency||1}return Ne(28),-1}var Ce,$e={a:me,d:ge,e:xe,f:ve,c:ke,b:Ie,g:Se,h:Te},_e=(pe(),r.___wasm_call_ctors=function(){return(_e=r.___wasm_call_ctors=r.asm.j).apply(null,arguments)}),Ee=(r._init=function(){return(r._init=r.asm.k).apply(null,arguments)},r._register_tensor=function(){return(r._register_tensor=r.asm.l).apply(null,arguments)},r._dispose_data=function(){return(r._dispose_data=r.asm.m).apply(null,arguments)},r._dispose=function(){return(r._dispose=r.asm.n).apply(null,arguments)},r._Abs=function(){return(r._Abs=r.asm.p).apply(null,arguments)},r._Add=function(){return(r._Add=r.asm.q).apply(null,arguments)},r._AddN=function(){return(r._AddN=r.asm.r).apply(null,arguments)},r._All=function(){return(r._All=r.asm.s).apply(null,arguments)},r._Any=function(){return(r._Any=r.asm.t).apply(null,arguments)},r._ArgMax=function(){return(r._ArgMax=r.asm.u).apply(null,arguments)},r._AvgPool=function(){return(r._AvgPool=r.asm.v).apply(null,arguments)},r._BatchMatMul=function(){return(r._BatchMatMul=r.asm.w).apply(null,arguments)},r._Ceil=function(){return(r._Ceil=r.asm.x).apply(null,arguments)},r._ClipByValue=function(){return(r._ClipByValue=r.asm.y).apply(null,arguments)},r._Conv2D=function(){return(r._Conv2D=r.asm.z).apply(null,arguments)},r._Conv2DBackpropInput=function(){return(r._Conv2DBackpropInput=r.asm.A).apply(null,arguments)},r._Cos=function(){return(r._Cos=r.asm.B).apply(null,arguments)},r._Cosh=function(){return(r._Cosh=r.asm.C).apply(null,arguments)},r._CropAndResize=function(){return(r._CropAndResize=r.asm.D).apply(null,arguments)},r._Cumsum=function(){return(r._Cumsum=r.asm.E).apply(null,arguments)},r._DepthToSpace=function(){return(r._DepthToSpace=r.asm.F).apply(null,arguments)},r._DepthwiseConv2dNative=function(){return(r._DepthwiseConv2dNative=r.asm.G).apply(null,arguments)},r._Equal=function(){return(r._Equal=r.asm.H).apply(null,arguments)},r._Exp=function(){return(r._Exp=r.asm.I).apply(null,arguments)},r._FlipLeftRight=function(){return(r._FlipLeftRight=r.asm.J).apply(null,arguments)},r._Floor=function(){return(r._Floor=r.asm.K).apply(null,arguments)},r._FloorDiv=function(){return(r._FloorDiv=r.asm.L).apply(null,arguments)},r._FusedBatchNorm=function(){return(r._FusedBatchNorm=r.asm.M).apply(null,arguments)},r._FusedConv2D=function(){return(r._FusedConv2D=r.asm.N).apply(null,arguments)},r._FusedDepthwiseConv2D=function(){return(r._FusedDepthwiseConv2D=r.asm.O).apply(null,arguments)},r._Gather=function(){return(r._Gather=r.asm.P).apply(null,arguments)},r._GatherNd=function(){return(r._GatherNd=r.asm.Q).apply(null,arguments)},r._Greater=function(){return(r._Greater=r.asm.R).apply(null,arguments)},r._GreaterEqual=function(){return(r._GreaterEqual=r.asm.S).apply(null,arguments)},r._LeakyRelu=function(){return(r._LeakyRelu=r.asm.T).apply(null,arguments)},r._Less=function(){return(r._Less=r.asm.U).apply(null,arguments)},r._LessEqual=function(){return(r._LessEqual=r.asm.V).apply(null,arguments)},r._Log=function(){return(r._Log=r.asm.W).apply(null,arguments)},r._LogicalAnd=function(){return(r._LogicalAnd=r.asm.X).apply(null,arguments)},r._Max=function(){return(r._Max=r.asm.Y).apply(null,arguments)},r._MaxPool=function(){return(r._MaxPool=r.asm.Z).apply(null,arguments)},r._Maximum=function(){return(r._Maximum=r.asm._).apply(null,arguments)},r._Mean=function(){return(r._Mean=r.asm.$).apply(null,arguments)},r._Min=function(){return(r._Min=r.asm.aa).apply(null,arguments)},r._Minimum=function(){return(r._Minimum=r.asm.ba).apply(null,arguments)},r._MirrorPad=function(){return(r._MirrorPad=r.asm.ca).apply(null,arguments)},r._Multiply=function(){return(r._Multiply=r.asm.da).apply(null,arguments)},r._Neg=function(){return(r._Neg=r.asm.ea).apply(null,arguments)},r._NonMaxSuppressionV3=function(){return(r._NonMaxSuppressionV3=r.asm.fa).apply(null,arguments)},r._NonMaxSuppressionV4=function(){return(r._NonMaxSuppressionV4=r.asm.ga).apply(null,arguments)},r._NonMaxSuppressionV5=function(){return(r._NonMaxSuppressionV5=r.asm.ha).apply(null,arguments)},r._NotEqual=function(){return(r._NotEqual=r.asm.ia).apply(null,arguments)},r._OneHot=function(){return(r._OneHot=r.asm.ja).apply(null,arguments)},r._PadV2=function(){return(r._PadV2=r.asm.ka).apply(null,arguments)},r._Pow=function(){return(r._Pow=r.asm.la).apply(null,arguments)},r._Prelu=function(){return(r._Prelu=r.asm.ma).apply(null,arguments)},r._Prod=function(){return(r._Prod=r.asm.na).apply(null,arguments)},r._RealDiv=function(){return(r._RealDiv=r.asm.oa).apply(null,arguments)},r._Relu=function(){return(r._Relu=r.asm.pa).apply(null,arguments)},r._Relu6=function(){return(r._Relu6=r.asm.qa).apply(null,arguments)},r._ResizeBilinear=function(){return(r._ResizeBilinear=r.asm.ra).apply(null,arguments)},r._Reverse=function(){return(r._Reverse=r.asm.sa).apply(null,arguments)},r._RotateWithOffset=function(){return(r._RotateWithOffset=r.asm.ta).apply(null,arguments)},r._Round=function(){return(r._Round=r.asm.ua).apply(null,arguments)},r._Rsqrt=function(){return(r._Rsqrt=r.asm.va).apply(null,arguments)},r._ScatterNd=function(){return(r._ScatterNd=r.asm.wa).apply(null,arguments)},r._SelectV2=function(){return(r._SelectV2=r.asm.xa).apply(null,arguments)},r._Sigmoid=function(){return(r._Sigmoid=r.asm.ya).apply(null,arguments)},r._Sin=function(){return(r._Sin=r.asm.za).apply(null,arguments)},r._Softmax=function(){return(r._Softmax=r.asm.Aa).apply(null,arguments)},r._Sqrt=function(){return(r._Sqrt=r.asm.Ba).apply(null,arguments)},r._Square=function(){return(r._Square=r.asm.Ca).apply(null,arguments)},r._SquaredDifference=function(){return(r._SquaredDifference=r.asm.Da).apply(null,arguments)},r._Step=function(){return(r._Step=r.asm.Ea).apply(null,arguments)},r._StridedSlice=function(){return(r._StridedSlice=r.asm.Fa).apply(null,arguments)},r._Sub=function(){return(r._Sub=r.asm.Ga).apply(null,arguments)},r._Sum=function(){return(r._Sum=r.asm.Ha).apply(null,arguments)},r._Tan=function(){return(r._Tan=r.asm.Ia).apply(null,arguments)},r._Tanh=function(){return(r._Tanh=r.asm.Ja).apply(null,arguments)},r._Tile=function(){return(r._Tile=r.asm.Ka).apply(null,arguments)},r._TopK=function(){return(r._TopK=r.asm.La).apply(null,arguments)},r._Transform=function(){return(r._Transform=r.asm.Ma).apply(null,arguments)},r._Transpose=function(){return(r._Transpose=r.asm.Na).apply(null,arguments)},r.__FusedMatMul=function(){return(r.__FusedMatMul=r.asm.Oa).apply(null,arguments)},r._malloc=function(){return(r._malloc=r.asm.Pa).apply(null,arguments)},r._free=function(){return(r._free=r.asm.Qa).apply(null,arguments)},r.___errno_location=function(){return(Ee=r.___errno_location=r.asm.Ra).apply(null,arguments)}),Ae=r.stackSave=function(){return(Ae=r.stackSave=r.asm.Sa).apply(null,arguments)},Fe=r.stackRestore=function(){return(Fe=r.stackRestore=r.asm.Ta).apply(null,arguments)},Re=r.stackAlloc=function(){return(Re=r.stackAlloc=r.asm.Ua).apply(null,arguments)};function De(e){this.name="ExitStatus",this.message="Program terminated with exit("+e+")",this.status=e}function Me(e){function n(){Ce||(Ce=!0,r.calledRun=!0,S||(K(),X(),t(r),r.onRuntimeInitialized&&r.onRuntimeInitialized(),Y()))}e=e||o,Q>0||(q(),Q>0||(r.setStatus?(r.setStatus("Running..."),setTimeout((function(){setTimeout((function(){r.setStatus("")}),1),n()}),1)):n()))}if(r.cwrap=$,te=function e(){Ce||Me(),Ce||(te=e)},r.run=Me,r.preInit)for("function"==typeof r.preInit&&(r.preInit=[r.preInit]);r.preInit.length>0;)r.preInit.pop()();return Me(),e.ready});"object"==typeof e&&"object"==typeof t?t.exports=s:"function"==typeof define&&n.amdO?define([],(function(){return s})):"object"==typeof e&&(e.WasmBackendModule=s)}}),G=class{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}},H=class{refCount(e){return j("refCount")}incRef(e){return j("incRef")}timerAvailable(){return!0}time(e){return j("time")}read(e){return j("read")}readSync(e){return j("readSync")}numDataIds(){return j("numDataIds")}disposeData(e,t){return j("disposeData")}write(e,t,n){return j("write")}move(e,t,n,r,a){return j("move")}memory(){return j("memory")}floatPrecision(){return j("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return j("dispose")}};function j(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function q(e){let t=e.length,n=0;for(;t>0;)n=Math.random()*t|0,t--,Z(e,t,n)}function K(e,t){if(e.length!==t.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${e.length}Second array length was ${t.length}`);let n=e.length,r=0;for(;n>0;)r=Math.random()*n|0,n--,Z(e,n,r),Z(t,n,r)}function X(e,t,n){return Math.max(e,Math.min(t,n))}function Y(e){return e%2==0?e:e+1}function Z(e,t,n){const r=e[t];e[t]=e[n],e[n]=r}function J(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}function Q(e,t){const n=Math.random();return t*n+(1-n)*e}function ee(e,t){let n=0;for(let r=0;r<e.length;r++){const a=Number(e[r])-Number(t[r]);n+=a*a}return n}function te(e,t){if(!e)throw new Error("string"==typeof t?t:t())}function ne(e,t,n=""){te(oe(e,t),(()=>n+` Shapes ${e} and ${t} must match`))}function re(e){te(null!=e,(()=>"The input to the tensor constructor must be a non-null value."))}function ae(e,t=[],n=!1){if(null==t&&(t=[]),Array.isArray(e)||ke(e)&&!n)for(let r=0;r<e.length;++r)ae(e[r],t,n);else t.push(e);return t}function se(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function ie(e){return 0===e.length}function oe(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function ue(e){return e%1==0}function le(e){if(null!=Math.tanh)return Math.tanh(e);if(e===1/0)return 1;if(e===-1/0)return-1;{const t=Math.exp(2*e);return(t-1)/(t+1)}}function ce(e){const t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function he(e){const t=new Uint32Array(e);for(let n=0;n<e;++n)t[n]=n;return q(t),t}function de(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function pe(e,t=(e=>0),n){return new Promise(((r,a)=>{let s=0;const i=()=>{if(e())return void r();s++;const o=t(s);null!=n&&s>=n?a():setTimeout(i,o)};i()}))}function fe(e,t){let n=1,r=-1;for(let t=0;t<e.length;++t)if(e[t]>=0)n*=e[t];else if(-1===e[t]){if(-1!==r)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${t}`);r=t}else if(e[t]<0)throw Error(`Shapes can not be < 0. Found ${e[t]} at dim ${t}`);if(-1===r){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===n)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);const a=e.slice();return a[r]=t/n,a}function me(e,t){const n=t.length;return te((e=null==e?t.map(((e,t)=>t)):[].concat(e)).every((e=>e>=-n&&e<n)),(()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`)),te(e.every((e=>ue(e))),(()=>`All values in axis param must be integers but got axis ${e}`)),e.map((e=>e<0?n+e:e))}function ge(e,t){const n=[],r=[],a=null!=t&&Array.isArray(t)&&0===t.length,s=null==t||a?null:me(t,e).sort();let i=0;for(let t=0;t<e.length;++t){if(null!=s){if(s[i]===t&&1!==e[t])throw new Error(`Can't squeeze axis ${t} since its dim '${e[t]}' is not 1`);(null==s[i]||s[i]>t)&&1===e[t]&&(n.push(e[t]),r.push(t)),s[i]<=t&&i++}1!==e[t]&&(n.push(e[t]),r.push(t))}return{newShape:n,keptDims:r}}function ye(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else{if("bool"!==e)throw new Error(`Unknown data type ${e}`);n=new Uint8Array(t)}return n}function be(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error(`Unknown data type ${e}`);n=new Array(t)}return n}function xe(e,t){for(let n=0;n<e.length;n++){const r=e[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${t} being uploaded contains ${r}.`)}}function we(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}function ve(e,t){return!("complex64"===t||"float32"===t&&"complex64"!==e||"int32"===t&&"float32"!==e&&"complex64"!==e||"bool"===t&&"bool"===e)}function ke(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array}function Ie(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error(`Unknown dtype ${e}`)}function Se(e){if(null==e)return 0;let t=0;return e.forEach((e=>t+=e.length)),t}function Ne(e){return"string"==typeof e||e instanceof String}function Te(e){return"boolean"==typeof e}function Ce(e){return"number"==typeof e}function $e(e){return Array.isArray(e)?$e(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array?"int32":Ce(e)?"float32":Ne(e)?"string":Te(e)?"bool":"float32"}function _e(e){return!!(e&&e.constructor&&e.call&&e.apply)}function Ee(e,t){for(let n=t;n<e;++n)if(e%n==0)return n;return e}function Ae(e){const t=e.length;if(t<2)return[];const n=new Array(t-1);n[t-2]=e[t-1];for(let r=t-3;r>=0;--r)n[r]=n[r+1]*e[r+1];return n}function Fe(e,t,n,r=!1){const a=new Array;if(1===t.length){const s=t[0]*(r?2:1);for(let t=0;t<s;t++)a[t]=n[e+t]}else{const s=t[0],i=t.slice(1),o=i.reduce(((e,t)=>e*t))*(r?2:1);for(let t=0;t<s;t++)a[t]=Fe(e+t*o,i,n,r)}return a}function Re(e,t,n=!1){if(0===e.length)return t[0];const r=e.reduce(((e,t)=>e*t))*(n?2:1);if(0===r)return[];if(r!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}${n?" for a complex tensor":""}.`);return Fe(0,e,t,n)}function De(e,t){const n=Me(e,t);for(let e=0;e<n.length;e++)n[e]=1;return n}function Me(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function Oe(e,t){const n=e.reduce(((e,t)=>e*t),1);if(null==t||"float32"===t)return Re(e,new Float32Array(n));if("int32"===t)return Re(e,new Int32Array(n));if("bool"===t)return Re(e,new Uint8Array(n));throw new Error(`Unknown data type ${t}`)}function Le(e){e.forEach((t=>{te(Number.isInteger(t)&&t>=0,(()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`))}))}function ze(e,t,n){if(0===t)return 0;if(1===t)return e[0];let r=e[e.length-1];for(let t=0;t<e.length-1;++t)r+=n[t]*e[t];return r}function Pe(e,t,n){if(0===t)return[];if(1===t)return[e];const r=new Array(t);for(let t=0;t<r.length-1;++t)r[t]=Math.floor(e/n[t]),e-=r[t]*n[t];return r[r.length-1]=e,r}function Be(e){return e&&e.then&&"function"==typeof e.then}var We=class{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=Ve,this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${t}.`),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){const t=this.urlFlags[e];console.warn(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if(Be(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;const e=this.getQueryParams(this.global.location.search);"tfjsflags"in e&&e.tfjsflags.split(",").forEach((e=>{const[t,n]=e.split(":");this.urlFlags[t]=function(e,t){if("true"===(t=t.toLowerCase())||"false"===t)return"true"===t;if(""+ +t===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${e}.`)}(t,n)}))}};function Ve(e){const t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,((e,...n)=>(function(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}(t,n[0],n[1]),n.join("=")))),t}function Ue(){return He}var Ge,He=null;function je(){if(null==Ge){let e;if("undefined"!=typeof window)e=window;else if(void 0!==n.g)e=n.g;else if("undefined"!=typeof process)e=process;else{if("undefined"==typeof self)throw new Error("Could not find a global object");e=self}Ge=e}return Ge}function qe(e,t){const n=function(){const e=je();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{const r=t();return n.set(e,r),n.get(e)}}var Ke="Abs",Xe="Acos",Ye="Acosh",Ze="Add",Je="AddN",Qe="All",et="Any",tt="ArgMax",nt="ArgMin",rt="Asin",at="Asinh",st="Atan",it="Atanh",ot="Atan2",ut="AvgPool",lt="AvgPoolGrad",ct="AvgPool3D",ht="AvgPool3DGrad",dt="BatchMatMul",pt="BatchToSpaceND",ft="Bincount",mt="BroadcastTo",gt="Cast",yt="Ceil",bt="ClipByValue",xt="Complex",wt="ComplexAbs",vt="Concat",kt="Conv2D",It="Conv2DBackpropFilter",St="Conv2DBackpropInput",Nt="Conv3D",Tt="Conv3DBackpropFilterV2",Ct="Conv3DBackpropInputV2",$t="Cos",_t="Cosh",Et="Cumsum",At="CropAndResize",Ft="DenseBincount",Rt="DepthToSpace",Dt="DepthwiseConv2dNative",Mt="DepthwiseConv2dNativeBackpropFilter",Ot="DepthwiseConv2dNativeBackpropInput",Lt="Diag",zt="Dilation2D",Pt="Dilation2DBackpropInput",Bt="Dilation2DBackpropFilter",Wt="RealDiv",Vt="Einsum",Ut="Elu",Gt="EluGrad",Ht="Erf",jt="Equal",qt="Exp",Kt="ExpandDims",Xt="Expm1",Yt="FFT",Zt="Fill",Jt="FlipLeftRight",Qt="Floor",en="FloorDiv",tn="FusedBatchNorm",nn="GatherV2",rn="GatherNd",an="Greater",sn="GreaterEqual",on="Identity",un="IFFT",ln="Imag",cn="IsFinite",hn="IsInf",dn="IsNan",pn="LeakyRelu",fn="Less",mn="LessEqual",gn="LinSpace",yn="Log",bn="Log1p",xn="LogicalAnd",wn="LogicalNot",vn="LogicalOr",kn="LogSoftmax",In="LRN",Sn="LRNGrad",Nn="Max",Tn="Maximum",Cn="MaxPool",$n="MaxPoolGrad",_n="MaxPool3D",En="MaxPool3DGrad",An="MaxPoolWithArgmax",Fn="Mean",Rn="Min",Dn="Minimum",Mn="MirrorPad",On="Mod",Ln="Multinomial",zn="Multiply",Pn="Neg",Bn="NotEqual",Wn="NonMaxSuppressionV3",Vn="NonMaxSuppressionV4",Un="NonMaxSuppressionV5",Gn="OnesLike",Hn="OneHot",jn="Pack",qn="PadV2",Kn="Pool",Xn="Pow",Yn="Prelu",Zn="Prod",Jn="Range",Qn="Real",er="Reciprocal",tr="Relu",nr="Reshape",rr="ResizeNearestNeighbor",ar="ResizeNearestNeighborGrad",sr="ResizeBilinear",ir="ResizeBilinearGrad",or="Relu6",ur="Reverse",lr="Round",cr="Rsqrt",hr="ScatterNd",dr="Select",pr="Selu",fr="Slice",mr="Sin",gr="Sinh",yr="Sign",br="Sigmoid",xr="Softplus",wr="Sqrt",vr="Sum",kr="SpaceToBatchND",Ir="SplitV",Sr="Softmax",Nr="SparseFillEmptyRows",Tr="SparseReshape",Cr="SparseSegmentMean",$r="SparseSegmentSum",_r="SparseToDense",Er="SquaredDifference",Ar="Square",Fr="StridedSlice",Rr="StringNGrams",Dr="StringSplit",Mr="StringToHashBucketFast",Or="Sub",Lr="Tan",zr="Tanh",Pr="Tile",Br="TopK",Wr="Transform",Vr="Transpose",Ur="Unique",Gr="Unpack",Hr="UnsortedSegmentSum",jr="ZerosLike",qr="Step",Kr="FromPixels",Xr="RotateWithOffset",Yr="_FusedMatMul",Zr="FusedConv2D",Jr="FusedDepthwiseConv2D",Qr=qe("kernelRegistry",(()=>new Map)),ea=qe("gradRegistry",(()=>new Map));function ta(e,t){const n=la(e,t);return Qr.get(n)}function na(e){return ea.get(e)}function ra(e){const t=Qr.entries(),n=[];for(;;){const{done:r,value:a}=t.next();if(r)break;const[s,i]=a,[o]=s.split("_");o===e&&n.push(i)}return n}function aa(e){const{kernelName:t,backendName:n}=e,r=la(t,n);Qr.has(r)&&console.warn(`The kernel '${t}' for backend '${n}' is already registered`),Qr.set(r,e)}function sa(e){const{kernelName:t}=e;ea.has(t)&&Ue().getBool("DEBUG")&&console.warn(`Overriding the gradient for '${t}'`),ea.set(t,e)}function ia(e,t){const n=la(e,t);if(!Qr.has(n))throw new Error(`The kernel '${e}' for backend '${t}' is not registered`);Qr.delete(n)}function oa(e){if(!ea.has(e))throw new Error(`The gradient '${e}' for backend is not registered`);ea.delete(e)}function ua(e,t){ra(e).forEach((e=>{aa(Object.assign({},e,{backendName:t}))}))}function la(e,t){return`${t}_${e}`}var ca={};y(ca,{arraysEqual:()=>oe,assert:()=>te,assertNonNegativeIntegerDimensions:()=>Le,assertNonNull:()=>re,assertShapesMatch:()=>ne,bytesFromStringArray:()=>Se,bytesPerElement:()=>Ie,checkConversionForErrors:()=>xe,clamp:()=>X,computeStrides:()=>Ae,createScalarValue:()=>Na,createShuffledIndices:()=>he,decodeString:()=>Ea,distSquared:()=>ee,encodeString:()=>_a,fetch:()=>$a,fingerPrint64:()=>Sa,flatten:()=>ae,getArrayFromDType:()=>be,getTypedArrayFromDType:()=>ye,hasEncodingLoss:()=>ve,hexToLong:()=>pa,indexToLoc:()=>Pe,inferDtype:()=>$e,inferFromImplicitShape:()=>fe,isBoolean:()=>Te,isFunction:()=>_e,isInt:()=>ue,isNumber:()=>Ce,isPromise:()=>Be,isScalarShape:()=>ie,isString:()=>Ne,isTypedArray:()=>ke,isValidDtype:()=>we,locToIndex:()=>ze,makeOnesTypedArray:()=>De,makeZerosNestedTypedArray:()=>Oe,makeZerosTypedArray:()=>Me,nearestDivisor:()=>Ee,nearestLargerEven:()=>Y,now:()=>Ca,parseAxisParam:()=>me,randUniform:()=>Q,repeatedTry:()=>pe,rightPad:()=>de,shuffle:()=>q,shuffleCombo:()=>K,sizeFromShape:()=>se,sizeToSquarishShape:()=>ce,squeezeShape:()=>ge,sum:()=>J,swap:()=>Z,tanh:()=>le,toNestedArray:()=>Re,toTypedArray:()=>Ta});var ha=b(x()),da=ha.default||ha;function pa(e){return da.fromString(e,!0,16)}var fa=pa("c3a5c85c97cb3127"),ma=pa("b492b66fbe98f273"),ga=pa("9ae16a3b2f90404f");function ya(e){return e.xor(e.shru(47))}function ba(e,t,n){const r=e.slice(t,t+n);return da.fromBytes(Array.from(r),!0,!0)}function xa(e,t){return ba(e,t,8)}function wa(e,t){return ba(e,t,4)}function va(e,t){return 0===t?e:e.shru(t).or(e.shl(64-t))}function ka(e,t,n=pa("9ddfea08eb382d69")){let r=e.xor(t).mul(n);r=r.xor(r.shru(47));let a=t.xor(r).mul(n);return a=a.xor(a.shru(47)),a=a.mul(n),a}function Ia(e,t,n,r){return function(e,t,n,r,a,s){a=a.add(e),s=va(s.add(a).add(r),21);const i=a;return a=(a=a.add(t)).add(n),s=s.add(va(a,44)),[a.add(r),s.add(i)]}(xa(e,t),xa(e,t+8),xa(e,t+16),xa(e,t+24),n,r)}function Sa(e,t=e.length){const n=da.fromNumber(81,!0);if(t<=32)return t<=16?function(e,t=e.length){if(t>=8){const n=ga.add(2*t),r=xa(e,0).add(ga),a=xa(e,t-8);return ka(va(a,37).mul(n).add(r),va(r,25).add(a).mul(n),n)}if(t>=4){const n=ga.add(2*t);return ka(wa(e,0).shl(3).add(t),wa(e,t-4),n)}if(t>0){const n=e[0]+(e[t>>1]<<8),r=t+(e[t-1]<<2);return ya(ga.mul(n).xor(fa.mul(r))).mul(ga)}return ga}(e,t):function(e,t=e.length){const n=ga.add(2*t),r=xa(e,0).mul(ma),a=xa(e,8),s=xa(e,t-8).mul(n),i=xa(e,t-16).mul(ga);return ka(va(r.add(a),43).add(va(s,30)).add(i),r.add(va(a.add(ga),18)).add(s),n)}(e,t);if(t<=64)return function(e,t=e.length){const n=ga.add(2*t),r=xa(e,0).mul(ga),a=xa(e,8),s=xa(e,t-8).mul(n),i=xa(e,t-16).mul(ga),o=va(r.add(a),43).add(va(s,30)).add(i),u=ka(o,r.add(va(a.add(ga),18)).add(s),n),l=xa(e,16).mul(n),c=xa(e,24),h=o.add(xa(e,t-32)).mul(n),d=u.add(xa(e,t-24)).mul(n);return ka(va(l.add(c),43).add(va(h,30)).add(d),l.add(va(c.add(r),18)).add(h),n)}(e,t);let r=n,a=n.mul(ma).add(113),s=ya(a.mul(ga).add(113)).mul(ga),i=[da.UZERO,da.UZERO],o=[da.UZERO,da.UZERO];r=r.mul(ga).add(xa(e,0));let u=0;const l=64*(t-1>>6),c=l+(t-1&63)-63;do{r=va(r.add(a).add(i[0]).add(xa(e,u+8)),37).mul(ma),a=va(a.add(i[1]).add(xa(e,u+48)),42).mul(ma),r=r.xor(o[1]),a=a.add(i[0]).add(xa(e,u+40)),s=va(s.add(o[0]),33).mul(ma),i=Ia(e,u,i[1].mul(ma),r.add(o[0])),o=Ia(e,u+32,s.add(o[1]),a.add(xa(e,u+16))),[s,r]=[r,s],u+=64}while(u!==l);const h=ma.add(s.and(255).shl(1));return u=c,o[0]=o[0].add(t-1&63),i[0]=i[0].add(o[0]),o[0]=o[0].add(i[0]),r=va(r.add(a).add(i[0]).add(xa(e,u+8)),37).mul(h),a=va(a.add(i[1]).add(xa(e,u+48)),42).mul(h),r=r.xor(o[1].mul(9)),a=a.add(i[0].mul(9).add(xa(e,u+40))),s=va(s.add(o[0]),33).mul(h),i=Ia(e,u,i[1].mul(h),r.add(o[0])),o=Ia(e,u+32,s.add(o[1]),a.add(xa(e,u+16))),[s,r]=[r,s],ka(ka(i[0],o[0],h).add(ya(a).mul(fa)).add(s),ka(i[1],o[1],h).add(r),h)}function Na(e,t){return"string"===t?_a(e):Ta([e],t)}function Ta(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=ae(e)),Ue().getBool("DEBUG")&&xe(e,t),function(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){const t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error(`Unknown data type ${t}`)}function Ca(){return Ue().platform.now()}function $a(e,t){return Ue().platform.fetch(e,t)}function _a(e,t="utf-8"){return t=t||"utf-8",Ue().platform.encode(e,t)}function Ea(e,t="utf-8"){return t=t||"utf-8",Ue().platform.decode(e,t)}function Aa(e,t,n){if("float32"!==t)return!1;for(let t=0;t<e.length;t++){const r=e[t];if(isNaN(r)||!isFinite(r))return console.warn(`Found ${r} in the result of '${n}'`),!0}return!1}function Fa(e,t,n,r){const a=Ae(t),s=function(e,t,n,r){const a=se(t),s=r[r.length-1],i=new Array(s).fill(0),o=t.length,u="complex64"===n?Oa(e):e;if(o>1)for(let e=0;e<a/s;e++){const t=e*s;for(let e=0;e<s;e++)i[e]=Math.max(i[e],Ra(u[t+e],0,n).length)}return i}(e,t,n,a),i=t.length,o=Ma(e,t,n,a,s),u=["Tensor"];return r&&(u.push(`  dtype: ${n}`),u.push(`  rank: ${i}`),u.push(`  shape: [${t}]`),u.push("  values:")),u.push(o.map((e=>"    "+e)).join("\n")),u.join("\n")}function Ra(e,t,n){let r;return r=Array.isArray(e)?`${parseFloat(e[0].toFixed(7))} + ${parseFloat(e[1].toFixed(7))}j`:Ne(e)?`'${e}'`:"bool"===n?Da(e):parseFloat(e.toFixed(7)).toString(),de(r,t)}function Da(e){return 0===e?"false":"true"}function Ma(e,t,n,r,a,s=!0){const i="complex64"===n?2:1,o=t[0],u=t.length;if(0===u)return"complex64"===n?[Ra(Oa(e)[0],0,n)]:"bool"===n?[Da(e[0])]:[e[0].toString()];if(1===u){if(o>20){const t=3*i;let r=Array.from(e.slice(0,t)),s=Array.from(e.slice((o-3)*i,o*i));return"complex64"===n&&(r=Oa(r),s=Oa(s)),["["+r.map(((e,t)=>Ra(e,a[t],n))).join(", ")+", ..., "+s.map(((e,t)=>Ra(e,a[o-3+t],n))).join(", ")+"]"]}return["["+("complex64"===n?Oa(e):Array.from(e)).map(((e,t)=>Ra(e,a[t],n))).join(", ")+"]"]}const l=t.slice(1),c=r.slice(1),h=r[0]*i,d=[];if(o>20){for(let t=0;t<3;t++){const r=t*h,s=r+h;d.push(...Ma(e.slice(r,s),l,n,c,a,!1))}d.push("...");for(let t=o-3;t<o;t++){const r=t*h,s=r+h;d.push(...Ma(e.slice(r,s),l,n,c,a,t===o-1))}}else for(let t=0;t<o;t++){const r=t*h,s=r+h;d.push(...Ma(e.slice(r,s),l,n,c,a,t===o-1))}const p=2===u?",":"";d[0]="["+d[0]+p;for(let e=1;e<d.length-1;e++)d[e]=" "+d[e]+p;let f=",\n";for(let e=2;e<u;e++)f+="\n";return d[d.length-1]=" "+d[d.length-1]+"]"+(s?"":f),d}function Oa(e){const t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}var La=class{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=se(e),null!=n){const e=n.length;te(e===this.size,(()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`))}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||be(t,this.size),this.strides=Ae(e)}set(e,...t){0===t.length&&(t=[0]),te(t.length===this.rank,(()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`));const n=this.locToIndex(t);this.values[n]=e}get(...e){0===e.length&&(e=[0]);let t=0;for(const n of e){if(n<0||n>=this.shape[t]){const t=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(t)}t++}let n=e[e.length-1];for(let t=0;t<e.length-1;++t)n+=this.strides[t]*e[t];return this.values[n]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];const t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return za().makeTensor(this.values,this.shape,this.dtype)}},za=null,Pa=null,Ba=class{constructor(e,t,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=se(e),this.strides=Ae(e),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return Pa.buffer(this.shape,this.dtype,e)}bufferSync(){return Pa.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return Re(this.shape,e,"complex64"===this.dtype)}arraySync(){return Re(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();const e=za().read(this.dataId);if("string"===this.dtype){const t=await e;try{return t.map((e=>Ea(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataSync(){this.throwIfDisposed();const e=za().readSync(this.dataId);if("string"===this.dtype)try{return e.map((e=>Ea(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await za().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(za().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return Pa.print(this,e)}clone(){return this.throwIfDisposed(),Pa.clone(this)}toString(e=!1){return Fa(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),Pa.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),za().makeVariable(this,e,t,n)}};function Wa(){return qe("Tensor",(()=>Ba))}Object.defineProperty(Ba,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),Wa();var Va=class extends Ba{constructor(e,t,n,r){super(e.shape,e.dtype,e.dataId,r),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!oe(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);za().disposeTensor(this),this.dataId=e.dataId,za().incRef(this,null)}dispose(){za().disposeVariable(this),this.isDisposedInternal=!0}};Object.defineProperty(Va,Symbol.hasInstance,{value:e=>e instanceof Ba&&null!=e.assign&&e.assign instanceof Function});var Ua,Ga,Ha,ja,qa,Ka,Xa,Ya,Za,Ja,Qa={};y(Qa,{assertTypesMatch:()=>as,getTensorsInContainer:()=>is,isTensorInList:()=>ss,makeTypesMatch:()=>rs}),(Ga=Ua||(Ua={})).R0="R0",Ga.R1="R1",Ga.R2="R2",Ga.R3="R3",Ga.R4="R4",Ga.R5="R5",Ga.R6="R6",(ja=Ha||(Ha={})).float32="float32",ja.int32="int32",ja.bool="int32",ja.complex64="complex64",(Ka=qa||(qa={})).float32="float32",Ka.int32="int32",Ka.bool="bool",Ka.complex64="complex64",(Ya=Xa||(Xa={})).float32="float32",Ya.int32="float32",Ya.bool="float32",Ya.complex64="complex64",(Ja=Za||(Za={})).float32="complex64",Ja.int32="complex64",Ja.bool="complex64",Ja.complex64="complex64";var es={float32:Xa,int32:Ha,bool:qa,complex64:Za};function ts(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return es[e][t]}function ns(e){return ts(e,"int32")}function rs(e,t){if(e.dtype===t.dtype)return[e,t];const n=ts(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function as(e,t){te(e.dtype===t.dtype,(()=>`The dtypes of the first(${e.dtype}) and second(${t.dtype}) input must match`))}function ss(e,t){return t.some((t=>t.id===e.id))}function is(e){const t=[];return os(e,t,new Set),t}function os(e,t,n){if(null==e)return;if(e instanceof Ba)return void t.push(e);if(r=e,!Array.isArray(r)&&"object"!=typeof r)return;var r;const a=e;for(const e in a){const r=a[e];n.has(r)||(n.add(r),os(r,t,n))}}function us(e){return null!=e.kernelName}var ls=class{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map((e=>e.name))))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}},cs=class{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new ls}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(console.warn(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;const{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new class{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new class{logKernelProfile(e,t,n,r,a,s){const i="number"==typeof r?de(`${r}ms`,9):r.error,o=de(e,25),u=t.rank,l=t.size,c=de(t.shape.toString(),14);let h="";for(const e in a){const n=a[e];if(null!=n){const r=n.shape||t.shape,a=r.length;h+=`${e}: ${a}D ${a>0?r:""} `}}console.log(`%c${o}\t%c${i}\t%c${u}D ${c}\t%c${l}\t%c${h}\t%c${s}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}})}profileKernel(e,t,n){let r;const a=()=>{r=n()};let s;const i=Ca();if(this.backendTimer.timerAvailable())s=this.backendTimer.time(a);else{a();for(const e of r)e.dataSync();s=Promise.resolve({kernelMs:Ca()-i})}if(Ue().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let t=0;t<r.length;t++){const n=r[t];n.data().then((t=>{Aa(t,n.dtype,e)}))}return{kernelName:e,outputs:r,inputs:t,timeMs:s.then((e=>e.kernelMs)),extraInfo:s.then((e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():""))}}logKernelProfile(e){const{kernelName:t,outputs:n,timeMs:r,inputs:a,extraInfo:s}=e;n.forEach((e=>{Promise.all([e.data(),r,s]).then((n=>{this.logger.logKernelProfile(t,e,n[0],n[1],a,n[2])}))}))}}(this.backendInstance),!0}setupRegisteredKernels(){ra(this.backendName).forEach((e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(e){ra(e).forEach((t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])}))}initializeBackend(e){const t=this.registryFactory[e];if(null==t)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const n=t.factory();if(!n||n instanceof H||"function"!=typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{const t=++this.pendingBackendInitId,r=n.then((n=>!(t<this.pendingBackendInitId||(this.registry[e]=n,this.pendingBackendInit=null,0)))).catch((n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,console.warn(`Initialization of backend ${e} failed`),console.warn(n.stack||n.message)),!1)));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}}catch(t){return console.warn(`Initialization of backend ${e} failed`),console.warn(t.stack||t.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority))}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],{success:r,asyncInit:a}=this.initializeBackend(n);if(a||r)return{name:n,asyncInit:a}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const n=this.state.tensorInfo.get(t),r=n.backend,a=this.readSync(t),s=r.refCount(t);r.disposeData(t,!0),n.backend=e,e.move(t,a,n.shape,n.dtype,s),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,r=null;if(null==t){if("function"!=typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!=typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=e}return this.scopedRun((()=>this.startScope(r)),(()=>this.endScope(n)),(()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(e,t,n){e();try{const e=n();return t(),e}catch(e){throw t(),e}}nextTensorId(){return cs.nextTensorId++}nextVariableId(){return cs.nextVariableId++}clone(e){const t=ds.runKernel(on,{x:e}),n={x:e};return this.addTapeNode(this.state.activeScope.name,n,[t],(e=>({x:()=>{const t={x:e};return ds.runKernel(gt,t,{dtype:"float32"})}})),[],{}),t}runKernel(e,t,n){if(null==this.backendName&&this.backend,null==ta(e,this.backendName))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){const r=this.backend.numDataIds();let a=0;n.forEach((e=>{a+="complex64"===e.dtype?3:1}));const s=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=r-t-a-s;if(i>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${i} data ids) after running '${e}'`)}runKernelFunc(e){let t,n=[];const r=this.isTapeOn(),a=this.state.numBytes,s=this.state.numTensors;let i,o;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const u=us(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(us(e)){const{kernelName:t,inputs:a,attrs:s}=e;null==this.backendName&&this.backend;const u=ta(t,this.backendName);te(null!=u,(()=>`Cannot find registered kernel '${t}' for backend '${this.backendName}'`)),i=()=>{const e=this.backend.numDataIds();o=u.kernelFunc({inputs:a,attrs:s,backend:this.backend});const i=Array.isArray(o)?o:[o];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,i);const l=i.map((e=>{if(null!=e.rank)return e;const{dataId:t,shape:n,dtype:r}=e;return this.makeTensorFromDataId(t,n,r)}));if(r){const e=this.getTensorsForGradient(t,a,l);n=this.saveTensorsForBackwardMode(e)}return l}}else{const{forwardFunc:t}=e,a=e=>{r&&(n=e.map((e=>this.keep(this.clone(e)))))};i=()=>{const e=this.backend.numDataIds();o=this.tidy((()=>t(this.backend,a)));const n=Array.isArray(o)?o:[o];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(u,e,n),n}}const{inputs:l,attrs:c}=e,h=us(e)?null:e.backwardsFunc;let d;return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(d=this.profiler.profileKernel(u,l,(()=>i())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(d),t=d.outputs):t=i()})),r&&this.addTapeNode(u,l,t,h,n,c),this.state.profiling&&this.state.activeProfile.kernels.push({name:u,bytesAdded:this.state.numBytes-a,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-s,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(l).map((e=>null!=l[e]?l[e].shape:null)),outputShapes:t.map((e=>e.shape)),kernelTimeMs:d.timeMs,extraInfo:d.extraInfo}),Array.isArray(o)?t:t[0]}saveTensorsForBackwardMode(e){return e.map((e=>this.keep(this.clone(e))))}getTensorsForGradient(e,t,n){const r=na(e);if(null!=r){const e=r.inputsToSave||[],a=r.outputsToSave||[];let s;r.saveAllInputs?(te(Array.isArray(t),(()=>"saveAllInputs is true, expected inputs to be an array.")),s=Object.keys(t).map((e=>t[e]))):s=e.map((e=>t[e]));const i=n.filter(((e,t)=>a[t]));return s.concat(i)}return[]}makeTensor(e,t,n,r){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;let a=e;"string"===n&&Ne(e[0])&&(a=e.map((e=>_a(e))));const s=r.write(a,t,n),i=new Ba(t,n,s,this.nextTensorId());if(this.trackTensor(i,r),"string"===n){const e=this.state.tensorInfo.get(s),t=Se(a);this.state.numBytes+=t-e.bytes,e.bytes=t}return i}makeTensorFromDataId(e,t,n,r){const a=new Ba(t,n=n||"float32",e,this.nextTensorId());return this.trackTensor(a,r),a}makeVariable(e,t=!0,n,r){n=n||this.nextVariableId().toString(),null!=r&&r!==e.dtype&&(e=e.cast(r));const a=new Va(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[a.name])throw new Error(`Variable with name ${a.name} was already registered`);return this.state.registeredVariables[a.name]=a,this.incRef(a,this.backend),a}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*Ie(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof Va||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){const t=e.size*Ie(e.dtype);this.state.numBytes-=t}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((e=>e.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const e of this.state.activeProfile.kernels)e.kernelTimeMs=await e.kernelTimeMs,e.extraInfo=await e.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,r,a,s){const i={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:a},o=na(e);null!=o&&(r=o.gradFunc),null!=r&&(i.gradient=e=>(e=e.map(((e,t)=>{if(null==e){const e=n[t],r=Me(e.size,e.dtype);return this.makeTensor(r,e.shape,e.dtype)}return e})),r(e.length>1?e:e[0],a,s))),this.state.activeTape.push(i)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=is(e),n=new Set(t.map((e=>e.id)));for(let e=0;e<this.state.activeScope.track.length;e++){const t=this.state.activeScope.track[e];t.kept||n.has(t.id)||t.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach((e=>{e.kept||e.scopeId!==r.id||this.track(e)}))}gradients(e,t,n,r=!1){if(te(t.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const a=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",e)));te(a instanceof Ba,(()=>"The result y returned by f() must be a tensor."));const s=function(e,t,n){const r={},a={};for(let e=0;e<t.length;e++)r[t[e].id]=!0;for(let n=0;n<e.length;n++){const s=e[n],i=s.inputs;for(const e in i){const n=i[e];let o=!1;for(let e=0;e<t.length;e++)if(r[n.id]){s.outputs.forEach((e=>r[e.id]=!0)),o=!0,a[s.id]=!0;break}if(o)break}}const s={};s[n.id]=!0;const i={};for(let t=e.length-1;t>=0;t--){const n=e[t],r=n.inputs;for(let e=0;e<n.outputs.length;e++)if(s[n.outputs[e].id]){for(const e in r)s[r[e].id]=!0,i[n.id]=!0;break}}const o=[];for(let t=0;t<e.length;t++){const n=e[t];if(a[n.id]&&i[n.id]){const e={};for(const t in n.inputs){const a=n.inputs[t];r[a.id]&&(e[t]=a)}const t=Object.assign({},n);t.inputs=e,t.outputs=n.outputs,o.push(t)}}return o}(this.state.activeTape,t,a);if(!r&&0===s.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{const e={};e[a.id]=null==n?function(e){const t=De(se(e),"float32");return ds.makeTensor(t,e,"float32")}(a.shape):n,function(e,t,n,r){for(let a=t.length-1;a>=0;a--){const s=t[a],i=[];if(s.outputs.forEach((t=>{const n=e[t.id];null!=n?i.push(n):i.push(null)})),null==s.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${s.kernelName}.`);const o=s.gradient(i);for(const t in s.inputs){if(!(t in o))throw new Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(o)}.`);const a=n((()=>o[t]()));if("float32"!==a.dtype)throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${a.dtype}'`);const i=s.inputs[t];if(!oe(a.shape,i.shape))throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input '${t}' has shape '${a.shape}', which does not match the shape of the input '${i.shape}'`);if(null==e[i.id])e[i.id]=a;else{const t=e[i.id];e[i.id]=r(t,a),t.dispose()}}}}(e,s,(e=>this.tidy(e)),ps);const r=t.map((t=>e[t.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((e=>{for(const t of e.saved)t.dispose()})),this.state.activeTape=null),{value:a,grads:r}}))}customGrad(e){return te(_e(e),(()=>"The f passed in customGrad(f) must be a function.")),(...t)=>{let n;te(t.every((e=>e instanceof Ba)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));const r={};return t.forEach(((e,t)=>{r[t]=e})),this.runKernelFunc({forwardFunc:(r,a)=>(n=e(...t,a),te(n.value instanceof Ba,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),te(_e(n.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),n.value),backwardsFunc:(e,r)=>{const a=n.gradFunc(e,r),s=Array.isArray(a)?a:[a];te(s.length===t.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),te(s.every((e=>e instanceof Ba)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));const i={};return s.forEach(((e,t)=>{i[t]=()=>e})),i},inputs:r})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}async time(e){const t=Ca(),n=await this.backend.time(e);return n.wallMs=Ca()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new ls;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}};function hs(){const e=je();if(null==e._tfengine){const t=new We(e);e._tfengine=new cs(t)}var t;return t=e._tfengine.ENV,He=t,za=()=>e._tfengine,e._tfengine}cs.nextTensorId=0,cs.nextVariableId=0;var ds=hs();function ps(e,t){const n={a:e,b:t};return ds.runKernel(Ze,n)}var fs={};function ms(e){if(e||"undefined"!=typeof navigator&&null!=navigator){if(e||(e=navigator),"ReactNative"===e.product)return!0;const t=e.userAgent||e.vendor||window.opera;return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function gs(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}y(fs,{isBrowser:()=>gs,isMobile:()=>ms});var ys=Ue();function bs(e,t){let n=e;if(ke(e))return"string"===t?[]:[e.length];if(!Array.isArray(e))return[];const r=[];for(;Array.isArray(n)||ke(n)&&"string"!==t;)r.push(n.length),n=n[0];return Array.isArray(e)&&Ue().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&xs(e,r,[]),r}function xs(e,t,n){if(n=n||[],!Array.isArray(e)&&!ke(e))return void te(0===t.length,(()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`));te(t.length>0,(()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`)),te(e.length===t[0],(()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`));const r=t.slice(1);for(let t=0;t<e.length;++t)xs(e[t],r,n.concat(t))}function ws(e,t,n,r){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error(`Argument '${n}' passed to '${r}' must be ${e} tensor, but got ${t} tensor`)}}function vs(e,t,n,r="numeric"){if(e instanceof Ba)return ws(r,e.dtype,t,n),e;let a=$e(e);if("string"!==a&&["bool","int32","float32"].indexOf(r)>=0&&(a=r),ws(r,a,t,n),null==e||!ke(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e){const r=null==e?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${r}'`)}const s=bs(e,a);ke(e)||Array.isArray(e)||(e=[e]);const i="string"!==a?Ta(e,a):ae(e,[],!0);return ds.makeTensor(i,s,a)}function ks(e,t,n,r="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map(((e,a)=>vs(e,`${t}[${a}]`,n,r)))}ys.registerFlag("DEBUG",(()=>!1),(e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),ys.registerFlag("IS_BROWSER",(()=>gs())),ys.registerFlag("IS_NODE",(()=>"undefined"!=typeof process&&void 0!==process.versions&&void 0!==process.versions.node)),ys.registerFlag("IS_CHROME",(()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),ys.registerFlag("PROD",(()=>!1)),ys.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>ys.getBool("DEBUG"))),ys.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),ys.registerFlag("IS_TEST",(()=>!1)),ys.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",(()=>!0)),ys.registerFlag("WRAP_TO_IMAGEBITMAP",(()=>!1));var Is="__op";function Ss(e){const t=Object.keys(e);if(1!==t.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0];const r=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+=Is;const a=(...e)=>{ds.startScope(n);try{const t=r(...e);return Be(t)&&console.error("Cannot return a Promise inside of tidy."),ds.endScope(t),t}catch(e){throw ds.endScope(null),e}};return Object.defineProperty(a,"name",{value:n,configurable:!0}),a}var Ns=Ss({complex_:function(e,t){const n=vs(e,"real","complex"),r=vs(t,"imag","complex");ne(n.shape,r.shape,`real and imag shapes, ${n.shape} and ${r.shape}, must match in call to tf.complex().`);const a={real:n,imag:r};return ds.runKernel(xt,a)}});function Ts(e,t,n,r){if(null==r&&(r=$e(e)),"complex64"===r)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!ke(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){Le(t);const e=se(t),r=se(n);te(e===r,(()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${r}`));for(let e=0;e<n.length;++e){const r=n[e],a=e!==n.length-1||r!==se(t.slice(e));te(n[e]===t[e]||!a,(()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `))}}return ke(e)||Array.isArray(e)||(e=[e]),t=t||n,e="string"!==r?Ta(e,r):ae(e,[],!0),ds.makeTensor(e,t,r)}function Cs(e,t,n){return Ts(e,t,bs(e,n),n)}var $s={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};async function _s(e,t){const n=[],r=[],a=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);for(let s=0;s<a.length;++s){const i=a[s],o=Array.isArray(e)?e[s].tensor:e[i];if("float32"!==o.dtype&&"int32"!==o.dtype&&"bool"!==o.dtype&&"string"!==o.dtype&&"complex64"!==o.dtype)throw new Error(`Unsupported dtype in weight '${i}': ${o.dtype}`);const u={name:i,shape:o.shape,dtype:o.dtype};if("string"===o.dtype){const e=new Promise((async e=>{const t=await o.bytes(),n=t.reduce(((e,t)=>e+t.length),0)+4*t.length,r=new Uint8Array(n);let a=0;for(let e=0;e<t.length;e++){const n=t[e],s=new Uint8Array(new Uint32Array([n.length]).buffer);r.set(s,a),a+=4,r.set(n,a),a+=n.length}e(r)}));r.push(e)}else r.push(o.data());null!=t&&(u.group=t),n.push(u)}return{data:As(await Promise.all(r)),specs:n}}function Es(e,t){const n={};let r,a=0;for(const s of t){const t=s.name,i=s.dtype,o=s.shape,u=se(o);let l;if("quantization"in s){const n=s.quantization;if("uint8"===n.dtype||"uint16"===n.dtype){if(!("min"in n)||!("scale"in n))throw new Error(`Weight ${s.name} with quantization ${n.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==n.dtype)throw new Error(`Weight ${s.name} has unknown quantization dtype ${n.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==i)throw new Error(`Weight ${s.name} is quantized with ${n.dtype} which only supports weights of type float32 not ${i}.`)}const o=$s[n.dtype],c=e.slice(a,a+u*o),h="uint8"===n.dtype?new Uint8Array(c):new Uint16Array(c);if("float32"===i)if("uint8"===n.dtype||"uint16"===n.dtype){l=new Float32Array(h.length);for(let e=0;e<h.length;e++){const t=h[e];l[e]=t*n.scale+n.min}}else{if("float16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type float32.`);void 0===r&&(r=Ps()),l=r(h)}else{if("int32"!==i)throw new Error(`Unsupported dtype in weight '${t}': ${i}`);if("uint8"!==n.dtype&&"uint16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type int32.`);l=new Int32Array(h.length);for(let e=0;e<h.length;e++){const t=h[e];l[e]=Math.round(t*n.scale+n.min)}}a+=u*o}else if("string"===i){const t=se(s.shape);l=[];for(let n=0;n<t;n++){const t=new Uint32Array(e.slice(a,a+4))[0];a+=4;const n=new Uint8Array(e.slice(a,a+t));l.push(n),a+=t}}else{const r=$s[i],s=e.slice(a,a+u*r);if("float32"===i)l=new Float32Array(s);else if("int32"===i)l=new Int32Array(s);else if("bool"===i)l=new Uint8Array(s);else{if("complex64"!==i)throw new Error(`Unsupported dtype in weight '${t}': ${i}`);{l=new Float32Array(s);const e=new Float32Array(l.length/2),r=new Float32Array(l.length/2);for(let t=0;t<e.length;t++)e[t]=l[2*t],r[t]=l[2*t+1];const a=Cs(e,o,"float32"),i=Cs(r,o,"float32");n[t]=Ns(a,i),a.dispose(),i.dispose()}}a+=u*r}"complex64"!==i&&(n[t]=Cs(l,o,i))}return n}function As(e){if(null===e)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0;const n=[];e.forEach((e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${e.constructor.name}`)}));const r=new Uint8Array(t);let a=0;return n.forEach((e=>{r.set(new Uint8Array(e.buffer),a),a+=e.byteLength})),r.buffer}var Fs="undefined"!=typeof Buffer&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function Rs(e){return Fs?Buffer.byteLength(e):new Blob([e]).size}function Ds(e){if(1===e.length)return e[0];let t=0;e.forEach((e=>{t+=e.byteLength}));const n=new Uint8Array(t);let r=0;return e.forEach((e=>{n.set(new Uint8Array(e),r),r+=e.byteLength})),n.buffer}function Ms(e){for(e=e.trim();e.endsWith("/");)e=e.slice(0,e.length-1);const t=e.split("/");return t[t.length-1]}function Os(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),n}async function Ls(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),null!=e.weightsManifest){const[r,a]=await t(e.weightsManifest);n.weightSpecs=r,n.weightData=a}return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),n}function zs(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:Rs(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:Rs(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:e.weightData.byteLength}}function Ps(){const e=function(){const e=e=>{let t=e<<13,n=0;for(;0==(8388608&t);)n-=8388608,t<<=1;return t&=-8388609,n+=947912704,t|n},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let e=1024;e<2048;e++)t[e]=939524096+(e-1024<<13);return t}(),t=function(){const e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}(),n=function(){const e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}();return r=>{const a=new ArrayBuffer(4*r.length),s=new Uint32Array(a);for(let a=0;a<r.length;a++){const i=r[a],o=e[n[i>>10]+(1023&i)]+t[i>>10];s[a]=o}return new Float32Array(a)}}var Bs=class{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==Bs.instance&&(Bs.instance=new Bs),Bs.instance}static registerSaveRouter(e){Bs.getInstance().saveRouters.push(e)}static registerLoadRouter(e){Bs.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return Bs.getHandlers(e,"save")}static getLoadHandlers(e,t){return Bs.getHandlers(e,"load",t)}static getHandlers(e,t,n){const r=[];return("load"===t?Bs.getInstance().loadRouters:Bs.getInstance().saveRouters).forEach((t=>{const a=t(e,n);null!==a&&r.push(a)})),r}},Ws=e=>Bs.registerSaveRouter(e),Vs=e=>Bs.registerLoadRouter(e),Us=e=>Bs.getSaveHandlers(e),Gs=(e,t)=>Bs.getLoadHandlers(e,t),Hs="tensorflowjs",js="models_store",qs="model_info_store";function Ks(){if(!Ue().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const e="undefined"==typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function Xs(e){const t=e.result;t.createObjectStore(js,{keyPath:"modelPath"}),t.createObjectStore(qs,{keyPath:"modelPath"})}var Ys=class{constructor(e){if(this.indexedDB=Ks(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise(((e,n)=>{const r=this.indexedDB.open(Hs,1);r.onupgradeneeded=()=>Xs(r),r.onsuccess=()=>{const a=r.result;if(null==t){const t=a.transaction(js,"readonly"),r=t.objectStore(js).get(this.modelPath);r.onsuccess=()=>{if(null==r.result)return a.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(r.result.modelArtifacts)},r.onerror=e=>(a.close(),n(r.error)),t.oncomplete=()=>a.close()}else{const r=zs(t),s=a.transaction(qs,"readwrite");let i=s.objectStore(qs);const o=i.put({modelPath:this.modelPath,modelArtifactsInfo:r});let u;o.onsuccess=()=>{u=a.transaction(js,"readwrite");const o=u.objectStore(js).put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:r});o.onsuccess=()=>e({modelArtifactsInfo:r}),o.onerror=e=>{i=s.objectStore(qs);const t=i.delete(this.modelPath);t.onsuccess=()=>(a.close(),n(o.error)),t.onerror=e=>(a.close(),n(o.error))}},o.onerror=e=>(a.close(),n(o.error)),s.oncomplete=()=>{null==u?a.close():u.oncomplete=()=>a.close()}}},r.onerror=e=>n(r.error)}))}};Ys.URL_SCHEME="indexeddb://";var Zs=e=>{return Ue().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Ys.URL_SCHEME)?(t=e.slice(Ys.URL_SCHEME.length),new Ys(t)):null;var t};Bs.registerSaveRouter(Zs),Bs.registerLoadRouter(Zs);var Js="/",Qs="tensorflowjs_models",ei="info",ti="model_topology",ni="weight_specs",ri="weight_data",ai="model_metadata";function si(e){return{info:[Qs,e,ei].join(Js),topology:[Qs,e,ti].join(Js),weightSpecs:[Qs,e,ni].join(Js),weightData:[Qs,e,ri].join(Js),modelMetadata:[Qs,e,ai].join(Js)}}function ii(e){for(const t of Object.values(e))window.localStorage.removeItem(t)}function oi(e){const t=e.split(Js);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(Js)}var ui=class{constructor(e){if(!Ue().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=si(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),r=zs(e);try{this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,function(e){if(Fs)return Buffer.from(e).toString("base64");const t=new Uint8Array(e);let n="";for(let e=0,r=t.length;e<r;e++)n+=String.fromCharCode(t[e]);return btoa(n)}(e.weightData));const a={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:null!=e.signature?e.signature:void 0,userDefinedMetadata:null!=e.userDefinedMetadata?e.userDefinedMetadata:void 0,modelInitializer:null!=e.modelInitializer?e.modelInitializer:void 0,trainingConfig:null!=e.trainingConfig?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(a)),{modelArtifactsInfo:r}}catch(e){throw ii(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=r;const a=this.LS.getItem(this.keys.modelMetadata);if(null!=a){const e=JSON.parse(a);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer),null!=e.trainingConfig&&(t.trainingConfig=e.trainingConfig)}const s=this.LS.getItem(this.keys.weightData);if(null==s)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=function(e){if(Fs){const t=Buffer.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}const t=atob(e),n=new Uint8Array(t.length);for(let e=0;e<t.length;++e)n.set([t.charCodeAt(e)],e);return n.buffer}(s),t}};ui.URL_SCHEME="localstorage://";var li=e=>{return Ue().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(ui.URL_SCHEME)?(t=e.slice(ui.URL_SCHEME.length),new ui(t)):null;var t};Bs.registerSaveRouter(li),Bs.registerLoadRouter(li);var ci="://",hi=class{constructor(){this.managers={}}static getInstance(){return null==hi.instance&&(hi.instance=new hi),hi.instance}static registerManager(e,t){te(null!=e,(()=>"scheme must not be undefined or null.")),e.endsWith(ci)&&(e=e.slice(0,e.indexOf(ci))),te(e.length>0,(()=>"scheme must not be an empty string."));const n=hi.getInstance();te(null==n.managers[e],(()=>`A model store manager is already registered for scheme '${e}'.`)),n.managers[e]=t}static getManager(e){const t=this.getInstance().managers[e];if(null==t)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(this.getInstance().managers)}};function di(e){if(-1===e.indexOf(ci))throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${hi.getSchemes().join(",")}`);return{scheme:e.split(ci)[0],path:e.split(ci)[1]}}async function pi(e,t,n=!1){te(e!==t,(()=>`Old path and new path are the same: '${e}'`));const r=Bs.getLoadHandlers(e);te(r.length>0,(()=>`Copying failed because no load handler is found for source URL ${e}.`)),te(r.length<2,(()=>`Copying failed because more than one (${r.length}) load handlers for source URL ${e}.`));const a=r[0],s=Bs.getSaveHandlers(t);te(s.length>0,(()=>`Copying failed because no save handler is found for destination URL ${t}.`)),te(s.length<2,(()=>`Copying failed because more than one (${r.length}) save handlers for destination URL ${t}.`));const i=s[0],o=di(e).scheme,u=di(e).path,l=o===di(e).scheme,c=await a.load();n&&l&&await hi.getManager(o).removeModel(u);const h=await i.save(c);return n&&!l&&await hi.getManager(o).removeModel(u),h.modelArtifactsInfo}async function fi(){const e=hi.getSchemes(),t={};for(const n of e){const e=await hi.getManager(n).listModels();for(const r in e)t[n+ci+r]=e[r]}return t}async function mi(e){const t=di(e);return hi.getManager(t.scheme).removeModel(t.path)}async function gi(e,t){return pi(e,t,!1)}async function yi(e,t){return pi(e,t,!0)}if(Ue().get("IS_BROWSER")){Ue().setPlatform("browser",new class{fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}});try{hi.registerManager(ui.URL_SCHEME,new class{constructor(){te(Ue().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),te("undefined"==typeof window||void 0!==window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){const e={},t=Qs+Js,n=Js+ei;for(let r=0;r<this.LS.length;++r){const a=this.LS.key(r);a.startsWith(t)&&a.endsWith(n)&&(e[oi(a)]=JSON.parse(this.LS.getItem(a)))}return e}async removeModel(e){var t;const n=si(e=(t=e).startsWith(ui.URL_SCHEME)?t.slice(ui.URL_SCHEME.length):t);if(null==this.LS.getItem(n.info))throw new Error(`Cannot find model at path '${e}'`);const r=JSON.parse(this.LS.getItem(n.info));return ii(n),r}})}catch(e){}try{hi.registerManager(Ys.URL_SCHEME,new class{constructor(){this.indexedDB=Ks()}async listModels(){return new Promise(((e,t)=>{const n=this.indexedDB.open(Hs,1);n.onupgradeneeded=()=>Xs(n),n.onsuccess=()=>{const r=n.result,a=r.transaction(qs,"readonly"),s=a.objectStore(qs).getAll();s.onsuccess=()=>{const t={};for(const e of s.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},s.onerror=e=>(r.close(),t(s.error)),a.oncomplete=()=>r.close()},n.onerror=e=>t(n.error)}))}async removeModel(e){var t;return e=(t=e).startsWith(Ys.URL_SCHEME)?t.slice(Ys.URL_SCHEME.length):t,new Promise(((t,n)=>{const r=this.indexedDB.open(Hs,1);r.onupgradeneeded=()=>Xs(r),r.onsuccess=()=>{const a=r.result,s=a.transaction(qs,"readwrite"),i=s.objectStore(qs),o=i.get(e);let u;o.onsuccess=()=>{if(null==o.result)return a.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const r=i.delete(e),s=()=>{u=a.transaction(js,"readwrite");const r=u.objectStore(js).delete(e);r.onsuccess=()=>t(o.result.modelArtifactsInfo),r.onerror=e=>n(o.error)};r.onsuccess=s,r.onerror=e=>(s(),a.close(),n(o.error))}},o.onerror=e=>(a.close(),n(o.error)),s.oncomplete=()=>{null==u?a.close():u.oncomplete=()=>a.close()}},r.onerror=e=>n(r.error)}))}})}catch(e){}}var bi;function xi(e,t="float32",n){return t=t||"float32",Le(e),new La(e,t,n)}Ue().get("IS_NODE")&&Ue().setPlatform("node",new class{constructor(){this.util=m("util"),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=Ue().global.fetch?Ue().global.fetch(e,t):(null==bi&&(bi=w()),bi(e,t))}now(){const e=process.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}});var wi=Ss({cast_:function(e,t){const n=vs(e,"x","cast");if(!we(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const r={x:n},a={dtype:t};return ds.runKernel(gt,r,a)}}),vi=Ss({clone_:function(e){const t={x:vs(e,"x","clone","string_or_numeric")};return ds.runKernel(on,t)}});function ki(e,t=!1){console.log(e.toString(t))}hs(),Pa={buffer:xi,cast:wi,clone:vi,print:ki};var Ii={};function Si(e){return new Promise((e=>setTimeout(e))).then(e)}y(Ii,{browserFiles:()=>Ti,browserHTTPRequest:()=>Mi,concatenateArrayBuffers:()=>Ds,copyModel:()=>gi,decodeWeights:()=>Es,encodeWeights:()=>_s,fromMemory:()=>Li,getLoadHandlers:()=>Gs,getModelArtifactsForJSON:()=>Ls,getModelArtifactsInfoForJSON:()=>zs,getSaveHandlers:()=>Us,http:()=>Di,isHTTPScheme:()=>Fi,listModels:()=>fi,loadWeights:()=>_i,moveModel:()=>yi,registerLoadRouter:()=>Vs,registerSaveRouter:()=>Ws,removeModel:()=>mi,weightsLoaderFactory:()=>Ei,withSaveHandler:()=>zi});var Ni=class{constructor(e){if(!Ue().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(Ni.URL_SCHEME)&&(e=e.slice(Ni.URL_SCHEME.length)),null!=e&&0!==e.length||(e="model"),this.modelJsonFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const n=Os(e,[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}]),r=window.URL.createObjectURL(new Blob([JSON.stringify(n)],{type:"application/json"})),a=null==this.modelJsonAnchor?document.createElement("a"):this.modelJsonAnchor;if(a.download=this.modelJsonFileName,a.href=r,await Si((()=>a.dispatchEvent(new MouseEvent("click")))),null!=e.weightData){const e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=t,await Si((()=>e.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:zs(e)}}}};function Ti(e){return new class{constructor(e){if(null==e||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise(((e,t)=>{const n=new FileReader;n.onload=n=>{const r=JSON.parse(n.target.result),a=r.modelTopology;if(null==a)return void t(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));if(null==r.weightsManifest)return void t(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));if(0===this.weightsFiles.length)return void e({modelTopology:a});const s=Ls(r,(e=>this.loadWeights(e)));e(s)},n.onerror=e=>t(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),n.readAsText(this.jsonFile)}))}loadWeights(e){const t=[],n=[];for(const r of e)t.push(...r.weights),n.push(...r.paths);const r=this.checkManifestAndWeightFiles(e),a=n.map((e=>this.loadWeightsFile(e,r[e])));return Promise.all(a).then((e=>[t,Ds(e)]))}loadWeightsFile(e,t){return new Promise(((n,r)=>{const a=new FileReader;a.onload=e=>{const t=e.target.result;n(t)},a.onerror=t=>r(`Failed to weights data from file of path '${e}'.`),a.readAsArrayBuffer(t)}))}checkManifestAndWeightFiles(e){const t=[],n=this.weightsFiles.map((e=>Ms(e.name))),r={};for(const a of e)a.paths.forEach((e=>{const a=Ms(e);if(-1!==t.indexOf(a))throw new Error(`Duplicate file basename found in weights manifest: '${a}'`);if(t.push(a),-1===n.indexOf(a))throw new Error(`Weight file with basename '${a}' is not provided.`);r[e]=this.weightsFiles[n.indexOf(a)]}));if(t.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${t.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return r}}(e)}function Ci(e,t,n,r){var a,s,i;te(null!=(a=e)&&Array.isArray(a)&&a.length>0,(()=>"promises must be a none empty array")),i=r=null==r?1:r,te((s=n=null==n?0:n)>=0&&s<=1,(()=>`Progress fraction must be in range [0, 1], but got startFraction ${s}`)),te(i>=0&&i<=1,(()=>`Progress fraction must be in range [0, 1], but got endFraction ${i}`)),te(i>=s,(()=>`startFraction must be no more than endFraction, but got startFraction ${s} and endFraction ${i}`));let o=0;return Promise.all(e.map((a=>(a.then((a=>{const s=n+ ++o/e.length*(r-n);return t(s),a})),a))))}async function $i(e,t){null==t&&(t={});const n=null==t.fetchFunc?Ue().platform.fetch:t.fetchFunc,r=e.map((e=>n(e,t.requestInit,{isBinary:!0}))),a=(null==t.onProgress?await Promise.all(r):await Ci(r,t.onProgress,0,.5)).map((e=>e.arrayBuffer()));return null==t.onProgress?await Promise.all(a):await Ci(a,t.onProgress,.5,1)}async function _i(e,t="",n,r){return Ei((e=>$i(e,{requestInit:r})))(e,t,n)}function Ei(e){return async(t,n="",r)=>{const a=t.map((()=>!1)),s={},i=null!=r?r.map((()=>!1)):[],o=[];if(t.forEach(((e,t)=>{let n=0;e.weights.forEach((e=>{const u="quantization"in e?e.quantization.dtype:e.dtype,l=$s[u]*se(e.shape),c=()=>{a[t]=!0,null==s[t]&&(s[t]=[]),s[t].push({manifestEntry:e,groupOffset:n,sizeBytes:l})};null!=r?r.forEach(((t,n)=>{t===e.name&&(c(),i[n]=!0)})):c(),o.push(e.name),n+=l}))})),!i.every((e=>e))){const e=r.filter(((e,t)=>!i[t]));throw new Error(`Could not find weights in manifest with names: ${e.join(", ")}. \nManifest JSON has weights with names: ${o.join(", ")}.`)}const u=a.reduce(((e,t,n)=>(t&&e.push(n),e)),[]),l=[];u.forEach((e=>{t[e].paths.forEach((e=>{const t=n+(n.endsWith("/")?"":"/")+e;l.push(t)}))}));const c=await e(l),h={};let d=0;return u.forEach((e=>{const n=t[e].paths.length;let r=0;for(let e=0;e<n;e++)r+=c[d+e].byteLength;const a=new ArrayBuffer(r),i=new Uint8Array(a);let o=0;for(let e=0;e<n;e++){const t=new Uint8Array(c[d+e]);i.set(t,o),o+=t.byteLength}s[e].forEach((e=>{const t=Es(a.slice(e.groupOffset,e.groupOffset+e.sizeBytes),[e.manifestEntry]);for(const e in t)h[e]=t[e]})),d+=n})),h}}Ni.URL_SCHEME="downloads://",Bs.registerSaveRouter((e=>Ue().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Ni.URL_SCHEME)?function(e="model"){return new Ni(e)}(e.slice(Ni.URL_SCHEME.length)):null));var Ai=class{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?(te("function"==typeof t.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=t.fetchFunc):this.fetch=Ue().platform.fetch,te(null!=e&&e.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(e)&&te(2===e.length,(()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`)),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const n=Os(e,[{paths:["./model.weights.bin"],weights:e.weightSpecs}]);t.body.append("model.json",new Blob([JSON.stringify(n)],{type:"application/json"}),"model.json"),null!=e.weightData&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:"application/octet-stream"}),"model.weights.bin");const r=await this.fetch(this.path,t);if(r.ok)return{modelArtifactsInfo:zs(e),responses:[r]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${r.status}.`)}async load(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch(e){let t=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?t+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":t+=" Please make sure the server is serving valid JSON for this request.",new Error(t)}const n=t.modelTopology,r=t.weightsManifest;if(null==n&&null==r)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return Ls(t,(e=>this.loadWeights(e)))}async loadWeights(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=function(e){const t=e.lastIndexOf("/"),n=e.lastIndexOf("?");return[e.substring(0,t)+"/",n>t?e.substring(n):""]}(t),a=this.weightPathPrefix||n,s=[];for(const t of e)s.push(...t.weights);const i=[],o=[];for(const t of e)for(const e of t.paths)null!=this.weightUrlConverter?o.push(this.weightUrlConverter(e)):i.push(a+e+r);return this.weightUrlConverter&&i.push(...await Promise.all(o)),[s,Ds(await $i(i,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress}))]}};function Fi(e){return null!=e.match(Ai.URL_SCHEME_REGEX)}Ai.URL_SCHEME_REGEX=/^https?:\/\//;var Ri=(e,t)=>{if("undefined"==typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every((e=>Fi(e))):Fi(e),n)return Di(e,t)}return null};function Di(e,t){return new Ai(e,t)}function Mi(e,t){return Di(e,t)}Bs.registerSaveRouter(Ri),Bs.registerLoadRouter(Ri);var Oi=class{constructor(e){this.modelArtifacts=e}async load(){return this.modelArtifacts}};function Li(e,t,n,r){return 1===arguments.length?null!=e.modelTopology||null!=e.weightSpecs?new Oi(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Oi({modelTopology:e})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Oi({modelTopology:e,weightSpecs:t,weightData:n,trainingConfig:r}))}function zi(e){return new class{constructor(e){this.saveHandler=e}async save(e){return this.saveHandler(e)}}(e)}var Pi={};y(Pi,{confusionMatrix:()=>Gi});var Bi,Wi=Ss({matMul_:function(e,t,n=!1,r=!1){let a=vs(e,"a","matMul"),s=vs(t,"b","matMul");[a,s]=rs(a,s);const i={a,b:s},o={transposeA:n,transposeB:r};return ds.runKernel(dt,i,o)}}),Vi=Ss({oneHot_:function(e,t,n=1,r=0){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);const a={indices:vs(e,"indices","oneHot","int32")},s={depth:t,onValue:n,offValue:r};return ds.runKernel(Hn,a,s)}}),Ui=Ss({transpose_:function(e,t){const n=vs(e,"x","transpose");if(null==t&&(t=n.shape.map(((e,t)=>t)).reverse()),te(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of perm ${t}.`)),t.forEach((e=>{te(e>=0&&e<n.rank,(()=>`All entries in 'perm' must be between 0 and ${n.rank-1} but got ${t}`))})),n.rank<=1)return n.clone();const r={x:n},a={perm:t};return ds.runKernel(Vr,r,a)}}),Gi=Ss({confusionMatrix_:function(e,t,n){const r=vs(e,"labels","confusionMatrix"),a=vs(t,"predictions","confusionMatrix");te(null==n||n>0&&Number.isInteger(n),(()=>`If provided, numClasses must be a positive integer, but got ${n}`)),te(1===r.rank,(()=>`Expected the rank of labels to be 1, but got ${r.rank}`)),te(1===a.rank,(()=>`Expected the rank of predictions to be 1, but got ${a.rank}`)),te(r.shape[0]===a.shape[0],(()=>`Mismatch in the number of examples: ${r.shape[0]} vs. ${a.shape[0]}. Labels and predictions should have the same number of elements.`)),te(n>0&&Number.isInteger(n),(()=>`numClasses is required to be a positive integer, but got ${n}`));const s=Vi(wi(r,"int32"),n),i=Vi(wi(a,"int32"),n),o=Ui(s),u=Wi(o,i);return wi(u,"int32")}}),Hi={};function ji(e,t,n){if(re(e),null!=t&&3!==t.length)throw new Error("tensor3d() requires shape to have three numbers");const r=bs(e,n);if(3!==r.length&&1!==r.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return Ts(e,t,r,n)}function qi(e,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==e)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,r=!1,a=!1,s=!1,i=!1,o=!1;if(e.data instanceof Uint8Array)n=!0;else if("undefined"!=typeof ImageData&&e instanceof ImageData)r=!0;else if("undefined"!=typeof HTMLVideoElement&&e instanceof HTMLVideoElement)a=!0;else if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement)s=!0;else if(null!=e.getContext)i=!0;else{if(!("undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap))throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${e.constructor.name}`);o=!0}if(a){const t=2;if(a&&e.readyState<t)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.")}if(null!=ta(Kr,ds.backendName)){const n={pixels:e},r={numChannels:t};return ds.runKernel(Kr,n,r)}const[u,l]=a?[e.videoWidth,e.videoHeight]:[e.width,e.height];let c,h;if(i?c=e.getContext("2d").getImageData(0,0,u,l).data:r||n?c=e.data:(s||a||o)&&(null==Bi&&(Bi=document.createElement("canvas").getContext("2d")),Bi.canvas.width=u,Bi.canvas.height=l,Bi.drawImage(e,0,0,u,l),c=Bi.getImageData(0,0,u,l).data),4===t)h=new Int32Array(c);else{const e=u*l;h=new Int32Array(e*t);for(let n=0;n<e;n++)for(let e=0;e<t;++e)h[n*t+e]=c[4*n+e]}return ji(h,[l,u,t],"int32")}async function Ki(e,t=3){let n=null;if(Ue().getBool("WRAP_TO_IMAGEBITMAP")&&function(e){return"undefined"!=typeof window&&"undefined"!=typeof ImageBitmap&&window.hasOwnProperty("createImageBitmap")&&!(e instanceof ImageBitmap)&&function(e){return null!=e&&0!==e.width&&0!==e.height}(e)&&!function(e){return null!=e&&e.data instanceof Uint8Array}(e)}(e)){let t;try{t=await createImageBitmap(e,{premultiplyAlpha:"none"})}catch(e){t=null}n=null!=t&&t.width===e.width&&t.height===e.height?t:e}else n=e;return qi(n,t)}async function Xi(e,t){let n=vs(e,"img","toPixels");if(!(e instanceof Ba)){const e=n;n=wi(e,"int32"),e.dispose()}if(2!==n.rank&&3!==n.rank)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${n.rank}.`);const[r,a]=n.shape.slice(0,2),s=2===n.rank?1:n.shape[2];if(s>4||2===s)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${s}`);if("float32"!==n.dtype&&"int32"!==n.dtype)throw new Error(`Unsupported type for toPixels: ${n.dtype}. Please use float32 or int32 tensors.`);const i=await n.data(),o="float32"===n.dtype?255:1,u=new Uint8ClampedArray(a*r*4);for(let e=0;e<r*a;++e){const t=[0,0,0,255];for(let r=0;r<s;r++){const a=i[e*s+r];if("float32"===n.dtype){if(a<0||a>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${a}.`)}else if("int32"===n.dtype&&(a<0||a>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${a}.`);1===s?(t[0]=a*o,t[1]=a*o,t[2]=a*o):t[r]=a*o}const r=4*e;u[r+0]=Math.round(t[0]),u[r+1]=Math.round(t[1]),u[r+2]=Math.round(t[2]),u[r+3]=Math.round(t[3])}if(null!=t){t.width=a,t.height=r;const e=t.getContext("2d"),n=new ImageData(u,a,r);e.putImageData(n,0,0)}return n!==e&&n.dispose(),u}y(Hi,{fromPixels:()=>Yi,fromPixelsAsync:()=>Ki,toPixels:()=>Xi});var Yi=Ss({fromPixels_:qi}),Zi={};function Ji(e,t){const n=e.shape.length,r=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(r<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if("int32"!==t.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[r-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[r-1]} vs. ${n}`);if(0===se(e.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);const a=t.shape,s=a[a.length-1];let i=1;for(let e=0;e<a.length-1;++e)i*=a[e];const o=e.shape,u=a.slice();u.pop();let l=1;for(let e=s;e<n;++e)l*=o[e],u.push(o[e]);const c=[...Ae(e.shape).map((e=>e/l)),1].slice(0,s);return[u,i,l,c]}y(Zi,{prepareAndValidate:()=>Ji});var Qi={};function eo(e,t,n){const r=t.rank>1?t.shape[t.rank-1]:1,a=t.rank>1?t.rank-1:1,s=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${r}, and batchDim: ${a}.`;if(n.rank<a)throw new Error(s+` update.rank < ${a}. `);if(e.length<r+(n.rank-a))throw new Error(s+` Output shape length < ${r+(n.rank-a)}`);if(n.rank!==a+e.length-r)throw new Error(s+" update.rank != "+(a+e.length-r));for(let e=0;e<a;++e)if(n.shape[e]!==t.shape[e])throw new Error(s+` updates.shape[${e}] (${n.shape[e]}) != indices.shape[${e}] (${t.shape[e]}).`);for(let t=0;t<n.rank-a;++t)if(n.shape[t+a]!==e[t+r])throw new Error(s+` updates.shape[${t+a}] (${n.shape[t+a]}) != shape[${t+a}] (${e[t+a]})`)}function to(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(0===n.length){if(0===t.size)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(0===e.size)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}eo(n,t,e)}function no(e,t,n){const r=t.shape.length,a=r>1?t.shape[r-1]:1,s=n.length;let i=1;for(let e=a;e<s;++e)i*=n[e];const o=a<1?1:a;return{sliceRank:a,numUpdates:se(t.shape)/o,sliceSize:i,strides:[...Ae(n.slice(0,a)),1],outputSize:se(n)}}y(Qi,{calculateShapes:()=>no,validateInput:()=>to,validateUpdateShape:()=>eo});var ro={};function ao(e,t,n){const r=e.shape.length;te(r===t.length,(()=>`Error in slice${r}D: Length of begin ${t} must match the rank of the array (${r}).`)),te(r===n.length,(()=>`Error in slice${r}D: Length of size ${n} must match the rank of the array (${r}).`));for(let a=0;a<r;++a)te(t[a]+n[a]<=e.shape[a],(()=>`Error in slice${r}D: begin[${a}] + size[${a}] (${t[a]+n[a]}) would overflow input.shape[${a}] (${e.shape[a]})`))}function so(e){const t=[];let n=0;for(;e>0;)1&e&&t.push(n),e/=2,n++;return t}function io(e,t,n){const r=[];for(let a=0;a<e.length;a++)r[a]=Math.ceil((t[a]-e[a])/n[a]);return r}function oo(e,t,n,r){const a=[...e];for(let e=a.length;e<r.length;e++)a.push(1);for(let e=0;e<n;e++)0===e?a[t]=1:(a.splice(t,0,1),a.pop());return a}function uo(e,t,n){return n<=e?n:n-(t-1)}function lo(e,t){const n=[];for(let r=0;r<e;r++)n.push(t+r);return n}function co(e,t,n,r,a,s,i,o,u){const l=e.length;let c=new Array(l),h=new Array(l),d=new Array(l);if(t.length&&n>0){const u=t[0],l=n+1;c=ho(i,u,l,r,e),h=po(o,u,l,a,e),d=oo(s,u,l,e)}else for(let t=0;t<l;t++)c[t]=mo(i,r,s,e,t,u),h[t]=go(o,a,s,e,t,u),d[t]=fo(s,t,u);return{begin:c,end:h,strides:d}}function ho(e,t,n,r,a){const s=[...a],i=lo(n,t);for(let a=0;a<s.length;a++)if(i.indexOf(a)>-1)s[a]=0;else{const i=uo(t,n,a);let o=r[i];e&1<<i&&(o=0),s[a]=o}return s}function po(e,t,n,r,a){const s=[...a],i=lo(n,t);for(let a=0;a<s.length;a++)if(i.indexOf(a)>-1)s[a]=Number.MAX_SAFE_INTEGER;else{const i=uo(t,n,a);let o=r[i];e&1<<i&&(o=Number.MAX_SAFE_INTEGER),s[a]=o}for(let e=0;e<s.length;e++){const t=a[e];s[e]<0&&(s[e]+=t),s[e]=X(0,s[e],a[e])}return s}function fo(e,t,n){let r=e[t];return(n&1<<t||null==r)&&(r=1),r}function mo(e,t,n,r,a,s){let i=t[a];const o=n[a]||1;(e&1<<a||s&1<<a||null==i)&&(i=o>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const u=r[a];return i<0&&(i+=u),i=X(0,i,u-1),i}function go(e,t,n,r,a,s){let i=t[a];const o=n[a]||1;(e&1<<a||s&1<<a||null==i)&&(i=o>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const u=r[a];return i<0&&(i+=u),i=o>0?X(0,i,u):X(-1,i,u-1),i}function yo(e,t,n){let r=n.length;for(let e=0;e<n.length;e++)if(n[e]>1){r=e;break}for(let a=r+1;a<n.length;a++)if(t[a]>0||n[a]!==e[a])return!1;return!0}function bo(e,t){let n=e.length>0?e[e.length-1]:1;for(let r=0;r<e.length-1;r++)n+=e[r]*t[r];return n}function xo(e,t,n){let r;const a=e.shape.length;let s;return r="number"==typeof t?[t,...new Array(a-1).fill(0)]:t.length<a?t.concat(new Array(a-t.length).fill(0)):t.slice(),r.forEach((e=>{te(-1!==e,(()=>"slice() does not support negative begin indexing."))})),s=null==n?new Array(a).fill(-1):"number"==typeof n?[n,...new Array(a-1).fill(-1)]:n.length<a?n.concat(new Array(a-n.length).fill(-1)):n,s=s.map(((t,n)=>t>=0?t:(te(-1===t,(()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${n}.`)),e.shape[n]-r[n]))),[r,s]}function wo(e,t,n,r,a,s,i,o,u){let l=t.slice(),c=n.slice(),h=r;null==r&&(h=new Array(l.length));const d=so(i);if(d.length>1)throw new Error("Multiple ellipses in slice is not allowed.");if(0!==i&&0!==o)throw new Error("Using both ellipsisMask and newAxisMask is not yet supported.");if(0!==i&&0!==u)throw new Error("Using both ellipsisMask and shrinkAxisMask is not yet supported.");const p=e.length-l.length,f=so(o),m=e.slice();f.forEach((e=>{l[e]=0,c[e]=1,m.splice(e,0,1)}));const{begin:g,end:y,strides:b}=co(m,d,p,l,c,h,a,s,i);l=g,c=y,h=b;const x=so(u);x.forEach((e=>{c[e]=l[e]+1,h[e]=1}));const w=io(l,c,h),v=w.filter(((e,t)=>-1===x.indexOf(t)));return{nonStrided:h.every((e=>1===e)),$begin:l,$end:c,$strides:h,size:w,newShape:m,outShape:v}}y(ro,{assertParamsValid:()=>ao,computeFlatOffset:()=>bo,computeOutShape:()=>io,getNormalizedAxes:()=>co,isSliceContinous:()=>yo,maskToAxes:()=>so,parseSliceParams:()=>xo,sliceInfo:()=>wo,startForAxis:()=>mo,startIndicesWithElidedDims:()=>ho,stopForAxis:()=>go,stopIndicesWithElidedDims:()=>po,stridesForAxis:()=>fo,stridesWithElidedDims:()=>oo});var vo={};y(vo,{Serializable:()=>ko,SerializationMap:()=>Io,registerClass:()=>So});var ko=class{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}},Io=class{constructor(){this.classNameMap={}}static getMap(){return null==Io.instance&&(Io.instance=new Io),Io.instance}static register(e){Io.getMap().classNameMap[e.className]=[e,e.fromConfig]}};function So(e){te(null!=e.className,(()=>"Class being registered does not have the static className property defined.")),te("string"==typeof e.className,(()=>"className is required to be a string, but got type "+typeof e.className)),te(e.className.length>0,(()=>"Class being registered has an empty-string as its className, which is disallowed.")),Io.register(e)}var No={};y(No,{TEST_EPSILON_FLOAT16:()=>To,encodeStrings:()=>Oo,expectArrayBuffersEqual:()=>Mo,expectArraysClose:()=>Co,expectArraysEqual:()=>Ao,expectNumbersClose:()=>Fo,expectPromiseToFail:()=>Eo,expectValuesInRange:()=>Do,testEpsilon:()=>$o});var To=.1;function Co(e,t,n){return null==n&&(n=$o()),_o(e,t,((e,t)=>Ro(e,t,n)))}function $o(){return 32===ds.backend.floatPrecision()?.001:To}function _o(e,t,n){let r=!0;if((ke(e)||ke(t))&&(r=!1),ke(e)&&ke(t)&&(r=!0),r){const n=e.constructor.name,r=t.constructor.name;if(n!==r)throw new Error(`Arrays are of different type. Actual: ${n}. Expected: ${r}`)}if(Array.isArray(e)&&Array.isArray(t)){const n=bs(e),r=bs(t);if(!oe(n,r))throw new Error(`Arrays have different shapes. Actual: [${n}]. Expected: [${r}]`)}const a=ke(e)?e:ae(e),s=ke(t)?t:ae(t);if(a.length!==s.length)throw new Error(`Arrays have different lengths actual: ${a.length} vs expected: ${s.length}.\nActual:   ${a}.\nExpected: ${s}.`);for(let e=0;e<s.length;++e){const t=a[e],r=s[e];if(!n(t,r))throw new Error(`Arrays differ: actual[${e}] = ${t}, expected[${e}] = ${r}.\nActual:   ${a}.\nExpected: ${s}.`)}}function Eo(e,t){e().then((()=>t.fail()),(()=>t()))}function Ao(e,t){const n="string"==typeof t||"number"==typeof t||"boolean"==typeof t?[t]:t;return Ne(e)||Ne(e[0])||Ne(t)||Ne(t[0])?_o(e,n,((e,t)=>e==t)):_o(e,t,((e,t)=>Ro(e,t,0)))}function Fo(e,t,n){if(null==n&&(n=$o()),!Ro(e,t,n))throw new Error(`Numbers differ: actual === ${e}, expected === ${t}`)}function Ro(e,t,n){return!isFinite(e)&&!isFinite(t)||!(isNaN(e)||isNaN(t)||Math.abs(e-t)>n)}function Do(e,t,n){for(let r=0;r<e.length;r++)if(e[r]<t||e[r]>n)throw new Error(`Value out of range:${e[r]} low: ${t}, high: ${n}`)}function Mo(e,t){expect(new Float32Array(e)).toEqual(new Float32Array(t))}function Oo(e){for(let t=0;t<e.length;t++){const n=e[t];Array.isArray(n)?Oo(n):e[t]=_a(n)}return e}var Lo="3.8.0";function zo(){Ue().set("PROD",!0)}function Po(){Ue().set("DEBUG",!0)}function Bo(){Ue().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function Wo(e){Ue().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function Vo(){ds.disposeVariables()}function Uo(){return ds}function Go(){return ds.memory()}function Ho(e){return ds.profile(e)}function jo(e,t){return ds.tidy(e,t)}function qo(e){is(e).forEach((e=>e.dispose()))}function Ko(e){return ds.keep(e)}function Xo(e){return ds.time(e)}function Yo(e){return ds.setBackend(e)}function Zo(){return ds.ready()}function Jo(){return ds.backendName}function Qo(e){ds.removeBackend(e)}function eu(e){return ds.findBackend(e)}function tu(e){return ds.findBackendFactory(e)}function nu(e,t,n=1){return ds.registerBackend(e,t,n)}function ru(){return ds.backend}function au(e,t){Ue().setPlatform(e,t)}var su=Ss({add_:function(e,t){let n=vs(e,"a","add"),r=vs(t,"b","add");[n,r]=rs(n,r);const a={a:n,b:r};return ds.runKernel(Ze,a)}}),iu=Ss({floorDiv_:function(e,t){let n=vs(e,"a","floorDiv"),r=vs(t,"b","floorDiv");[n,r]=rs(n,r);const a={a:n,b:r};return ds.runKernel(en,a)}}),ou=Ss({div_:function(e,t){let n=vs(e,"a","div"),r=vs(t,"b","div");if([n,r]=rs(n,r),"int32"===n.dtype&&"int32"===r.dtype)return iu(n,r);const a={a:n,b:r};return ds.runKernel(Wt,a,{})}}),uu=Ss({mul_:function(e,t){let n=vs(e,"a","mul"),r=vs(t,"b","mul");[n,r]=rs(n,r);const a={a:n,b:r};return ds.runKernel(zn,a)}}),lu=Ss({abs_:function(e){const t=vs(e,"x","abs");if("complex64"===t.dtype){const e={x:t};return ds.runKernel(wt,e)}{const e={x:t};return ds.runKernel(Ke,e)}}}),cu=Ss({acos_:function(e){const t={x:vs(e,"x","acos")};return ds.runKernel(Xe,t)}}),hu=Ss({acosh_:function(e){const t={x:vs(e,"x","acosh")};return ds.runKernel(Ye,t)}}),du=Ss({addN_:function(e){te(Array.isArray(e),(()=>"The argument passed to tf.addN() must be a list of tensors")),te(e.length>=1,(()=>`Must pass at least one tensor to tf.addN(), but got ${e.length}`));const t=e.map(((e,t)=>vs(e,`tensors${t}`,"addN"))),n=t[0];t.forEach((e=>{if(e.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")})),t.forEach((e=>{if(!oe(e.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")}));const r=t;return ds.runKernel(Je,r)}}),pu=Ss({all_:function(e,t=null,n=!1){const r={x:vs(e,"x","all","bool")},a={axis:t,keepDims:n};return ds.runKernel(Qe,r,a)}}),fu=Ss({any_:function(e,t=null,n=!1){const r={x:vs(e,"x","any","bool")},a={axis:t,keepDims:n};return ds.runKernel(et,r,a)}}),mu=Ss({argMax_:function(e,t=0){const n={x:vs(e,"x","argMax")},r={axis:t};return ds.runKernel(tt,n,r)}}),gu=Ss({argMin_:function(e,t=0){const n={x:vs(e,"x","argMin")},r={axis:t};return ds.runKernel(nt,n,r)}}),yu=Ss({asin_:function(e){const t={x:vs(e,"x","asin")};return ds.runKernel(rt,t)}}),bu=Ss({asinh_:function(e){const t={x:vs(e,"x","asinh")};return ds.runKernel(at,t)}}),xu=Ss({atan_:function(e){const t={x:vs(e,"x","atan")};return ds.runKernel(st,t)}}),wu=Ss({atan2_:function(e,t){let n=vs(e,"a","atan2"),r=vs(t,"b","atan2");[n,r]=rs(n,r);const a={a:n,b:r};return ds.runKernel(ot,a)}}),vu=Ss({atanh_:function(e){const t={x:vs(e,"x","atanh")};return ds.runKernel(it,t)}});function ku(e,t,n,r,a="NHWC",s){return Nu(e,[...t,e[3]],n,s,r,null,null,Du(a))}function Iu(e,t,n,r,a,s,i="channelsLast"){const[o,u]=$u(t);let l;if("channelsLast"===i)l=[o,u,e[3],e[3]];else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);l=[o,u,e[1],e[1]]}return Nu(e,l,n,r,a,s,!1,i)}function Su(e,t,n,r,a,s,i="NDHWC"){const[o,u,l]=_u(t);let c,h;if("NDHWC"===i)h="channelsLast",c=[o,u,l,e[4],e[4]];else{if("NCDHW"!==i)throw new Error(`Unknown dataFormat ${i}`);h="channelsFirst",c=[o,u,l,e[1],e[1]]}return Tu(e,c,n,r,a,!1,h,s)}function Nu(e,t,n,r,a,s,i=!1,o="channelsLast"){let[u,l,c,h]=[-1,-1,-1,-1];if("channelsLast"===o)[u,l,c,h]=e;else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);[u,h,l,c]=e}const[d,p,,f]=t,[m,g]=$u(n),[y,b]=$u(r),x=Eu(d,y),w=Eu(p,b),{padInfo:v,outHeight:k,outWidth:I}=function(e,t,n,r,a,s,i,o,u){let l,c,h;if("number"==typeof e){l={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};const a=function(e,t,n,r,a){null==r&&(r=Cu(e,t,n));const s=e[1];return[Au((e[0]-t+2*r)/n+1,a),Au((s-t+2*r)/n+1,a)]}([t,n],s,r,e,o);c=a[0],h=a[1]}else if("same"===e){c=Math.ceil(t/r),h=Math.ceil(n/a);const e=Math.max(0,(c-1)*r+s-t),o=Math.max(0,(h-1)*a+i-n),u=Math.floor(e/2),d=e-u,p=Math.floor(o/2);l={top:u,bottom:d,left:p,right:o-p,type:"SAME"}}else if("valid"===e)l={top:0,bottom:0,left:0,right:0,type:"VALID"},c=Math.ceil((t-s+1)/r),h=Math.ceil((n-i+1)/a);else{if("object"!=typeof e)throw Error(`Unknown padding parameter: ${e}`);{const d="channelsLast"===u?e[1][0]:e[2][0],p="channelsLast"===u?e[1][1]:e[2][1],f="channelsLast"===u?e[2][0]:e[3][0],m="channelsLast"===u?e[2][1]:e[3][1];l={top:d,bottom:p,left:f,right:m,type:0===d&&0===p&&0===f&&0===m?"VALID":"EXPLICIT"},c=Au((t-s+d+p)/r+1,o),h=Au((n-i+f+m)/a+1,o)}}return{padInfo:l,outHeight:c,outWidth:h}}(a,l,c,m,g,x,w,s,o),S=i?f*h:f;let N;return"channelsFirst"===o?N=[u,S,k,I]:"channelsLast"===o&&(N=[u,k,I,S]),{batchSize:u,dataFormat:o,inHeight:l,inWidth:c,inChannels:h,outHeight:k,outWidth:I,outChannels:S,padInfo:v,strideHeight:m,strideWidth:g,filterHeight:d,filterWidth:p,effectiveFilterHeight:x,effectiveFilterWidth:w,dilationHeight:y,dilationWidth:b,inShape:e,outShape:N,filterShape:t}}function Tu(e,t,n,r,a,s=!1,i="channelsLast",o){let[u,l,c,h,d]=[-1,-1,-1,-1,-1];if("channelsLast"===i)[u,l,c,h,d]=e;else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);[u,d,l,c,h]=e}const[p,f,m,,g]=t,[y,b,x]=_u(n),[w,v,k]=_u(r),I=Eu(p,w),S=Eu(f,v),N=Eu(m,k),{padInfo:T,outDepth:C,outHeight:$,outWidth:_}=function(e,t,n,r,a,s,i,o,u,l,c){let h,d,p,f;if("number"==typeof e){h={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};const s=function(e,t,n,r,a,s){null==a&&(a=Cu(e,t,r));const i=e[1],o=e[2];return[Au((e[0]-t+2*a)/r+1,s),Au((i-t+2*a)/r+1,s),Au((o-t+2*a)/r+1,s),1]}([t,n,r,1],o,0,a,e,c);d=s[0],p=s[1],f=s[2]}else if("same"===e){d=Math.ceil(t/a),p=Math.ceil(n/s),f=Math.ceil(r/i);const e=(d-1)*a+o-t,c=(p-1)*s+u-n,m=(f-1)*i+l-r,g=Math.floor(e/2),y=e-g,b=Math.floor(c/2),x=c-b,w=Math.floor(m/2);h={top:b,bottom:x,left:w,right:m-w,front:g,back:y,type:"SAME"}}else{if("valid"!==e)throw Error(`Unknown padding parameter: ${e}`);h={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},d=Math.ceil((t-o+1)/a),p=Math.ceil((n-u+1)/s),f=Math.ceil((r-l+1)/i)}return{padInfo:h,outDepth:d,outHeight:p,outWidth:f}}(a,l,c,h,y,b,x,I,S,N,o),E=s?g*d:g;let A;return"channelsFirst"===i?A=[u,E,C,$,_]:"channelsLast"===i&&(A=[u,C,$,_,E]),{batchSize:u,dataFormat:i,inDepth:l,inHeight:c,inWidth:h,inChannels:d,outDepth:C,outHeight:$,outWidth:_,outChannels:E,padInfo:T,strideDepth:y,strideHeight:b,strideWidth:x,filterDepth:p,filterHeight:f,filterWidth:m,effectiveFilterDepth:I,effectiveFilterHeight:S,effectiveFilterWidth:N,dilationDepth:w,dilationHeight:v,dilationWidth:k,inShape:e,outShape:A,filterShape:t}}function Cu(e,t,n,r=1){const a=Eu(t,r);return Math.floor((e[0]*(n-1)-n+a)/2)}function $u(e){return"number"==typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function _u(e){return"number"==typeof e?[e,e,e]:e}function Eu(e,t){return t<=1?e:e+(e-1)*(t-1)}function Au(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function Fu(e){const[t,n,r]=$u(e);return 1===t&&1===n&&1===r}function Ru(e,t){return Fu(e)||Fu(t)}function Du(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}var Mu=Ss({reshape_:function(e,t){const n={x:vs(e,"x","reshape","string_or_numeric")},r={shape:t};return ds.runKernel(nr,n,r)}}),Ou=Ss({avgPool_:function(e,t,n,r,a){const s=vs(e,"x","avgPool","float32");te(Ru(n,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`));let i=s,o=!1;3===s.rank&&(o=!0,i=Mu(s,[1,s.shape[0],s.shape[1],s.shape[2]])),te(4===i.rank,(()=>`Error in avgPool: x must be rank 4 but got rank ${i.rank}.`)),null!=a&&te(ue(r),(()=>`Error in avgPool: pad must be an integer when using, dimRoundingMode ${a} but got pad ${r}.`));const u={x:i},l={filterSize:t,strides:n,pad:r,dimRoundingMode:a};let c=ds.runKernel(ut,u,l);return c=wi(c,s.dtype),o?Mu(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),Lu=Ss({avgPool3d_:function(e,t,n,r,a,s="NDHWC"){const i=vs(e,"x","avgPool3d","float32");let o=i,u=!1;4===i.rank&&(u=!0,o=Mu(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),te(5===o.rank,(()=>`Error in avgPool3d: x must be rank 5 but got rank ${o.rank}.`)),te("NDHWC"===s,(()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`)),null!=a&&te(ue(r),(()=>`Error in avgPool3d: pad must be an integer when using, dimRoundingMode ${a} but got pad ${r}.`));const l={x:o},c={filterSize:t,strides:n,pad:r,dimRoundingMode:a,dataFormat:s};let h=ds.runKernel(ct,l,c);return h=wi(h,o.dtype),u?Mu(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}}),zu=Ss({concat_:function(e,t=0){te(e.length>=1,(()=>"Pass at least one tensor to concat"));const n=ks(e,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach((e=>{if("complex64"!==e.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${e.dtype}. `)})),1===n.length)return vi(n[0]);const r=n,a={axis:t};return ds.runKernel(vt,r,a)}}),Pu=Ss({sigmoid_:function(e){const t={x:vs(e,"x","sigmoid")};return ds.runKernel(br,t)}}),Bu=Ss({slice_:function(e,t,n){const r=vs(e,"x","slice","string_or_numeric");if(0===r.rank)throw new Error("Slicing scalar is not possible");const a={x:r},s={begin:t,size:n};return ds.runKernel(fr,a,s)}}),Wu=Ss({tanh_:function(e){const t={x:vs(e,"x","tanh")};return ds.runKernel(zr,t)}}),Vu=Ss({basicLSTMCell_:function(e,t,n,r,a,s){const i=vs(e,"forgetBias","basicLSTMCell"),o=vs(t,"lstmKernel","basicLSTMCell"),u=vs(n,"lstmBias","basicLSTMCell"),l=vs(r,"data","basicLSTMCell"),c=vs(a,"c","basicLSTMCell"),h=vs(s,"h","basicLSTMCell"),d=zu([l,h],1),p=Wi(d,o),f=su(p,u),m=f.shape[0],g=f.shape[1]/4,y=[m,g],b=Bu(f,[0,0],y),x=Bu(f,[0,g],y),w=Bu(f,[0,2*g],y),v=Bu(f,[0,3*g],y),k=su(uu(Pu(b),Wu(x)),uu(c,Pu(su(i,w))));return[k,uu(Wu(k),Pu(v))]}}),Uu=Ss({batchToSpaceND_:function(e,t,n){const r=vs(e,"x","batchToSpaceND"),a=t.reduce(((e,t)=>e*t));te(r.rank>=1+t.length,(()=>`input rank is ${r.rank} but should be > than blockShape.length ${t.length}`)),te(n.length===t.length,(()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`)),te(r.shape[0]%a==0,(()=>`input tensor batch is ${r.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${a}`));const s={x:r},i={blockShape:t,crops:n};return ds.runKernel(pt,s,i)}}),Gu=Ss({batchNorm_:function(e,t,n,r,a,s){null==s&&(s=.001);const i=vs(e,"x","batchNorm"),o=vs(t,"mean","batchNorm"),u=vs(n,"variance","batchNorm");let l,c;null!=a&&(l=vs(a,"scale","batchNorm")),null!=r&&(c=vs(r,"offset","batchNorm")),te(o.rank===u.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),te(null==c||o.rank===c.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),te(null==l||o.rank===l.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));const h={x:function(e){let t;return t=0===e.rank||1===e.rank?Mu(e,[1,1,1,e.size]):2===e.rank?Mu(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?Mu(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}(i),scale:l,offset:c,mean:o,variance:u},d={varianceEpsilon:s},p=ds.runKernel(tn,h,d);return Mu(p,i.shape)}}),Hu=Ss({batchNorm2d_:function(e,t,n,r,a,s){const i=vs(e,"x","batchNorm"),o=vs(t,"mean","batchNorm"),u=vs(n,"variance","batchNorm");let l,c;return null!=a&&(l=vs(a,"scale","batchNorm")),null!=r&&(c=vs(r,"offset","batchNorm")),te(2===i.rank,(()=>`Error in batchNorm2D: x must be rank 2 but got rank ${i.rank}.`)),te(2===o.rank||1===o.rank,(()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${o.rank}.`)),te(2===u.rank||1===u.rank,(()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${u.rank}.`)),null!=l&&te(2===l.rank||1===l.rank,(()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${l.rank}.`)),null!=c&&te(2===c.rank||1===c.rank,(()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${c.rank}.`)),Gu(i,o,u,c,l,s)}}),ju=Ss({batchNorm3d_:function(e,t,n,r,a,s){const i=vs(e,"x","batchNorm"),o=vs(t,"mean","batchNorm"),u=vs(n,"variance","batchNorm");let l,c;return null!=a&&(l=vs(a,"scale","batchNorm")),null!=r&&(c=vs(r,"offset","batchNorm")),te(3===i.rank,(()=>`Error in batchNorm3D: x must be rank 3 but got rank ${i.rank}.`)),te(3===o.rank||1===o.rank,(()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${o.rank}.`)),te(3===u.rank||1===u.rank,(()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${u.rank}.`)),null!=l&&te(3===l.rank||1===l.rank,(()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${l.rank}.`)),null!=c&&te(3===c.rank||1===c.rank,(()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${c.rank}.`)),Gu(i,o,u,c,l,s)}}),qu=Ss({batchNorm4d_:function(e,t,n,r,a,s){const i=vs(e,"x","batchNorm"),o=vs(t,"mean","batchNorm"),u=vs(n,"variance","batchNorm");let l,c;return null!=a&&(l=vs(a,"scale","batchNorm")),null!=r&&(c=vs(r,"offset","batchNorm")),te(4===i.rank,(()=>`Error in batchNorm4D: x must be rank 4 but got rank ${i.rank}.`)),te(4===o.rank||1===o.rank,(()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${o.rank}.`)),te(4===u.rank||1===u.rank,(()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${u.rank}.`)),null!=l&&te(4===l.rank||1===l.rank,(()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${l.rank}.`)),null!=c&&te(4===c.rank||1===c.rank,(()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${c.rank}.`)),Gu(i,o,u,c,l,s)}}),Ku=Ss({bincount_:function(e,t,n){const r=vs(e,"x","bincount"),a=vs(t,"weights","bincount");te("int32"===r.dtype,(()=>`Error in bincount: input dtype must be int32, but got ${r.dtype}`)),te(n>=0,(()=>`size must be non-negative, but got ${n}.`)),te(a.size===r.size||0===a.size,(()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${r.shape}, weights shape: ${a.shape}.`));const s={x:r,weights:a},i={size:n};return ds.runKernel(ft,s,i)}}),Xu=Ss({broadcastTo_:function(e,t){let n=vs(e,"broadcastTo","x");const r=n.shape;if(t.some((e=>!(e>0)||e%1!=0)))throw new Error(`broadcastTo(): Invalid broadcast shape [${t}].`);if(t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){const e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=Mu(n,e)}const a=n.shape,s=Array.from(t);for(let e=t.length-1;e>=0;e--)if(a[e]===t[e])s[e]=1;else if(1!==n.shape[e])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${t}].`);if(0===s.map(((e,t)=>e>1?t:-1)).filter((e=>e>=0)).length)return vi(n);const i={x:n},o={reps:s};return ds.runKernel(Pr,i,o)}}),Yu=Ss({ceil_:function(e){const t={x:vs(e,"x","ceil")};return ds.runKernel(yt,t)}}),Zu=Ss({clipByValue_:function(e,t,n){const r=vs(e,"x","clipByValue");te(t<=n,(()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`));const a={x:r},s={clipValueMin:t,clipValueMax:n};return ds.runKernel(bt,a,s)}}),Ju=Ss({concat1d_:function(e){return zu(e,0)}}),Qu=Ss({concat2d_:function(e,t){return zu(e,t)}}),el=Ss({concat3d_:function(e,t){return zu(e,t)}}),tl=Ss({concat4d_:function(e,t){return zu(e,t)}}),nl=Ss({conv2d_:function(e,t,n,r,a="NHWC",s=[1,1],i){const o=vs(e,"x","conv2d"),u=vs(t,"filter","conv2d");let l=o,c=!1;3===o.rank&&(c=!0,l=Mu(o,[1,o.shape[0],o.shape[1],o.shape[2]])),te(4===l.rank,(()=>`Error in conv2d: input must be rank 4, but got rank ${l.rank}.`)),te(4===u.rank,(()=>`Error in conv2d: filter must be rank 4, but got rank ${u.rank}.`)),null!=i&&te(ue(r),(()=>`Error in conv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`));const h="NHWC"===a?l.shape[3]:l.shape[1];te(h===u.shape[2],(()=>`Error in conv2d: depth of input (${h}) must match input depth for filter ${u.shape[2]}.`)),te(Ru(n,s),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`));const d={x:l,filter:u},p={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i},f=ds.runKernel(kt,d,p);return c?Mu(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),rl=Ss({conv1d_:function(e,t,n,r,a="NWC",s=1,i){const o=vs(e,"x","conv1d"),u=vs(t,"filter","conv1d");let l=o,c=!1;2===o.rank&&(c=!0,l=Mu(o,[1,o.shape[0],o.shape[1]])),te(3===l.rank,(()=>`Error in conv1d: input must be rank 3, but got rank ${l.rank}.`)),te(3===u.rank,(()=>`Error in conv1d: filter must be rank 3, but got rank ${u.rank}.`)),null!=i&&te(ue(r),(()=>`Error in conv1d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`)),te(l.shape[2]===u.shape[1],(()=>`Error in conv1d: depth of input (${l.shape[2]}) must match input depth for filter ${u.shape[1]}.`)),te(Ru(n,s),(()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${s}'`)),te("NWC"===a,(()=>`Error in conv1d: got dataFormat of ${a} but only NWC is currently supported.`));const h=Mu(u,[1,u.shape[0],u.shape[1],u.shape[2]]),d=Mu(l,[l.shape[0],1,l.shape[1],l.shape[2]]),p=nl(d,h,[1,n],r,"NHWC",[1,s],i);return Mu(p,c?[p.shape[2],p.shape[3]]:[p.shape[0],p.shape[2],p.shape[3]])}}),al=Ss({conv2DBackpropInput_:function(e,t,n,r,a,s="NHWC",i){te(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let o=e,u=t,l=!1;3===t.rank&&(l=!0,u=Mu(t,[1,t.shape[0],t.shape[1],t.shape[2]]),o=[1,e[0],e[1],e[2]]),te(4===o.length,(()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${o.length}.`)),te(4===u.rank,(()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${u.rank}`)),te(4===n.rank,(()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`));const c="NHWC"===s?o[3]:o[1],h="NHWC"===s?u.shape[3]:u.shape[1];te(c===n.shape[2],(()=>`Error in conv2dDerInput: depth of input (${c}) must match input depth for filter ${n.shape[2]}.`)),te(h===n.shape[3],(()=>`Error in conv2dDerInput: depth of output (${h}) must match output depth for filter ${n.shape[3]}.`)),null!=i&&te(ue(a),(()=>`Error in conv2dDerInput: pad must be an integer when using, dimRoundingMode ${i} but got pad ${a}.`));const d={dy:u,filter:n},p={strides:r,pad:a,dataFormat:s,dimRoundingMode:i,inputShape:o},f=ds.runKernel(St,d,p);return l?Mu(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),sl=Ss({conv2dTranspose_:function(e,t,n,r,a,s){const i=vs(e,"x","conv2dTranspose"),o=vs(t,"filter","conv2dTranspose");return al(n,i,o,r,a,"NHWC",s)}}),il=Ss({conv3d_:function(e,t,n,r,a="NDHWC",s=[1,1,1]){const i=vs(e,"x","conv3d"),o=vs(t,"filter","conv3d");let u=i,l=!1;4===i.rank&&(l=!0,u=Mu(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),te(5===u.rank,(()=>`Error in conv3d: input must be rank 5, but got rank ${u.rank}.`)),te(5===o.rank,(()=>`Error in conv3d: filter must be rank 5, but got rank ${o.rank}.`)),te(u.shape[4]===o.shape[3],(()=>`Error in conv3d: depth of input (${u.shape[4]}) must match input depth for filter ${o.shape[3]}.`)),te(Ru(n,s),(()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`)),te("NDHWC"===a,(()=>`Error in conv3d: got dataFormat of ${a} but only NDHWC is currently supported.`));const c={x:u,filter:o},h={strides:n,pad:r,dataFormat:a,dilations:s},d=ds.runKernel(Nt,c,h);return l?Mu(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}}),ol=Ss({conv3DBackpropInput_:function(e,t,n,r,a){te(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let s=e,i=t,o=!1;4===t.rank&&(o=!0,i=Mu(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),s=[1,e[0],e[1],e[2],e[3]]);const u=s[4],l=i.shape[4];te(5===s.length,(()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${s.length}.`)),te(5===i.rank,(()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${i.rank}`)),te(5===n.rank,(()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`)),te(u===n.shape[3],(()=>`Error in conv3dDerInput: depth of input (${u}) must match input depth for filter ${n.shape[3]}.`)),te(l===n.shape[4],(()=>`Error in conv3dDerInput: depth of output (${l}) must match output depth for filter ${n.shape[4]}.`));const c={dy:i,filter:n},h={pad:a,strides:r,inputShape:s},d=ds.runKernel(Ct,c,h);return o?Mu(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}}),ul=Ss({conv3dTranspose_:function(e,t,n,r,a){const s=vs(e,"x","conv3dTranspose"),i=vs(t,"filter","conv3dTranspose");return ol(n,s,i,r,a)}}),ll=Ss({cos_:function(e){const t={x:vs(e,"x","cos")};return ds.runKernel($t,t)}}),cl=Ss({cosh_:function(e){const t={x:vs(e,"x","cosh")};return ds.runKernel(_t,t)}}),hl=Ss({cumsum_:function(e,t=0,n=!1,r=!1){const a={x:vs(e,"x","cumsum")},s={axis:t,exclusive:n,reverse:r};return ds.runKernel(Et,a,s)}}),dl=Ss({denseBincount_:function(e,t,n,r=!1){const a=vs(e,"x","denseBincount"),s=vs(t,"weights","denseBincount");te("int32"===a.dtype,(()=>`Error in denseBincount: input dtype must be int32, but got ${a.dtype}`)),te(a.rank<=2,(()=>`Error in denseBincount: input must be at most rank 2, but got rank ${a.rank}.`)),te(n>=0,(()=>`size must be non-negative, but got ${n}.`)),te(s.size===a.size||0===s.size,(()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${a.shape}, weights shape: ${s.shape}.`));const i={x:a,weights:s},o={size:n,binaryOutput:r};return ds.runKernel(Ft,i,o)}}),pl=Ss({depthToSpace_:function(e,t,n="NHWC"){const r=vs(e,"x","depthToSpace"),a="NHWC"===n?r.shape[1]:r.shape[2],s="NHWC"===n?r.shape[2]:r.shape[3],i="NHWC"===n?r.shape[3]:r.shape[1];te(a*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${a} and ${t}  for depthToSpace with input shape\n    ${r.shape}`)),te(s*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${s} and ${t} for depthToSpace with input shape\n        ${r.shape}`)),te(i%(t*t)==0,(()=>`Dimension size must be evenly divisible by ${t*t} but is ${i} for depthToSpace with input shape ${r.shape}`));const o={x:r},u={blockSize:t,dataFormat:n};return ds.runKernel(Rt,o,u)}}),fl=Ss({depthwiseConv2d_:function(e,t,n,r,a="NHWC",s=[1,1],i){const o=vs(e,"x","depthwiseConv2d"),u=vs(t,"filter","depthwiseConv2d");let l=o,c=!1;3===o.rank&&(c=!0,l=Mu(o,[1,o.shape[0],o.shape[1],o.shape[2]])),te(4===l.rank,(()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${l.rank}.`)),te(4===u.rank,(()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${u.rank}.`)),te(l.shape[3]===u.shape[2],(()=>`Error in depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`)),null!=i&&te(ue(r),(()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`));const h={x:l,filter:u},d={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i},p=ds.runKernel(Dt,h,d);return c?Mu(p,[p.shape[1],p.shape[2],p.shape[3]]):p}}),ml=Ss({diag_:function(e){const t={x:vs(e,"x","diag")};return ds.runKernel(Lt,t)}}),gl=Ss({dilation2d_:function(e,t,n,r,a=[1,1],s="NHWC"){const i=vs(e,"x","dilation2d"),o=vs(t,"filter","dilation2d");te(3===i.rank||4===i.rank,(()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${i.rank}.`)),te(3===o.rank,(()=>`Error in dilation2d: filter must be rank 3, but got rank ${o.rank}.`)),te("NHWC"===s,(()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${s}`));let u=i,l=!1;3===i.rank&&(u=Mu(i,[1,i.shape[0],i.shape[1],i.shape[2]]),l=!0);const c={x:u,filter:o},h={strides:n,pad:r,dilations:a},d=ds.runKernel(zt,c,h);return l?Mu(d,[d.shape[1],d.shape[2],d.shape[3]]):d}});function yl(e,t){const n=e.length,r=[];for(let a=0;a<n;a++){const s=n-1-a,i=e[s]||1;(t[t.length-1-a]||1)>1&&1===i&&r.unshift(s)}return r}function bl(e,t){const n=[];for(let r=0;r<t.length;r++){const a=e[e.length-r-1],s=t.length-r-1,i=t[s];(null==a||1===a&&i>1)&&n.unshift(s)}return n}function xl(e,t){const n=[],r=Math.max(e.length,t.length);for(let a=0;a<r;a++){let r=e[e.length-a-1];null==r&&(r=1);let s=t[t.length-a-1];if(null==s&&(s=1),1===r)n.unshift(s);else if(1===s)n.unshift(r);else{if(r!==s)throw Error(`Operands could not be broadcast together with shapes ${e} and ${t}.`);n.unshift(r)}}return n}var wl=Ss({equal_:function(e,t){let n=vs(e,"a","equal","string_or_numeric"),r=vs(t,"b","equal","string_or_numeric");[n,r]=rs(n,r),xl(n.shape,r.shape);const a={a:n,b:r};return ds.runKernel(jt,a)}}),vl=Ss({where_:function(e,t,n){const r=vs(t,"a","where"),a=vs(n,"b","where"),s=vs(e,"condition","where","bool"),i=xl(xl(s.shape,r.shape),a.shape),o={condition:Xu(s,i),t:Xu(r,i),e:Xu(a,i)};return ds.runKernel(dr,o)}}),kl=Ss({zerosLike_:function(e){const t={x:vs(e,"x","zerosLike")};return ds.runKernel(jr,t)}}),Il=Ss({divNoNan_:function(e,t){let n=vs(e,"a","div"),r=vs(t,"b","div");[n,r]=rs(n,r);const a=ou(n,r),s=kl(a),i=wl(r,s);return vl(i,s,a)}}),Sl=Ss({dot_:function(e,t){const n=vs(e,"t1","dot"),r=vs(t,"t2","dot");te(!(1!==n.rank&&2!==n.rank||1!==r.rank&&2!==r.rank),(()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${r.rank}.`));const a=1===n.rank?n.size:n.shape[1],s=1===r.rank?r.size:r.shape[0];if(te(a===s,(()=>`Error in dot: inner dimensions of inputs must match, but got ${a} and ${s}.`)),1===n.rank&&1===r.rank){const e=Mu(n,[1,-1]),t=Mu(r,[-1,1]),a=Wi(e,t);return Mu(a,[])}if(1===n.rank&&2===r.rank){const e=Mu(n,[1,-1]),t=Mu(r,[r.shape[0],r.shape[1]]),a=Wi(e,t);return Mu(a,[a.size])}if(2===n.rank&&1===r.rank){const e=Mu(r,[-1,1]),t=Wi(n,e);return Mu(t,[t.size])}{const e=Mu(r,[r.shape[0],r.shape[1]]);return Wi(n,e)}}}),Nl=Ss({einsum_:function(e,...t){const n=t.map(((e,t)=>vs(e,`tensors${t}`,"einsum"))),r={equation:e};return ds.runKernel(Vt,n,r)}}),Tl=Ss({elu_:function(e){const t={x:vs(e,"x","elu")};return ds.runKernel(Ut,t)}}),Cl=Ss({erf_:function(e){let t=vs(e,"x","erf");te("int32"===t.dtype||"float32"===t.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===t.dtype&&(t=wi(t,"float32"));const n={x:t};return ds.runKernel(Ht,n)}}),$l=Ss({exp_:function(e){const t={x:vs(e,"x","exp")};return ds.runKernel(qt,t)}}),_l=Ss({expandDims_:function(e,t=0){const n=vs(e,"x","expandDims","string_or_numeric");te(t<=n.rank,(()=>"Axis must be <= rank of the tensor"));const r={input:n},a={dim:t};return ds.runKernel(Kt,r,a)}}),El=Ss({expm1_:function(e){const t={x:vs(e,"x","expm1")};return ds.runKernel(Xt,t)}}),Al=Ss({tile_:function(e,t){const n=vs(e,"x","tile","string_or_numeric");te(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`));const r={x:n},a={reps:t};return ds.runKernel(Pr,r,a)}}),Fl=Ss({eye_:function(e,t,n,r="float32"){null==t&&(t=e);const a=xi([e,t],r),s=e<=t?e:t;for(let e=0;e<s;++e)a.set(1,e,e);const i=Mu(a.toTensor(),[e,t]);if(null==n)return i;if(1===n.length)return Al(_l(i,0),[n[0],1,1]);if(2===n.length)return Al(_l(_l(i,0),0),[n[0],n[1],1,1]);if(3===n.length)return Al(_l(_l(_l(i,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}});function Rl(e,t,n){const r={shape:e,value:t,dtype:n};return ds.runKernel(Zt,{},r)}var Dl=Ss({floor_:function(e){const t={x:vs(e,"x","floor")};return ds.runKernel(Qt,t)}}),Ml=Ss({gather_:function(e,t,n=0,r=0){const a={x:vs(e,"x","gather"),indices:vs(t,"indices","gather","int32")},s={axis:n,batchDims:r};return ds.runKernel(nn,a,s)}}),Ol=Ss({greater_:function(e,t){let n=vs(e,"a","greater","string_or_numeric"),r=vs(t,"b","greater","string_or_numeric");[n,r]=rs(n,r),xl(n.shape,r.shape);const a={a:n,b:r};return ds.runKernel(an,a)}}),Ll=Ss({greaterEqual_:function(e,t){let n=vs(e,"a","greaterEqual","string_or_numeric"),r=vs(t,"b","greaterEqual","string_or_numeric");[n,r]=rs(n,r),xl(n.shape,r.shape);const a={a:n,b:r};return ds.runKernel(sn,a)}}),zl=Ss({imag_:function(e){const t={input:vs(e,"input","imag")};return ds.runKernel(ln,t)}}),Pl=Ss({isFinite_:function(e){const t={x:vs(e,"x","isFinite")};return ds.runKernel(cn,t)}}),Bl=Ss({isInf_:function(e){const t={x:vs(e,"x","isInf")};return ds.runKernel(hn,t)}}),Wl=Ss({isNaN_:function(e){const t={x:vs(e,"x","isNaN")};return ds.runKernel(dn,t)}}),Vl=Ss({leakyRelu_:function(e,t=.2){const n={x:vs(e,"x","leakyRelu")},r={alpha:t};return ds.runKernel(pn,n,r)}}),Ul=Ss({less_:function(e,t){let n=vs(e,"a","less","string_or_numeric"),r=vs(t,"b","less","string_or_numeric");[n,r]=rs(n,r),xl(n.shape,r.shape);const a={a:n,b:r};return ds.runKernel(fn,a)}}),Gl=Ss({lessEqual_:function(e,t){let n=vs(e,"a","lessEqual","string_or_numeric"),r=vs(t,"b","lessEqual","string_or_numeric");[n,r]=rs(n,r),xl(n.shape,r.shape);const a={a:n,b:r};return ds.runKernel(mn,a)}});function Hl(e,t,n){if(n<=0)throw new Error("The number of values should be positive.");const r={start:e,stop:t,num:n};return ds.runKernel(gn,{},r)}var jl=Ss({localResponseNormalization_:function(e,t=5,n=1,r=1,a=.5){const s=vs(e,"x","localResponseNormalization");te(4===s.rank||3===s.rank,(()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${s.rank}.`)),te(ue(t),(()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`));let i=s,o=!1;3===s.rank&&(o=!0,i=Mu(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const u={x:i},l={depthRadius:t,bias:n,alpha:r,beta:a},c=ds.runKernel(In,u,l);return o?Mu(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),ql=Ss({log_:function(e){const t={x:vs(e,"x","log")};return ds.runKernel(yn,t)}}),Kl=Ss({log1p_:function(e){const t={x:vs(e,"x","log1p")};return ds.runKernel(bn,t)}});function Xl(e){return te(_e(e),(()=>"The f passed in grad(f) must be a function")),(t,n)=>{const r=vs(t,"x","tf.grad","string_or_numeric"),a=null!=n?vs(n,"dy","tf.grad"):null;return ds.tidy((()=>{const{value:t,grads:n}=ds.gradients((()=>e(r)),[r],a);return null!=a&&ne(t.shape,a.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),tc(n),n[0]}))}}function Yl(e){return te(_e(e),(()=>"The f passed in grads(f) must be a function")),(t,n)=>{te(Array.isArray(t),(()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s"));const r=ks(t,"args","tf.grads","string_or_numeric"),a=null!=n?vs(n,"dy","tf.grads"):null;return ds.tidy((()=>{const{value:t,grads:n}=ds.gradients((()=>e(...r)),r,a);return null!=a&&ne(t.shape,a.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),tc(n),n}))}}function Zl(e){return te(_e(e),(()=>"The f passed in valueAndGrad(f) must be a function")),(t,n)=>{te(t instanceof Ba,(()=>"The x passed in valueAndGrad(f)(x) must be a tensor")),te(null==n||n instanceof Ba,(()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor"));const{grads:r,value:a}=ds.gradients((()=>e(t)),[t],n);return tc(r),{grad:r[0],value:a}}}function Jl(e){return te(_e(e),(()=>"The f passed in valueAndGrads(f) must be a function")),(t,n)=>{te(Array.isArray(t)&&t.every((e=>e instanceof Ba)),(()=>"The args passed in valueAndGrads(f)(args) must be array of tensors")),te(null==n||n instanceof Ba,(()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor"));const r=ds.gradients((()=>e(...t)),t,n);return null!=n&&ne(r.value.shape,n.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),tc(r.grads),r}}function Ql(e,t){te(_e(e),(()=>"The f passed in variableGrads(f) must be a function")),te(null==t||Array.isArray(t)&&t.every((e=>e instanceof Va)),(()=>"The varList passed in variableGrads(f, varList) must be an array of variables"));const n=null!=t;if(!n){t=[];for(const e in ds.registeredVariables)t.push(ds.registeredVariables[e])}const r=n?t.filter((e=>!e.trainable)):null,a=t.length;te((t=t.filter((e=>e.trainable))).length>0,(()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${a} variables is trainable.`));const{value:s,grads:i}=ds.gradients(e,t,null,!0);te(i.some((e=>null!=e)),(()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().")),te(0===s.rank,(()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${s.rank} tensor`));const o={};return t.forEach(((e,t)=>{null!=i[t]&&(o[e.name]=i[t])})),null!=r&&r.forEach((e=>o[e.name]=null)),{value:s,grads:o}}function ec(e){return ds.customGrad(e)}function tc(e){if(e.filter((e=>null==e)).length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that\n    the f you passed encloses all operations that lead from x to y.")}var nc=Ss({neg_:function(e){const t={x:vs(e,"x","neg")};return ds.runKernel(Pn,t)}}),rc=Ss({softplus_:function(e){const t={x:vs(e,"x","softplus")};return ds.runKernel(xr,t)}}),ac=Ss({logSigmoid_:function(e){const t=vs(e,"x","logSigmoid");return ec((e=>({value:nc(rc(nc(e))),gradFunc:t=>uu(t,Pu(nc(e)))})))(t)}}),sc=Ss({max_:function(e,t=null,n=!1){const r={x:vs(e,"x","max")},a={reductionIndices:t,keepDims:n};return ds.runKernel(Nn,r,a)}}),ic=Ss({sub_:function(e,t){let n=vs(e,"a","sub"),r=vs(t,"b","sub");[n,r]=rs(n,r);const a={a:n,b:r};return ds.runKernel(Or,a)}}),oc=Ss({sum_:function(e,t=null,n=!1){let r=vs(e,"x","sum");"bool"===r.dtype&&(r=wi(r,"int32"));const a={x:r},s={axis:t,keepDims:n};return ds.runKernel(vr,a,s)}}),uc=Ss({logSoftmax_:function(e,t=-1){const n=vs(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);return ec(((e,n)=>{const r=sc(e,t,!0),a=ic(e,r),s=ic(wi(a,"float32"),ql(oc($l(a),t,!0)));return n([s]),{value:s,gradFunc:(e,n)=>{const[r]=n,a=$l(r);return ic(e,uu(oc(e,t,!0),a))}}}))(n)}});function lc(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function cc(e,t,n){const r=e.length+t.length,a=[];let s=0,i=0;for(let o=0;o<r;o++)-1===n.indexOf(o)?a.push(e[s++]):a.push(t[i++]);return a}function hc(e,t){const n=[],r=e.length;for(let a=0;a<r;a++)-1===t.indexOf(a)&&n.push(e[a]);return[n,t.map((t=>e[t]))]}function dc(e,t){return cc(e,t.map((e=>1)),t)}function pc(e,t,n){te(lc(t,n),(()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`))}function fc(e,t){if(lc(e,t))return null;const n=[];for(let r=0;r<t;++r)-1===e.indexOf(r)&&n.push(r);return e.forEach((e=>n.push(e))),n}function mc(e){return e.map(((e,t)=>[t,e])).sort(((e,t)=>e[1]-t[1])).map((e=>e[0]))}function gc(e,t){const n=[];for(let r=t-e;r<t;++r)n.push(r);return n}var yc=Ss({logSumExp_:function(e,t=null,n=!1){const r=vs(e,"x","logSumExp"),a=me(t,r.shape),s=sc(r,a,!0),i=ic(r,s),o=$l(i),u=oc(o,a),l=ql(u),c=su(Mu(s,l.shape),l);if(n){const e=dc(c.shape,a);return Mu(c,e)}return c}}),bc=Ss({logicalAnd_:function(e,t){const n=vs(e,"a","logicalAnd","bool"),r=vs(t,"b","logicalAnd","bool");xl(n.shape,r.shape);const a={a:n,b:r};return ds.runKernel(xn,a)}}),xc=Ss({logicalNot_:function(e){const t={x:vs(e,"x","logicalNot","bool")};return ds.runKernel(wn,t)}}),wc=Ss({logicalOr_:function(e,t){const n=vs(e,"a","logicalOr","bool"),r=vs(t,"b","logicalOr","bool");xl(n.shape,r.shape);const a={a:n,b:r};return ds.runKernel(vn,a)}}),vc=Ss({logicalXor_:function(e,t){const n=vs(e,"a","logicalXor","bool"),r=vs(t,"b","logicalXor","bool");return xl(n.shape,r.shape),bc(wc(e,t),xc(bc(e,t)))}}),kc=Ss({maxPool_:function(e,t,n,r,a){const s=vs(e,"x","maxPool");let i=s,o=!1;3===s.rank&&(o=!0,i=Mu(s,[1,s.shape[0],s.shape[1],s.shape[2]])),te(4===i.rank,(()=>`Error in maxPool: input must be rank 4 but got rank ${i.rank}.`)),te(Ru(n,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`)),null!=a&&te(ue(r),(()=>`Error in maxPool: pad must be an integer when using, dimRoundingMode ${a} but got pad ${r}.`));const u={x:i},l={filterSize:t,strides:n,pad:r,dimRoundingMode:a},c=ds.runKernel(Cn,u,l);return o?Mu(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),Ic=Ss({maxPool3d_:function(e,t=[1,1,1],n,r,a,s="NDHWC"){const i=vs(e,"x","maxPool3d");let o=i,u=!1;4===i.rank&&(u=!0,o=Mu(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),te(5===o.rank,(()=>`Error in maxPool3d: x must be rank 5 but got rank ${o.rank}.`)),te("NDHWC"===s,(()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`)),null!=a&&te(ue(r),(()=>`Error in maxPool3d: pad must be an integer when using, dimRoundingMode ${a} but got pad ${r}.`));const l={x:o},c={filterSize:t,strides:n,pad:r,dimRoundingMode:a,dataFormat:s},h=ds.runKernel(_n,l,c);return u?Mu(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}}),Sc=Ss({maxPoolWithArgmax_:function(e,t,n,r,a=!1){const s={x:vs(e,"x","maxPoolWithArgmax")},i={filterSize:t,strides:n,pad:r,includeBatchInIndex:a},o=ds.runKernel(An,s,i);return{result:o[0],indexes:o[1]}}}),Nc=Ss({maximum_:function(e,t){let n=vs(e,"a","maximum"),r=vs(t,"b","maximum");[n,r]=rs(n,r),"bool"===n.dtype&&(n=wi(n,"int32"),r=wi(r,"int32")),xl(n.shape,r.shape);const a={a:n,b:r};return ds.runKernel(Tn,a)}}),Tc=Ss({mean_:function(e,t=null,n=!1){const r={x:vs(e,"x","mean")},a={axis:t,keepDims:n};return ds.runKernel(Fn,r,a)}});function Cc(e,t="float32"){if("complex64"===t){const t=Cc(e,"float32"),n=Cc(e,"float32");return Ns(t,n)}const n=Me(se(e),t);return ds.makeTensor(n,e,t)}function $c(e,t="float32"){if("complex64"===t){const t=$c(e,"float32"),n=Cc(e,"float32");return Ns(t,n)}const n=De(se(e),t);return ds.makeTensor(n,e,t)}function _c(e,t,{indexing:n="xy"}={}){if("xy"!==n&&"ij"!==n)throw new TypeError(`${n} is not a valid third argument to meshgrid`);if(void 0===e)return[];let r=vs(e,"x","meshgrid",e instanceof Ba?e.dtype:"float32");if(void 0===t)return[r];let a=vs(t,"y","meshgrid",t instanceof Ba?t.dtype:"float32");const s=se(r.shape),i=se(a.shape);return"xy"===n?(r=Mu(r,[1,-1]),a=Mu(a,[-1,1]),[Wi($c([i,1],r.dtype),r),Wi(a,$c([1,s],a.dtype))]):(r=Mu(r,[-1,1]),a=Mu(a,[1,-1]),[Wi(r,$c([1,i],r.dtype)),Wi($c([s,1],a.dtype),a)])}var Ec=Ss({min_:function(e,t=null,n=!1){const r={x:vs(e,"x","min")},a={axis:t,keepDims:n};return ds.runKernel(Rn,r,a)}}),Ac=Ss({minimum_:function(e,t){let n=vs(e,"a","minimum"),r=vs(t,"b","minimum");[n,r]=rs(n,r),"bool"===n.dtype&&(n=wi(n,"int32"),r=wi(r,"int32")),xl(n.shape,r.shape);const a={a:n,b:r};return ds.runKernel(Dn,a)}}),Fc=Ss({mirrorPad_:function(e,t,n){te("reflect"===n||"symmetric"===n,(()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`));const r=vs(e,"x","mirrorPad");if(0===r.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");te(t.length===r.rank,(()=>`Padding doesn't match input. Must be ${r.rank}. Got ${t.length}.`));const a="reflect"===n?1:0;for(let e=0;e<r.rank;e++)te(2===t[e].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),te(t[e][0]>=0&&t[e][0]<=r.shape[e]-a&&t[e][1]>=0&&t[e][1]<=r.shape[e]-a,(()=>`Padding in dimension ${e} cannot be greater than or equal to ${r.shape[e]-a} or less than 0 for input of shape ${r.shape}`));const s={paddings:t,mode:n},i={x:r};return ds.runKernel(Mn,i,s)}}),Rc=Ss({mod_:function(e,t){let n=vs(e,"a","mod"),r=vs(t,"b","mod");[n,r]=rs(n,r);const a={a:n,b:r};return ds.runKernel(On,a)}}),Dc=Ss({square_:function(e){const t=vs(e,"x","square");return ds.runKernel("Square",{x:t},{})}}),Mc=Ss({moments_:function(e,t=null,n=!1){const r=me(t,(e=vs(e,"x","moments")).shape),a=Tc(e,r,n);let s=a.shape;n||(s=dc(a.shape,r));const i=Dc(ic(wi(e,"float32"),Mu(a,s)));return{mean:a,variance:Tc(i,r,n)}}}),Oc=Ss({multiRNNCell_:function(e,t,n,r){const a=vs(t,"data","multiRNNCell"),s=ks(n,"c","multiRNNCell"),i=ks(r,"h","multiRNNCell");let o=a;const u=[];for(let t=0;t<e.length;t++){const n=e[t](o,s[t],i[t]);u.push(n[0]),u.push(n[1]),o=n[1]}const l=[],c=[];for(let e=0;e<u.length;e+=2)l.push(u[e]),c.push(u[e+1]);return[l,c]}}),Lc=Ss({multinomial_:function(e,t,n,r=!1){const a=vs(e,"logits","multinomial"),s=a.size,i=a.rank;if(s<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${s}.`);if(i>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${i}`);n=n||Math.random();const o={logits:1===i?Mu(a,[1,-1]):a},u={numSamples:t,seed:n,normalized:r},l=ds.runKernel(Ln,o,u);return 1===i?Mu(l,[l.size]):l}}),zc=Ss({notEqual_:function(e,t){let n=vs(e,"a","notEqual","string_or_numeric"),r=vs(t,"b","notEqual","string_or_numeric");[n,r]=rs(n,r),xl(n.shape,r.shape);const a={a:n,b:r};return ds.runKernel(Bn,a)}}),Pc=Ss({onesLike_:function(e){const t={x:vs(e,"x","onesLike")};return ds.runKernel(Gn,t)}}),Bc=Ss({outerProduct_:function(e,t){const n=vs(e,"v1","outerProduct"),r=vs(t,"v2","outerProduct");te(1===n.rank&&1===r.rank,(()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${n.rank} and ${r.rank}.`));const a=Mu(n,[-1,1]),s=Mu(r,[1,-1]);return Wi(a,s)}}),Wc=Ss({pad_:function(e,t,n=0){const r=vs(e,"x","pad");if(0===r.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const a={paddings:t,constantValue:n},s={x:r};return ds.runKernel(qn,s,a)}}),Vc=Ss({pad1d_:function(e,t,n=0){return te(2===t.length,(()=>"Invalid number of paddings. Must be length of 2.")),Wc(e,[t],n)}}),Uc=Ss({pad2d_:function(e,t,n=0){return te(2===t.length&&2===t[0].length&&2===t[1].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),Wc(e,t,n)}}),Gc=Ss({pad3d_:function(e,t,n=0){return te(3===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),Wc(e,t,n)}}),Hc=Ss({pad4d_:function(e,t,n=0){return te(4===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length&&2===t[3].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),Wc(e,t,n)}}),jc=Ss({spaceToBatchND_:function(e,t,n){const r=vs(e,"x","spaceToBatchND");te(r.rank>=1+t.length,(()=>`input rank ${r.rank} should be > than [blockShape] ${t.length}`)),te(n.length===t.length,(()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`)),te(r.shape.reduce(((e,r,a)=>a>0&&a<=t.length?e&&(r+n[a-1][0]+n[a-1][1])%t[a-1]==0:e),!0),(()=>`input spatial dimensions ${r.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`));const a={x:r},s={blockShape:t,paddings:n};return ds.runKernel(kr,a,s)}}),qc=Ss({pool_:function(e,t,n,r,a,s){null==a&&(a=[1,1]),null==s&&(s=1),0===r&&(r="valid");const i=vs(e,"x","maxPool");let o=i,u=!1;3===i.rank&&(u=!0,o=Mu(i,[1,i.shape[0],i.shape[1],i.shape[2]])),te(Ru(s,a),(()=>`Error in pool: Either strides or dilations must be 1. Got strides ${s} and dilations '${a}'`));const l=Iu(o.shape,t,s,a,r),c=[l.dilationHeight,l.dilationWidth];let h;h="same"===r?function(e,t){const n=e.map(((e,n)=>e+(e-1)*(t[n]-1))).map((e=>e-1)),r=n.map((e=>Math.floor(e/2))),a=n.map(((e,t)=>e-r[t]));return n.map(((e,t)=>[r[t],a[t]]))}([l.filterHeight,l.filterWidth],c):[[0,0],[0,0]];const d=1===c[0]&&1===c[1],[p,f]=function(e,t,n){const r=n.map((e=>e[0])),a=n.map((e=>e[1])),s=e.concat(r,a),i=t.map(((e,t)=>(e-s[t]%e)%e)),o=a.map(((e,t)=>e+i[t]));return[t.map(((e,t)=>[r[t],o[t]])),t.map(((e,t)=>[0,i[t]]))]}([l.inHeight,l.inWidth],c,h),m=d?r:"valid",g=d?o:jc(o,c,p),y=("avg"===n?()=>Ou(g,t,s,m):()=>kc(g,t,s,m))(),b=d?y:Uu(y,c,f);return u?Mu(b,[b.shape[1],b.shape[2],b.shape[3]]):b}}),Kc=Ss({pow_:function(e,t){let n=vs(e,"base","pow"),r=vs(t,"exp","pow");[n,r]=rs(n,r);const a={a:n,b:r};return ds.runKernel(Xn,a)}}),Xc=Ss({prelu_:function(e,t){const n={x:vs(e,"x","prelu"),alpha:vs(t,"alpha","prelu")};return ds.runKernel(Yn,n)}}),Yc=Ss({prod_:function(e,t=null,n=!1){let r=vs(e,"x","prod");"bool"===r.dtype&&(r=wi(r,"int32"));const a={x:r},s={axis:t,keepDims:n};return ds.runKernel(Zn,a,s)}}),Zc=Ss({rand_:function(e,t,n){const r=se(e);let a=null;if(null==n||"float32"===n)a=new Float32Array(r);else if("int32"===n)a=new Int32Array(r);else{if("bool"!==n)throw new Error(`Unknown data type ${n}`);a=new Uint8Array(r)}for(let e=0;e<r;e++)a[e]=t();return ds.makeTensor(a,e,n)}}),Jc=b(_()),Qc=class{constructor(e,t,n,r,a){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const s=a||Math.random();this.random=Jc.alea(s.toString())}nextValue(){if(!isNaN(this.nextVal)){const e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;for(;!n;){let r,a,s;do{r=2*this.random()-1,a=2*this.random()-1,s=r*r+a*a}while(s>=1||0===s);const i=Math.sqrt(-2*Math.log(s)/s);e=this.mean+this.stdDev*r*i,t=this.mean+this.stdDev*a*i,this.truncated&&!this.isValidTruncated(e)||(n=!0)}return this.truncated&&!this.isValidTruncated(t)||(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}},eh=Ss({randomGamma_:function(e,t,n=1,r="float32",a){if(null==n&&(n=1),null==r&&(r="float32"),"float32"!==r&&"int32"!==r)throw new Error(`Unsupported data type ${r}`);const s=new class{constructor(e,t,n,r){this.alpha=e,this.beta=1/t,this.dtype=n;const a=r||Math.random();this.randu=Jc.alea(a.toString()),this.randn=new Qc(0,1,n,!1,this.randu()),this.d=e<1?e+2/3:e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,n,r,a,s;for(;;){do{r=this.randn.nextValue(),s=1+this.c*r}while(s<=0);if(s*=s*s,e=r*r,t=1-.331*e*e,n=.5*e+this.d*(1-s+Math.log(s)),a=this.randu(),a<t||Math.log(a)<n)break}return s=1/this.beta*this.d*s,this.alpha<1&&(s*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(s)}convertValue(e){return"float32"===this.dtype?e:Math.round(e)}}(t,n,r,a),i=xi(e,r);for(let e=0;e<i.values.length;e++)i.values[e]=s.nextValue();return i.toTensor()}}),th=Ss({randomNormal_:function(e,t=0,n=1,r,a){if(null!=r&&"bool"===r)throw new Error(`Unsupported data type ${r}`);const s=new Qc(t,n,r,!1,a),i=xi(e,r);for(let e=0;e<i.values.length;e++)i.values[e]=s.nextValue();return i.toTensor()}}),nh=Ss({randomUniform_:function(e,t=0,n=1,r="float32",a){const s=xi(e,r),i=new class{constructor(e=0,t=1,n,r){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==r&&(r=Math.random()),"number"==typeof r&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=Jc.alea(r)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}(t,n,null,a);for(let e=0;e<s.values.length;e++)s.values[e]=i.nextValue();return s.toTensor()}});function rh(e,t,n=1,r="float32"){if(0===n)throw new Error("Cannot have a step of zero");const a={start:e,stop:t,step:n,dtype:r};return ds.runKernel(Jn,{},a)}var ah=Ss({real_:function(e){const t={input:vs(e,"input","real")};return ds.runKernel(Qn,t)}}),sh=Ss({reciprocal_:function(e){const t={x:vs(e,"x","reciprocal")};return ds.runKernel(er,t)}}),ih=Ss({relu_:function(e){const t={x:vs(e,"x","relu")};return ds.runKernel(tr,t)}}),oh=Ss({relu6_:function(e){const t={x:vs(e,"x","relu6")};return ds.runKernel(or,t)}}),uh=Ss({reverse_:function(e,t){const n={x:vs(e,"x","reverse")},r={dims:t};return ds.runKernel(ur,n,r)}}),lh=Ss({reverse1d_:function(e){const t=vs(e,"x","reverse");return te(1===t.rank,(()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`)),uh(t,0)}}),ch=Ss({reverse2d_:function(e,t){const n=vs(e,"x","reverse");return te(2===n.rank,(()=>`Error in reverse2D: x must be rank 2 but got rank ${n.rank}.`)),uh(n,t)}}),hh=Ss({reverse3d_:function(e,t){const n=vs(e,"x","reverse");return te(3===n.rank,(()=>`Error in reverse3D: x must be rank 3 but got rank ${n.rank}.`)),uh(n,t)}}),dh=Ss({reverse4d_:function(e,t){const n=vs(e,"x","reverse");return te(4===n.rank,(()=>`Error in reverse4D: x must be rank 4 but got rank ${n.rank}.`)),uh(n,t)}}),ph=Ss({round_:function(e){const t={x:vs(e,"x","round")};return ds.runKernel(lr,t)}}),fh=Ss({rsqrt_:function(e){const t={x:vs(e,"x","rsqrt")};return ds.runKernel(cr,t)}});function mh(e,t){if((ke(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&ke(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return Ts(e,[],[],t)}var gh=Ss({selu_:function(e){const t={x:vs(e,"x","selu")};return ds.runKernel(pr,t)}}),yh=Ss({separableConv2d_:function(e,t,n,r,a,s=[1,1],i="NHWC"){const o=vs(e,"x","separableConv2d"),u=vs(t,"depthwiseFilter","separableConv2d"),l=vs(n,"pointwiseFilter","separableConv2d");let c=o,h=!1;if(3===o.rank&&(h=!0,c=Mu(o,[1,o.shape[0],o.shape[1],o.shape[2]])),"NCHW"===i)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");te(4===c.rank,(()=>`Error in separableConv2d: input must be rank 4, but got rank ${c.rank}.`)),te(4===u.rank,(()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${u.rank}.`)),te(4===l.rank,(()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${u.rank}.`)),te(1===l.shape[0],(()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${l.shape[0]}.`)),te(1===l.shape[1],(()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${l.shape[1]}.`));const d=u.shape[2],p=u.shape[3];te(l.shape[2]===d*p,(()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${d*p}, but got ${l.shape[2]}.`));const f=fl(c,u,r,a,i,s),m=nl(f,l,1,"valid",i);return h?Mu(m,[m.shape[1],m.shape[2],m.shape[3]]):m}}),bh=async function(e,t){const n=vs(e,"x","setdiff1d"),r=vs(t,"y","setdiff1d");te(n.dtype===r.dtype,(()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${r.dtype}).`)),te(1===n.rank,(()=>`x should be 1D tensor, but got x (${n.shape}).`)),te(1===r.rank,(()=>`y should be 1D tensor, but got y (${r.shape}).`));const a=await n.data(),s=await r.data(),i=new Set(s);let o=0;for(let e=0;e<a.length;e++)i.has(a[e])||o++;const u=new La([o],n.dtype),l=new La([o],"int32");for(let e=0,t=0;e<a.length;e++)i.has(a[e])||(u.values[t]=a[e],l.values[t]=e,t++);return[u.toTensor(),l.toTensor()]},xh=Ss({sign_:function(e){const t={x:vs(e,"x","sign")};return ds.runKernel(yr,t)}}),wh=Ss({sin_:function(e){const t={x:vs(e,"x","sin")};return ds.runKernel(mr,t)}}),vh=Ss({sinh_:function(e){const t={x:vs(e,"x","sinh")};return ds.runKernel(gr,t)}}),kh=Ss({slice1d_:function(e,t,n){const r=vs(e,"x","slice1d");return te(1===r.rank,(()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`)),Bu(r,[t],[n])}}),Ih=Ss({slice2d_:function(e,t,n){const r=vs(e,"x","slice2d");return te(2===r.rank,(()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`)),Bu(r,t,n)}}),Sh=Ss({slice3d_:function(e,t,n){const r=vs(e,"x","slice3d");return te(3===r.rank,(()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`)),Bu(r,t,n)}}),Nh=Ss({slice4d_:function(e,t,n){const r=vs(e,"x","slice4d");return te(4===r.rank,(()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`)),Bu(r,t,n)}}),Th=Ss({softmax_:function(e,t=-1){const n=vs(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);const r={logits:n},a={dim:t};return ds.runKernel(Sr,r,a)}}),Ch=Ss({fft_:function(e){te("complex64"===e.dtype,(()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`));const t={input:e};return ds.runKernel(Yt,t)}}),$h=Ss({ifft_:function(e){te("complex64"===e.dtype,(()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`));const t={input:e};return ds.runKernel(un,t)}}),_h=Ss({irfft_:function(e){const t=e.shape[e.shape.length-1],n=e.size/t;let r;if(t<=2){const a=Mu(e,[n,t]);r=$h(a)}else{const a=[n,2*(t-1)],s=Mu(ah(e),[n,t]),i=Mu(zl(e),[n,t]),o=uh(Bu(s,[0,1],[n,t-2]),1),u=uu(uh(Bu(i,[0,1],[n,t-2]),1),mh(-1)),l=zu([s,o],1),c=zu([i,u],1),h=Mu(Ns(l,c),[a[0],a[1]]);r=$h(h)}if(r=ah(r),3===e.rank&&0!==e.shape[0]){const t=r,n=e.shape[0];r=Mu(r,[n,r.shape[0]/n,r.shape[1]]),t.dispose()}return r}}),Eh=Ss({split_:function(e,t,n=0){const r={x:vs(e,"x","split")},a={numOrSizeSplits:t,axis:n};return ds.runKernel(Ir,r,a)}}),Ah=Ss({rfft_:function(e,t){te("float32"===e.dtype,(()=>`The dtype for rfft() must be real value but got ${e.dtype}`));let n=e.shape[e.shape.length-1];const r=e.size/n;let a;if(null!=t&&t<n){const r=e.shape.map((e=>0)),s=e.shape.map((e=>e));s[e.shape.length-1]=t,a=Bu(e,r,s),n=t}else if(null!=t&&t>n){const r=e.shape.map((e=>e));r[e.shape.length-1]=t-n,a=zu([e,Cc(r)],e.shape.length-1),n=t}else a=e;const s=kl(a),i=Mu(Ns(a,s),[r,n]),o=Ch(i),u=Math.floor(n/2)+1,l=ah(o),c=zl(o),h=Eh(l,[u,n-u],l.shape.length-1),d=Eh(c,[u,n-u],c.shape.length-1),p=a.shape.slice();return p[a.shape.length-1]=u,Mu(Ns(h[0],d[0]),p)}}),Fh=Ss({sqrt_:function(e){const t={x:vs(e,"x","sqrt")};return ds.runKernel(wr,t)}}),Rh=Ss({squaredDifference_:function(e,t){let n=vs(e,"a","squaredDifference"),r=vs(t,"b","squaredDifference");[n,r]=rs(n,r),xl(n.shape,r.shape);const a={a:n,b:r};return ds.runKernel(Er,a,{})}}),Dh=Ss({squeeze_:function(e,t){const n=vs(e,"x","squeeze");return Mu(n,ge(n.shape,t).newShape)}}),Mh=Ss({stack_:function(e,t=0){const n=ks(e,"tensors","stack","string_or_numeric");te(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),n.length>0&&te(t<=n[0].rank,(()=>"Axis must be <= rank of the tensor"));const r=n,a={axis:t};return ds.runKernel(jn,r,a)}}),Oh=Ss({step_:function(e,t=0){const n={x:vs(e,"x","step")},r={alpha:t};return ds.runKernel(qr,n,r)}}),Lh=Ss({stridedSlice_:function(e,t,n,r,a=0,s=0,i=0,o=0,u=0){const l={x:vs(e,"x","stridedSlice","string_or_numeric")},c={begin:t,end:n,strides:r,beginMask:a,endMask:s,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:u};return ds.runKernel(Fr,l,c)}}),zh=Ss({tan_:function(e){const t={x:vs(e,"x","tan")};return ds.runKernel(Lr,t)}});function Ph(e,t){re(e);const n=bs(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Ts(e,null,n,t)}function Bh(e,t,n){if(re(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");const r=bs(e,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Ts(e,t,r,n)}function Wh(e,t,n){if(re(e),null!=t&&4!==t.length)throw new Error("tensor4d() requires shape to have four numbers");const r=bs(e,n);if(4!==r.length&&1!==r.length)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return Ts(e,t,r,n)}function Vh(e,t,n){if(re(e),null!=t&&5!==t.length)throw new Error("tensor5d() requires shape to have five numbers");const r=bs(e,n);if(5!==r.length&&1!==r.length)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return Ts(e,t,r,n)}function Uh(e,t,n){if(re(e),null!=t&&6!==t.length)throw new Error("tensor6d() requires shape to have six numbers");const r=bs(e,n);if(6!==r.length&&1!==r.length)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return Ts(e,t=t||r,r,n)}var Gh=Ss({topk_:function(e,t=1,n=!0){const r=vs(e,"x","topk");if(0===r.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const a=r.shape[r.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>a)throw new Error(`'k' passed to topk() must be <= the last dimension (${a}) but got ${t}`);const s={x:r},i={k:t,sorted:n},[o,u]=ds.runKernel(Br,s,i);return{values:o,indices:u}}}),Hh=Ss({truncatedNormal_:function(e,t=0,n=1,r,a){if(null!=r&&"bool"===r)throw new Error("Unsupported data type $ { dtype }");const s=new Qc(t,n,r,!0,a),i=xi(e,r);for(let e=0;e<i.values.length;e++)i.values[e]=s.nextValue();return i.toTensor()}}),jh=Ss({unique_:function(e,t=0){const n=vs(e,"x","unique","string_or_numeric");te(n.rank>0,(()=>"The input tensor must be at least 1D"));const r={x:n},a={axis:t},[s,i]=ds.runKernel(Ur,r,a);return{values:s,indices:i}}}),qh=Ss({unsortedSegmentSum_:function(e,t,n){const r=vs(e,"x","unsortedSegmentSum"),a=vs(t,"segmentIds","unsortedSegmentSum","int32");te(ue(n),(()=>"numSegments must be of dtype int"));const s={x:r,segmentIds:a},i={numSegments:n};return ds.runKernel(Hr,s,i)}}),Kh=Ss({unstack_:function(e,t=0){const n=vs(e,"x","unstack","string_or_numeric");te(t>=-n.shape.length&&t<n.shape.length,(()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`));const r={value:n},a={axis:t};return ds.runKernel(Gr,r,a)}});function Xh(e,t=!0,n,r){return ds.makeVariable(e,t,n,r)}function Yh(e,t){const n=[];for(let e=0;e<t.length;e++)t[e]&&n.push(e);const r=xi(e,"int32"),a=xi([n.length,e.length],"int32");for(let t=0;t<n.length;t++){const s=r.indexToLoc(n[t]),i=t*e.length;a.values.set(s,i)}return a.toTensor()}var Zh=async function(e){const t=vs(e,"condition","whereAsync","bool"),n=await t.data(),r=Yh(t.shape,n);return e!==t&&t.dispose(),r},Jh=async function(e,t,n){const r=vs(e,"tensor","boolMask"),a=vs(t,"mask","boolMask","bool"),s=null==n?0:n,i=a.rank,o=r.shape;te(i>0,(()=>"mask cannot be scalar")),ne(o.slice(s,s+i),a.shape,"mask's shape must match the first K dimensions of tensor's shape,");let u=1;for(let e=s;e<s+i;e++)u*=o[e];const l=o.slice(0,s).concat([u],o.slice(s+i)),c=Mu(r,l),h=Mu(a,[-1]),d=await Zh(h),p=Dh(d,[1]),f=Ml(c,p,s);return e!==r&&r.dispose(),t!==a&&a.dispose(),p.dispose(),c.dispose(),h.dispose(),d.dispose(),f};function Qh(e,t,n=null){if(0===e.rank)return lu(e);if(1!==e.rank&&null===n)return Qh(Mu(e,[-1]),t,n);if(1===e.rank||"number"==typeof n||Array.isArray(n)&&1===n.length){if(1===t)return oc(lu(e),n);if(t===1/0)return sc(lu(e),n);if(t===-1/0)return Ec(lu(e),n);if("euclidean"===t||2===t)return Fh(oc(Kc(lu(e),mh(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&2===n.length){if(1===t)return sc(oc(lu(e),n[0]),n[1]-1);if(t===1/0)return sc(oc(lu(e),n[1]),n[0]);if(t===-1/0)return Ec(oc(lu(e),n[1]),n[0]);if("fro"===t||"euclidean"===t)return Fh(oc(Dc(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}var ed=Ss({norm_:function(e,t="euclidean",n=null,r=!1){const a=Qh(e=vs(e,"x","norm"),t,n);let s=a.shape;if(r){const t=me(n,e.shape);s=dc(a.shape,t)}return Mu(a,s)}}),td=Ss({movingAverage_:function(e,t,n,r,a=!0){const s=vs(e,"v","movingAverage"),i=vs(t,"x","movingAverage"),o=vs(n,"decay","movingAverage");as(s,i),te(oe(s.shape,i.shape),(()=>"Shape mismatch in v and x"));const u=mh(1),l=ic(u,o);let c=uu(ic(i,s),l);if(a){te(null!=r,(()=>"When using zeroDebias: true, step is required."));const e=vs(r,"step","movingAverage");c=ou(c,ic(u,Kc(o,e)))}return su(s,c)}}),nd=Ss({scatterND_:function(e,t,n){const r=vs(e,"indices","scatterND","int32"),a=vs(t,"updates","scatterND");to(a,r,n);const s={indices:r,updates:a},i={shape:n};return ds.runKernel(hr,s,i)}}),rd=Ss({sparseToDense_:function(e,t,n,r=0){const a=vs(e,"sparseIndices","sparseToDense","int32"),s=vs(t,"sparseValues","sparseToDense"),i=vs(r,"defaultValue","sparseToDense",s.dtype);!function(e,t,n,r){if("int32"!==e.dtype)throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${e.shape}.`);const a=e.rank>0?e.shape[0]:1,s=e.rank>1?e.shape[1]:1;if(n.length!==s)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${s}.`);const i=t.size;if(0!==t.rank&&(1!==t.rank||i!==a))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${a}]`);if(t.dtype!==r.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}(a,s,n,i);const o={sparseIndices:a,sparseValues:s,defaultValue:i},u={outputShape:n};return ds.runKernel(_r,o,u)}}),ad=Ss({gatherND_:function(e,t){const n=vs(t,"indices","gatherND","int32"),r={params:vs(e,"x","gatherND","string_or_numeric"),indices:n};return ds.runKernel(rn,r)}}),sd=Ss({dropout_:function(e,t,n,r){const a=vs(e,"x","dropout");if(te("float32"===a.dtype,(()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${a.dtype} tensor instead.`)),te(t>=0&&t<1,(()=>`rate must be a float in the range [0, 1), but got ${t}.`)),0===t)return e instanceof Ba?a.clone():a;const s=function(e,t){if(null==t)return e.shape.slice();if(oe(e.shape,t))return t;if(e.shape.length===t.length){const n=[];for(let r=0;r<e.shape.length;r++)null==t[r]&&null!=e.shape[r]?n.push(e.shape[r]):n.push(t[r]);return n}return t}(a,n),i=1-t,o=ou(Dl(su(nh(s,0,1,"float32",r),i)),i);return uu(a,o)}});function id(e){return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}function od(e,t,n){const r=1-e%2,a=new Float32Array(e);for(let s=0;s<e;++s){const i=2*Math.PI*s/(e+r-1);a[s]=t-n*Math.cos(i)}return Ph(a,"float32")}var ud=async function(e,t,n=1){const r=vs(e,"predictions","inTopK"),a=vs(t,"targets","inTopK");te(r.rank>1,(()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${r.rank}`)),te(r.rank-1===a.rank,(()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${r.rank} and targets rank ${a.rank}`)),ne(r.shape.slice(0,r.shape.length-1),a.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");const s=r.shape[r.shape.length-1];te(n>0&&n<=s,(()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${s}), but got ${n}`));const i=await r.data(),o=await a.data(),[u,l]=[i.length/s,s],c=ye("bool",u);for(let e=0;e<u;e++){const t=e*l,r=i.subarray(t,t+l),a=[];for(let e=0;e<r.length;e++)a.push({value:r[e],index:e});a.sort(((e,t)=>t.value-e.value)),c[e]=0;for(let t=0;t<n;t++)if(a[t].index===o[e]){c[e]=1;break}}return e!==r&&r.dispose(),t!==a&&a.dispose(),Cs(c,a.shape,"bool")},ld={};y(ld,{conv2d:()=>md,depthwiseConv2d:()=>bd,matMul:()=>xd});var cd=Ss({conv2DBackpropFilter_:function(e,t,n,r,a,s="NHWC",i){let o=e;3===e.rank&&(o=Mu(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let u=t;3===u.rank&&(u=Mu(t,[1,t.shape[0],t.shape[1],t.shape[2]])),te(4===o.rank,(()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${o.shape}.`)),te(4===u.rank,(()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${u.shape}.`)),te(4===n.length,(()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`));const l="NHWC"===s?o.shape[3]:o.shape[1],c="NHWC"===s?u.shape[3]:u.shape[1];te(l===n[2],(()=>`Error in conv2dDerFilter: depth of input ${l}) must match input depth in filter (${n[2]}.`)),te(c===n[3],(()=>`Error in conv2dDerFilter: depth of dy (${c}) must match output depth for filter (${n[3]}).`)),null!=i&&te(ue(a),(()=>`Error in conv2dDerFilter: pad must be an integer when using, dimRoundingMode ${i} but got pad ${a}.`));const h={x:o,dy:u},d={strides:r,pad:a,dataFormat:s,dimRoundingMode:i,filterShape:n};return ds.runKernel(It,h,d)}});function hd(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return uu(e,Oh(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function dd(e,t){let n=t;const r=bl(e.shape,t.shape);return r.length>0&&(n=oc(n,r)),Mu(n,e.shape)}function pd(e,t,n,r){if("linear"===t)return e;if("relu"===t)return ih(e);if("elu"===t)return Tl(e);if("relu6"===t)return oh(e);if("prelu"===t)return Xc(e,n);if("leakyrelu"===t)return Vl(e,r);if("sigmoid"===t)return Pu(e);throw new Error(`Unknown fused activation ${t}.`)}var fd=(e,t)=>!(e>0)||"linear"===t,md=Ss({fusedConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:a="NHWC",dilations:s=[1,1],dimRoundingMode:i,bias:o,activation:u="linear",preluActivationWeights:l,leakyreluAlpha:c}){if(u=u||"linear",!1===fd(ds.state.gradientDepth,u)){let h=nl(e,t,n,r,a,s,i);return null!=o&&(h=su(h,o)),pd(h,u,l,c)}const h=vs(e,"x","conv2d"),d=vs(t,"filter","conv2d");let p=h,f=!1;3===h.rank&&(f=!0,p=Mu(h,[1,h.shape[0],h.shape[1],h.shape[2]])),te(4===p.rank,(()=>`Error in fused conv2d: input must be rank 4, but got rank ${p.rank}.`)),te(4===d.rank,(()=>`Error in fused conv2d: filter must be rank 4, but got rank ${d.rank}.`)),null!=i&&te(ue(r),(()=>`Error in fused conv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`)),te(p.shape[3]===d.shape[2],(()=>`Error in conv2d: depth of input (${p.shape[3]}) must match input depth for filter ${d.shape[2]}.`)),te(Ru(n,s),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`)),te("NHWC"===a,(()=>`Error in conv2d: got dataFormat of ${a} but only NHWC is currently supported.`));const m=Nu(p.shape,d.shape,n,s,r,i);let g,y;null!=o&&(g=vs(o,"bias","fused conv2d"),[g]=rs(g,h),xl(m.outShape,g.shape)),null!=l&&(y=vs(l,"prelu weights","fused conv2d"));const b=(e,t)=>{const[a,i,o,l]=t,c=hd(e,o,u);te(Fu(s),(()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`));const h=[al(i.shape,c,a,n,r),cd(i,c,a.shape,n,r)];if(null!=l){const e=dd(l,c);h.push(e)}return h},x={x:p,filter:d,bias:g,preluActivationWeights:y},w={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i,activation:u,leakyreluAlpha:c};return null==o?ec(((e,t,n)=>{let r=ds.runKernel(Zr,x,w);return n([t,e,r]),f&&(r=Mu(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:b}}))(p,d):ec(((e,t,n,r)=>{let a=ds.runKernel(Zr,x,w);return r([t,e,a,n]),f&&(a=Mu(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:b}}))(p,d,g)}}),gd=Ss({depthwiseConv2dNativeBackpropFilter_:function(e,t,n,r,a,s=[1,1],i){let o=e;3===e.rank&&(o=Mu(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let u=t;3===u.rank&&(u=Mu(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const l={x:o,dy:u},c={strides:r,pad:a,dimRoundingMode:i,dilations:s,filterShape:n};return ds.runKernel(Mt,l,c)}}),yd=Ss({depthwiseConv2dNativeBackpropInput_:function(e,t,n,r,a,s=[1,1],i){let o=t,u=!1;3===t.rank&&(u=!0,o=Mu(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const l={dy:o,filter:n},c={strides:r,pad:a,dimRoundingMode:i,dilations:s,inputShape:e},h=ds.runKernel(Ot,l,c);return u?Mu(h,[h.shape[1],h.shape[2],h.shape[3]]):h}}),bd=Ss({fusedDepthwiseConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:a="NHWC",dilations:s=[1,1],dimRoundingMode:i,bias:o,activation:u="linear",preluActivationWeights:l,leakyreluAlpha:c}){if(!1===fd(ds.state.gradientDepth,u)){let h=fl(e,t,n,r,a,s,i);return null!=o&&(h=su(h,o)),pd(h,u,l,c)}const h=vs(e,"x","depthwiseConv2d"),d=vs(t,"filter","depthwiseConv2d");let p=h,f=!1;3===h.rank&&(f=!0,p=Mu(h,[1,h.shape[0],h.shape[1],h.shape[2]])),te(4===p.rank,(()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${p.rank}.`)),te(4===d.rank,(()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${d.rank}.`)),te(p.shape[3]===d.shape[2],(()=>`Error in fused depthwiseConv2d: number of input channels (${p.shape[3]}) must match the inChannels dimension in filter ${d.shape[2]}.`)),null==s&&(s=[1,1]),te(Ru(n,s),(()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`)),null!=i&&te(ue(r),(()=>`Error in fused depthwiseConv2d: pad must be an integer when using dimRoundingMode ${i} but got pad ${r}.`));const m=Nu(p.shape,d.shape,n,s,r,i,!0);let g,y;null!=o&&(g=vs(o,"bias","fused conv2d"),[g]=rs(g,h),xl(m.outShape,g.shape)),null!=l&&(y=vs(l,"prelu weights","fused depthwiseConv2d"));const b=(e,t)=>{te(Fu(s),(()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${s}'`));const[a,o,l,c]=t,h=hd(e,l,u),d=yd(o.shape,h,a,n,r,s,i),p=gd(o,h,a.shape,n,r,s,i);return null!=c?[d,p,dd(g,h)]:[d,p]},x={x:p,filter:d,bias:g,preluActivationWeights:y},w={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i,activation:u,leakyreluAlpha:c};return null==o?ec(((e,t,n)=>{let r=ds.runKernel(Jr,x,w);return n([t,e,r]),f&&(r=Mu(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:b}}))(p,d):ec(((e,t,n,r)=>{let a=ds.runKernel(Jr,x,w);return r([t,e,a,n]),f&&(a=Mu(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:b}}))(p,d,g)}}),xd=Ss({fusedMatMul_:function({a:e,b:t,transposeA:n=!1,transposeB:r=!1,bias:a,activation:s="linear",preluActivationWeights:i,leakyreluAlpha:o}){if(!1===fd(ds.state.gradientDepth,s)){let u=Wi(e,t,n,r);return null!=a&&(u=su(u,a)),pd(u,s,i,o)}let u=vs(e,"a","fused matMul"),l=vs(t,"b","fused matMul");[u,l]=rs(u,l);const c=n?u.shape[u.rank-2]:u.shape[u.rank-1],h=r?l.shape[l.rank-1]:l.shape[l.rank-2],d=n?u.shape[u.rank-1]:u.shape[u.rank-2],p=r?l.shape[l.rank-2]:l.shape[l.rank-1],f=u.shape.slice(0,-2),m=l.shape.slice(0,-2),g=se(f),y=se(m);te(u.rank>=2&&l.rank>=2&&u.rank===l.rank,(()=>`Error in fused matMul: inputs must have the same rank of at least 2, got ranks ${u.rank} and ${l.rank}.`)),te(oe(f,m),(()=>`Error in fused matMul: outer dimensions (${f}) and (${m}) of Tensors with shapes ${u.shape} and ${l.shape} must match.`)),te(c===h,(()=>`Error in fused matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${u.shape} and ${l.shape} and transposeA=${n} and transposeB=${r} must match.`));const b=u.shape.slice(0,-2).concat([d,p]),x=Mu(u,n?[g,c,d]:[g,d,c]),w=Mu(l,r?[y,p,h]:[y,h,p]);let v,k;null!=a&&(v=vs(a,"bias","fused matMul"),[v]=rs(v,u),xl(b,v.shape)),null!=i&&(k=vs(i,"prelu weights","fused matMul"));const I=(e,t)=>{const[i,o,u,l]=t,c=hd(Mu(e,u.shape),u,s);let h,d;return n||r?!n&&r?(h=Wi(c,o,!1,!1),d=Wi(c,i,!0,!1)):n&&!r?(h=Wi(o,c,!1,!0),d=Wi(i,c,!1,!1)):(h=Wi(o,c,!0,!0),d=Wi(c,i,!0,!0)):(h=Wi(c,o,!1,!0),d=Wi(i,c,!0,!1)),null!=a?[h,d,dd(l,c)]:[h,d]},S={a:x,b:w,bias:v,preluActivationWeights:k},N={transposeA:n,transposeB:r,activation:s,leakyreluAlpha:o};return null==a?ec(((e,t,n)=>{const r=ds.runKernel(Yr,S,N);return n([e,t,r]),{value:Mu(r,b),gradFunc:I}}))(x,w):ec(((e,t,n,r)=>{const a=ds.runKernel(Yr,S,N);return r([e,t,a,n]),{value:Mu(a,b),gradFunc:I}}))(x,w,v)}}),wd=Ss({hammingWindow_:function(e){return od(e,.54,.46)}}),vd=Ss({hannWindow_:function(e){return od(e,.5,.5)}}),kd=Ss({frame_:function(e,t,n,r=!1,a=0){let s=0;const i=[];for(;s+t<=e.size;)i.push(Bu(e,s,t)),s+=n;if(r)for(;s<e.size;){const r=s+t-e.size,o=zu([Bu(e,s,t-r),Rl([r],a)]);i.push(o),s+=n}return 0===i.length?Bh([],[0,t]):Mu(zu(i),[i.length,t])}}),Id=Ss({stft_:function(e,t,n,r,a=vd){null==r&&(r=id(t));const s=kd(e,t,n),i=uu(s,a(t));return Ah(i,r)}}),Sd=Ss({cropAndResize_:function(e,t,n,r,a="bilinear",s=0){const i=vs(e,"image","cropAndResize"),o=vs(t,"boxes","cropAndResize","float32"),u=vs(n,"boxInd","cropAndResize","int32"),l=o.shape[0];te(4===i.rank,(()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`)),te(2===o.rank&&4===o.shape[1],(()=>`Error in cropAndResize: boxes must be have size [${l},4] but had shape ${o.shape}.`)),te(1===u.rank&&u.shape[0]===l,(()=>`Error in cropAndResize: boxInd must be have size [${l}] but had shape ${o.shape}.`)),te(2===r.length,(()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`)),te(r[0]>=1&&r[1]>=1,(()=>`cropSize must be atleast [1,1], but was ${r}`)),te("bilinear"===a||"nearest"===a,(()=>`method must be bilinear or nearest, but was ${a}`));const c={image:i,boxes:o,boxInd:u},h={method:a,extrapolationValue:s,cropSize:r};return ds.runKernel(At,c,h)}}),Nd=Ss({flipLeftRight_:function(e){const t=vs(e,"image","flipLeftRight","float32");te(4===t.rank,(()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`));const n={image:t};return ds.runKernel(Jt,n,{})}}),Td=Ss({rotateWithOffset_:function(e,t,n=0,r=.5){const a=vs(e,"image","rotateWithOffset","float32");te(4===a.rank,(()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${a.rank}.`));const s={image:a},i={radians:t,fillValue:n,center:r};return ds.runKernel(Xr,s,i)}});function Cd(e,t,n,r,a,s){null==r&&(r=.5),null==a&&(a=Number.NEGATIVE_INFINITY),null==s&&(s=0);const i=e.shape[0];return n=Math.min(n,i),te(0<=r&&r<=1,(()=>`iouThreshold must be in [0, 1], but was '${r}'`)),te(2===e.rank,(()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`)),te(4===e.shape[1],(()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`)),te(1===t.rank,(()=>"scores must be a 1D tensor")),te(t.shape[0]===i,(()=>`scores has incompatible shape with boxes. Expected ${i}, but was ${t.shape[0]}`)),te(0<=s&&s<=1,(()=>`softNmsSigma must be in [0, 1], but was '${s}'`)),{maxOutputSize:n,iouThreshold:r,scoreThreshold:a,softNmsSigma:s}}var $d=Ss({nonMaxSuppression_:function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY){const s=vs(e,"boxes","nonMaxSuppression"),i=vs(t,"scores","nonMaxSuppression"),o=Cd(s,i,n,r,a),u={maxOutputSize:n=o.maxOutputSize,iouThreshold:r=o.iouThreshold,scoreThreshold:a=o.scoreThreshold};return ds.runKernel(Wn,{boxes:s,scores:i},u)}});function _d(e,t,n){const r=function(e,t,n){return function(e,t,n){let r=0,a=e.length,s=0,i=!1;for(;r<a;){s=r+(a-r>>>1);const o=n(t,e[s]);o>0?r=s+1:(a=s,i=!o)}return i?r:-r-1}(e,t,n||Ed)}(e,t,n),a=r<0?-(r+1):r;e.splice(a,0,t)}function Ed(e,t){return e>t?1:e<t?-1:0}function Ad(e,t,n,r,a){return Dd(e,t,n,r,a,0)}function Fd(e,t,n,r,a,s){return Dd(e,t,n,r,a,0,!1,s,!0)}function Rd(e,t,n,r,a,s){return Dd(e,t,n,r,a,s,!0)}function Dd(e,t,n,r,a,s,i=!1,o=!1,u=!1){const l=[];for(let e=0;e<t.length;e++)t[e]>a&&l.push({score:t[e],boxIndex:e,suppressBeginIndex:0});l.sort(Ld);const c=s>0?-.5/s:0,h=[],d=[];for(;h.length<n&&l.length>0;){const t=l.pop(),{score:n,boxIndex:s,suppressBeginIndex:i}=t;if(n<a)break;let o=!1;for(let n=h.length-1;n>=i;--n){const i=Md(e,s,h[n]);if(i>=r){o=!0;break}if(t.score=t.score*Od(r,c,i),t.score<=a)break}t.suppressBeginIndex=h.length,o||(t.score===n?(h.push(s),d.push(t.score)):t.score>a&&_d(l,t,Ld))}const p=h.length,f=n-p;o&&f>0&&(h.push(...new Array(f).fill(0)),d.push(...new Array(f).fill(0)));const m={selectedIndices:h};return i&&(m.selectedScores=d),u&&(m.validOutputs=p),m}function Md(e,t,n){const r=e.subarray(4*t,4*t+4),a=e.subarray(4*n,4*n+4),s=Math.min(r[0],r[2]),i=Math.min(r[1],r[3]),o=Math.max(r[0],r[2]),u=Math.max(r[1],r[3]),l=Math.min(a[0],a[2]),c=Math.min(a[1],a[3]),h=Math.max(a[0],a[2]),d=Math.max(a[1],a[3]),p=(o-s)*(u-i),f=(h-l)*(d-c);if(p<=0||f<=0)return 0;const m=Math.max(s,l),g=Math.max(i,c),y=Math.min(o,h),b=Math.min(u,d),x=Math.max(y-m,0)*Math.max(b-g,0);return x/(p+f-x)}function Od(e,t,n){const r=Math.exp(t*n*n);return n<=e?r:0}function Ld(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}var zd=Ss({nonMaxSuppressionWithScore_:function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=0){const i=vs(e,"boxes","nonMaxSuppression"),o=vs(t,"scores","nonMaxSuppression"),u=Cd(i,o,n,r,a,s),l={boxes:i,scores:o},c={maxOutputSize:n=u.maxOutputSize,iouThreshold:r=u.iouThreshold,scoreThreshold:a=u.scoreThreshold,softNmsSigma:s=u.softNmsSigma},h=ds.runKernel(Un,l,c);return{selectedIndices:h[0],selectedScores:h[1]}}}),Pd=Ss({nonMaxSuppressionPadded_:function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=!1){const i=vs(e,"boxes","nonMaxSuppression"),o=vs(t,"scores","nonMaxSuppression"),u=Cd(i,o,n,r,a,null),l={boxes:i,scores:o},c={maxOutputSize:u.maxOutputSize,iouThreshold:u.iouThreshold,scoreThreshold:u.scoreThreshold,padToMaxOutputSize:s},h=ds.runKernel(Vn,l,c);return{selectedIndices:h[0],validOutputs:h[1]}}}),Bd=Ss({resizeBilinear_:function(e,t,n=!1,r=!1){const a=vs(e,"images","resizeBilinear");te(3===a.rank||4===a.rank,(()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${a.rank}.`)),te(2===t.length,(()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`)),te(!1===r||!1===n,(()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false."));let s=a,i=!1;3===a.rank&&(i=!0,s=Mu(a,[1,a.shape[0],a.shape[1],a.shape[2]]));const[]=t,o={images:s},u={alignCorners:n,halfPixelCenters:r,size:t},l=ds.runKernel(sr,o,u);return i?Mu(l,[l.shape[1],l.shape[2],l.shape[3]]):l}}),Wd=Ss({resizeNearestNeighbor_:function(e,t,n=!1,r=!1){const a=vs(e,"images","resizeNearestNeighbor");te(3===a.rank||4===a.rank,(()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${a.rank}.`)),te(2===t.length,(()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`)),te("float32"===a.dtype||"int32"===a.dtype,(()=>"`images` must have `int32` or `float32` as dtype")),te(!1===r||!1===n,(()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false."));let s=a,i=!1;3===a.rank&&(i=!0,s=Mu(a,[1,a.shape[0],a.shape[1],a.shape[2]]));const[]=t,o={images:s},u={alignCorners:n,halfPixelCenters:r,size:t},l=ds.runKernel(rr,o,u);return i?Mu(l,[l.shape[1],l.shape[2],l.shape[3]]):l}}),Vd=Ss({threshold_:function(e,t="binary",n=!1,r=.5){const a=vs(e,"image","threshold"),s=a.shape[0]*a.shape[1];let i,o,u,l,c=uu(Ph([r]),255);if(te(3===a.rank,(()=>`Error in threshold: image must be rank 3,but got rank ${a.rank}.`)),te(3===a.shape[2]||1===a.shape[2],(()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${a.shape[2]}.`)),te("int32"===a.dtype||"float32"===a.dtype,(()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${a.dtype}.`)),te("otsu"===t||"binary"===t,(()=>`Method must be binary or otsu, but was ${t}`)),3===a.shape[2]){[i,o,u]=Eh(a,[1,1,1],-1);const e=uu(i,.2989),t=uu(o,.587),n=uu(u,.114);l=su(su(e,t),n)}else l=e;"otsu"===t&&(c=function(e,t){let n,r,a,s,i,o,u=Ph([-1]),l=Ph([0]),c=Ph([0]);for(let h=0;h<e.size-1;h++){n=Bu(e,0,h+1),r=Bu(e,h+1),i=ou(oc(n),t),o=ou(oc(r),t);const d=oc(uu(n,rh(0,n.size)));a=ou(d,oc(n));const p=Rl(r.shape,n.size),f=su(rh(0,r.size),p),m=uu(r,f);s=ou(oc(m),oc(r));const g=ic(a,s),y=ic(a,s),b=uu(i,o);c=uu(uu(b,g),y);const x=Ol(c,l);l=vl(x,c,l),u=vl(x,Ph([h]),u)}return u}(Ku(wi(ph(l),"int32"),Cs([]),256),s));const h=n?Gl(l,c):Ol(l,c);return wi(uu(h,255),"int32")}}),Ud=Ss({transform_:function(e,t,n="nearest",r="constant",a=0,s){const i=vs(e,"image","transform","float32"),o=vs(t,"transforms","transform","float32");te(4===i.rank,(()=>`Error in transform: image must be rank 4,but got rank ${i.rank}.`)),te(2===o.rank&&(o.shape[0]===i.shape[0]||1===o.shape[0])&&8===o.shape[1],(()=>"Error in transform: Input transform should be batch x 8 or 1 x 8")),te(null==s||2===s.length,(()=>`Error in transform: outputShape must be [height, width] or null, but got ${s}.`));const u={image:i,transforms:o},l={interpolation:n,fillMode:r,fillValue:a,outputShape:s};return ds.runKernel(Wr,u,l)}}),Gd=Ss({bandPart_:function(e,t,n){te(t%1==0,(()=>`bandPart(): numLower must be an integer, got ${t}.`)),te(n%1==0,(()=>`bandPart(): numUpper must be an integer, got ${n}.`));const r=vs(e,"a","bandPart");te(r.rank>=2,(()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`));const a=r.shape,[s,i]=r.shape.slice(-2);if(!(t<=s))throw new Error(`bandPart(): numLower (${t}) must not be greater than the number of rows (${s}).`);if(!(n<=i))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${i}).`);t<0&&(t=s),n<0&&(n=i);const o=Mu(rh(0,s,1,"int32"),[-1,1]),u=rh(0,i,1,"int32"),l=ic(o,u),c=bc(Gl(l,mh(+t,"int32")),Ll(l,mh(-n,"int32"))),h=Cc([s,i],r.dtype);return Mu(Mh(Kh(Mu(r,[-1,s,i])).map((e=>vl(c,e,h)))),a)}}),Hd=Ss({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,te(null!=e&&e.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));const n=e[0].shape[0];for(let t=1;t<e.length;++t)te(e[t].shape[0]===n,(()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[t].shape[0]} vs. ${n})`))}else t=!0,e=Eh(e,e.shape[0],0).map((e=>Dh(e,[0])));te(e.length<=e[0].shape[0],(()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`));const n=[],r=e;for(let t=0;t<e.length;++t)n.push(ds.tidy((()=>{let e=r[t];if(t>0)for(let r=0;r<t;++r){const t=uu(oc(uu(n[r],e)),n[r]);e=ic(e,t)}return ou(e,ed(e,"euclidean"))})));return t?Mh(n,0):n}});function jd(e,t=!1){return ds.tidy((()=>{te(2===e.shape.length,(()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`));const n=e.shape[0],r=e.shape[1];let a=Fl(n),s=vi(e);const i=Bh([[1]],[1,1]);let o=vi(i);const u=n>=r?r:n;for(let e=0;e<u;++e){const t=s,u=o,l=a;[o,s,a]=ds.tidy((()=>{const t=Bu(s,[e,e],[n-e,1]),u=ed(t),l=Bu(s,[e,e],[1,1]),c=vl(Ol(l,0),Bh([[-1]]),Bh([[1]])),h=ic(l,uu(c,u)),d=ou(t,h);o=1===d.shape[0]?vi(i):zu([i,Bu(d,[1,0],[d.shape[0]-1,d.shape[1]])],0);const p=nc(ou(Wi(c,h),u)),f=Bu(s,[e,0],[n-e,r]),m=uu(p,o),g=Ui(o);if(0===e)s=ic(f,Wi(m,Wi(g,f)));else{const t=ic(f,Wi(m,Wi(g,f)));s=zu([Bu(s,[0,0],[e,r]),t],0)}const y=Ui(m),b=Bu(a,[0,e],[n,a.shape[1]-e]);if(0===e)a=ic(b,Wi(Wi(b,o),y));else{const t=ic(b,Wi(Wi(b,o),y));a=zu([Bu(a,[0,0],[n,e]),t],1)}return[o,s,a]})),qo([t,u,l])}return!t&&n>r&&(a=Bu(a,[0,0],[n,r]),s=Bu(s,[0,0],[r,r])),[a,s]}))}var qd,Kd,Xd=Ss({qr_:function(e,t=!1){if(te(e.rank>=2,(()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`)),2===e.rank)return jd(e,t);{const n=e.shape.slice(0,e.shape.length-2).reduce(((e,t)=>e*t)),r=Kh(Mu(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),a=[],s=[];return r.forEach((e=>{const[n,r]=jd(e,t);a.push(n),s.push(r)})),[Mu(Mh(a,0),e.shape),Mu(Mh(s,0),e.shape)]}}});(Kd=qd||(qd={}))[Kd.NONE=0]="NONE",Kd[Kd.MEAN=1]="MEAN",Kd[Kd.SUM=2]="SUM",Kd[Kd.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS";var Yd=Ss({computeWeightedLoss_:function(e,t,n=qd.SUM_BY_NONZERO_WEIGHTS){const r=vs(e,"losses","computeWeightedLoss");let a=null;null!=t&&(a=vs(t,"weights","computeWeightedLoss"));const s=null==a?r:uu(r,a);if(n===qd.NONE)return s;if(n===qd.SUM)return oc(s);if(n===qd.MEAN){if(null==a)return Tc(s);{const e=r.size/a.size,t=ou(oc(s),oc(a));return e>1?ou(t,mh(e)):t}}if(n===qd.SUM_BY_NONZERO_WEIGHTS){if(null==a)return ou(oc(s),mh(r.size));{const e=uu(a,$c(r.shape)),t=wi(oc(zc(e,mh(0))),"float32");return ou(oc(s),t)}}throw Error(`Unknown reduction: ${n}`)}}),Zd=Ss({absoluteDifference_:function(e,t,n,r=qd.SUM_BY_NONZERO_WEIGHTS){const a=vs(e,"labels","absoluteDifference"),s=vs(t,"predictions","absoluteDifference");let i=null;null!=n&&(i=vs(n,"weights","absoluteDifference")),ne(a.shape,s.shape,"Error in absoluteDifference: ");const o=lu(ic(a,s));return Yd(o,i,r)}}),Jd=Ss({cosineDistance_:function(e,t,n,r,a=qd.SUM_BY_NONZERO_WEIGHTS){const s=vs(e,"labels","cosineDistance"),i=vs(t,"predictions","cosineDistance");let o=null;null!=r&&(o=vs(r,"weights","cosineDistance")),ne(s.shape,i.shape,"Error in cosineDistance: ");const u=mh(1),l=ic(u,oc(uu(s,i),n,!0));return Yd(l,o,a)}}),Qd=Ss({hingeLoss_:function(e,t,n,r=qd.SUM_BY_NONZERO_WEIGHTS){let a=vs(e,"labels","hingeLoss");const s=vs(t,"predictions","hingeLoss");let i=null;null!=n&&(i=vs(n,"weights","hingeLoss")),ne(a.shape,s.shape,"Error in hingeLoss: ");const o=mh(1);a=ic(uu(mh(2),a),o);const u=ih(ic(o,uu(a,s)));return Yd(u,i,r)}}),ep=Ss({huberLoss_:function(e,t,n,r=1,a=qd.SUM_BY_NONZERO_WEIGHTS){const s=vs(e,"labels","huberLoss"),i=vs(t,"predictions","huberLoss");let o=null;null!=n&&(o=vs(n,"weights","huberLoss")),ne(s.shape,i.shape,"Error in huberLoss: ");const u=mh(r),l=lu(ic(i,s)),c=Ac(l,u),h=ic(l,c),d=su(uu(mh(.5),Dc(c)),uu(u,h));return Yd(d,o,a)}}),tp=Ss({logLoss_:function(e,t,n,r=1e-7,a=qd.SUM_BY_NONZERO_WEIGHTS){const s=vs(e,"labels","logLoss"),i=vs(t,"predictions","logLoss");let o=null;null!=n&&(o=vs(n,"weights","logLoss")),ne(s.shape,i.shape,"Error in logLoss: ");const u=mh(1),l=mh(r),c=nc(uu(s,ql(su(i,l)))),h=uu(ic(u,s),ql(su(ic(u,i),l))),d=ic(c,h);return Yd(d,o,a)}}),np=Ss({meanSquaredError_:function(e,t,n,r=qd.SUM_BY_NONZERO_WEIGHTS){const a=vs(e,"labels","meanSquaredError"),s=vs(t,"predictions","meanSquaredError");let i=null;null!=n&&(i=vs(n,"weights","meanSquaredError")),ne(a.shape,s.shape,"Error in meanSquaredError: ");const o=Rh(a,s);return Yd(o,i,r)}}),rp=Ss({sigmoidCrossEntropy_:function(e,t,n,r=0,a=qd.SUM_BY_NONZERO_WEIGHTS){let s=vs(e,"multiClassLabels","sigmoidCrossEntropy");const i=vs(t,"logits","sigmoidCrossEntropy");let o=null;if(null!=n&&(o=vs(n,"weights","sigmoidCrossEntropy")),ne(s.shape,i.shape,"Error in sigmoidCrossEntropy: "),r>0){const e=mh(r),t=mh(1),n=mh(.5);s=su(uu(s,ic(t,e)),uu(n,e))}const u=function(e,t){const n=vs(e,"labels","sigmoidCrossEntropyWithLogits"),r=vs(t,"logits","sigmoidCrossEntropyWithLogits");ne(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");const a=ih(r),s=uu(r,n),i=Kl($l(nc(lu(r))));return su(ic(a,s),i)}(s,i);return Yd(u,o,a)}}),ap=Ss({softmaxCrossEntropy_:function(e,t,n,r=0,a=qd.SUM_BY_NONZERO_WEIGHTS){let s=vs(e,"onehotLabels","softmaxCrossEntropy");const i=vs(t,"logits","softmaxCrossEntropy");let o=null;if(null!=n&&(o=vs(n,"weights","softmaxCrossEntropy")),ne(s.shape,i.shape,"Error in softmaxCrossEntropy: "),r>0){const e=mh(r),t=mh(1),n=mh(s.shape[1]);s=su(uu(s,ic(t,e)),ou(e,n))}const u=function(e,t,n=-1){if(-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${n}`);return ec(((e,t,r)=>{const a=yc(t,[n],!0),s=ic(wi(t,"float32"),a);r([e,s]);const i=nc(uu(s,e));return{value:oc(i,[n]),gradFunc:(e,t)=>{const[r,a]=t,s=dc(e.shape,[n]);return[uu(Mu(e,s),ic(wi(r,"float32"),$l(a))),uu(Mu(e,s),ic($l(a),wi(r,"float32")))]}}}))(e,t)}(s,i);return Yd(u,o,a)}}),sp=Ss({sparseFillEmptyRows_:function(e,t,n,r){const a=vs(e,"indices","sparseFillEmptyRows"),s=vs(t,"values","sparseFillEmptyRows"),i=vs(n,"denseShape","sparseFillEmptyRows"),o=vs(r,"defaultValue","sparseFillEmptyRows",s.dtype);if(2!==a.rank)throw new Error(`Indices should be Tensor2D but received shape\n        ${a.shape}`);if(1!==s.rank)throw new Error(`Values should be Tensor1D but received shape ${s.shape}`);if(1!==i.rank)throw new Error(`Dense shape should be Tensor1D but received shape ${i.shape}`);if(0!==o.rank)throw new Error(`Default value should be a scalar but received shape ${o.shape}`);const u={indices:a,values:s,denseShape:i,defaultValue:o},l=ds.runKernel(Nr,u);return{outputIndices:l[0],outputValues:l[1],emptyRowIndicator:l[2],reverseIndexMap:l[3]}}}),ip=Ss({sparseReshape_:function(e,t,n){const r=vs(e,"inputIndices","sparseReshape"),a=vs(t,"inputShape","sparseReshape"),s=vs(n,"newShape","sparseReshape");if(2!==r.rank)throw new Error(`Input indices should be Tensor2D but received shape\n        ${r.shape}`);if(1!==a.rank)throw new Error(`Input shape should be Tensor1D but received shape ${a.shape}`);if(1!==s.rank)throw new Error(`New shape should be Tensor1D but received shape ${s.shape}`);const i={inputIndices:r,inputShape:a,newShape:s},o=ds.runKernel(Tr,i);return{outputIndices:o[0],outputShape:o[1]}}}),op=Ss({sparseSegmentMean_:function(e,t,n){const r=vs(e,"data","sparseSegmentMean"),a=vs(t,"indices","sparseSegmentMean"),s=vs(n,"segmentIds","sparseSegmentMean");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.rank)throw new Error(`Indices should be Tensor1D but received shape\n          ${a.shape}`);if(1!==s.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n          ${s.shape}`);const i={data:r,indices:a,segmentIds:s};return ds.runKernel(Cr,i)}}),up=Ss({sparseSegmentSum_:function(e,t,n){const r=vs(e,"data","sparseSegmentSum"),a=vs(t,"indices","sparseSegmentSum"),s=vs(n,"segmentIds","sparseSegmentSum");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.rank)throw new Error(`Indices should be Tensor1D but received shape\n         ${a.shape}`);if(1!==s.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n         ${s.shape}`);const i={data:r,indices:a,segmentIds:s};return ds.runKernel($r,i)}}),lp=Ss({stringNGrams_:function(e,t,n,r,a,s,i,o){const u=vs(e,"data","stringNGrams","string");if("string"!==u.dtype)throw new Error("Data must be of datatype string");if(1!==u.shape.length)throw new Error(`Data must be a vector, saw: ${u.shape}`);const l=vs(t,"dataSplits","stringNGrams");if("int32"!==l.dtype)throw new Error("Data splits must be of datatype int32");const c={separator:n,nGramWidths:r,leftPad:a,rightPad:s,padWidth:i,preserveShortSequences:o},h={data:u,dataSplits:l},d=ds.runKernel(Rr,h,c);return{nGrams:d[0],nGramsSplits:d[1]}}}),cp=Ss({stringSplit_:function(e,t,n=!0){const r=vs(e,"input","stringSplit","string"),a=vs(t,"delimiter","stringSplit","string");if(1!==r.rank)throw new Error(`Input should be Tensor1D but received shape ${r.shape}`);if(0!==a.rank)throw new Error(`Delimiter should be a scalar but received shape ${a.shape}`);const s={skipEmpty:n},i={input:r,delimiter:a},o=ds.runKernel(Dr,i,s);return{indices:o[0],values:o[1],shape:o[2]}}}),hp=Ss({stringToHashBucketFast_:function(e,t){const n=vs(e,"input","stringToHashBucketFast","string"),r={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");const a={input:n};return ds.runKernel(Mr,a,r)}}),dp={fft:Ch,ifft:$h,rfft:Ah,irfft:_h},pp={hammingWindow:wd,hannWindow:vd,frame:kd,stft:Id},fp={flipLeftRight:Nd,resizeNearestNeighbor:Wd,resizeBilinear:Bd,rotateWithOffset:Td,cropAndResize:Sd,nonMaxSuppression:$d,nonMaxSuppressionAsync:async function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY){const s=vs(e,"boxes","nonMaxSuppressionAsync"),i=vs(t,"scores","nonMaxSuppressionAsync"),o=Cd(s,i,n,r,a);n=o.maxOutputSize,r=o.iouThreshold,a=o.scoreThreshold;const u=await Promise.all([s.data(),i.data()]),l=u[0],c=u[1],{selectedIndices:h}=Ad(l,c,n,r,a);return s!==e&&s.dispose(),i!==t&&i.dispose(),Ph(h,"int32")},nonMaxSuppressionWithScore:zd,nonMaxSuppressionWithScoreAsync:async function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=0){const i=vs(e,"boxes","nonMaxSuppressionAsync"),o=vs(t,"scores","nonMaxSuppressionAsync"),u=Cd(i,o,n,r,a,s);n=u.maxOutputSize,r=u.iouThreshold,a=u.scoreThreshold,s=u.softNmsSigma;const l=await Promise.all([i.data(),o.data()]),c=l[0],h=l[1],{selectedIndices:d,selectedScores:p}=Rd(c,h,n,r,a,s);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:Ph(d,"int32"),selectedScores:Ph(p)}},nonMaxSuppressionPadded:Pd,nonMaxSuppressionPaddedAsync:async function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=!1){const i=vs(e,"boxes","nonMaxSuppressionAsync"),o=vs(t,"scores","nonMaxSuppressionAsync"),u=Cd(i,o,n,r,a,null),l=u.maxOutputSize,c=u.iouThreshold,h=u.scoreThreshold,[d,p]=await Promise.all([i.data(),o.data()]),{selectedIndices:f,validOutputs:m}=Fd(d,p,l,c,h,s);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:Ph(f,"int32"),validOutputs:mh(m,"int32")}},threshold:Vd,transform:Ud},mp={bandPart:Gd,gramSchmidt:Hd,qr:Xd},gp={absoluteDifference:Zd,computeWeightedLoss:Yd,cosineDistance:Jd,hingeLoss:Qd,huberLoss:ep,logLoss:tp,meanSquaredError:np,sigmoidCrossEntropy:rp,softmaxCrossEntropy:ap},yp={sparseFillEmptyRows:sp,sparseReshape:ip,sparseSegmentMean:op,sparseSegmentSum:up},bp={stringNGrams:lp,stringSplit:cp,stringToHashBucketFast:hp},xp=class extends ko{minimize(e,t=!1,n){const{value:r,grads:a}=this.computeGradients(e,n);if(null!=n){const e=n.map((e=>({name:e.name,tensor:a[e.name]})));this.applyGradients(e)}else this.applyGradients(a);return qo(a),t?r:(r.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return Ql(e,t)}dispose(){null!=this.iterations_&&qo(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:mh(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}};Object.defineProperty(xp,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});var wp=class extends xp{constructor(e,t,n=null){super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=ds.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=ds.registeredVariables[t];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${t}/accum_grad`,variable:jo((()=>kl(r).variable(!1)))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:`${t}/accum_var`,variable:jo((()=>kl(r).variable(!1)))});const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const s=this.accumulatedGrads[n].variable,i=this.accumulatedUpdates[n].variable;jo((()=>{const e=su(uu(s,this.rho),uu(Dc(a),1-this.rho)),t=uu(ou(Fh(su(i,this.epsilon)),Fh(su(s,this.epsilon))),a),n=su(uu(i,this.rho),uu(Dc(t),1-this.rho));s.assign(e),i.assign(n);const o=su(uu(t,-this.learningRate),r);r.assign(o)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(qo(this.accumulatedGrads.map((e=>e.variable))),qo(this.accumulatedUpdates.map((e=>e.variable))))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){const t=(e=await this.extractIterations(e)).length/2;this.accumulatedGrads=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)}))),this.accumulatedUpdates=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}};wp.className="Adadelta",So(wp);var vp=class extends xp{constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=ds.registeredVariables[t];if(null==this.accumulatedGrads[n]){const e=!1;this.accumulatedGrads[n]={originalName:`${t}/accumulator`,variable:jo((()=>Rl(r.shape,this.initialAccumulatorValue).variable(e)))}}const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const s=this.accumulatedGrads[n].variable;jo((()=>{const e=su(s,Dc(a));s.assign(e);const t=su(uu(ou(a,Fh(su(e,ds.backend.epsilon()))),-this.learningRate),r);r.assign(t)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&qo(this.accumulatedGrads.map((e=>e.variable)))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),this.accumulatedGrads=e.map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}};vp.className="Adagrad",So(vp);var kp=class extends xp{constructor(e,t,n,r=null){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],jo((()=>{this.accBeta1=mh(t).variable(),this.accBeta2=mh(n).variable()})),null==r&&(this.epsilon=ds.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);jo((()=>{const n=ic(1,this.accBeta1),r=ic(1,this.accBeta2);t.forEach(((t,a)=>{const s=ds.registeredVariables[t];null==this.accumulatedFirstMoment[a]&&(this.accumulatedFirstMoment[a]={originalName:`${t}/m`,variable:jo((()=>kl(s).variable(!1)))}),null==this.accumulatedSecondMoment[a]&&(this.accumulatedSecondMoment[a]={originalName:`${t}/v`,variable:jo((()=>kl(s).variable(!1)))});const i=Array.isArray(e)?e[a].tensor:e[t];if(null==i)return;const o=this.accumulatedFirstMoment[a].variable,u=this.accumulatedSecondMoment[a].variable,l=su(uu(o,this.beta1),uu(i,1-this.beta1)),c=su(uu(u,this.beta2),uu(Dc(i),1-this.beta2)),h=ou(l,n),d=ou(c,r);o.assign(l),u.assign(c);const p=su(uu(ou(h,su(Fh(d),this.epsilon)),-this.learningRate),s);s.assign(p)})),this.accBeta1.assign(uu(this.accBeta1,this.beta1)),this.accBeta2.assign(uu(this.accBeta2,this.beta2))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&qo(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedSecondMoment&&qo(this.accumulatedSecondMoment.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),jo((()=>{this.accBeta1.assign(Kc(this.beta1,this.iterations_+1)),this.accBeta2.assign(Kc(this.beta2,this.iterations_+1))}));const t=e.length/2;this.accumulatedFirstMoment=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)}))),this.accumulatedSecondMoment=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}};kp.className="Adam",So(kp);var Ip=class extends xp{constructor(e,t,n,r=null,a=0){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.decay=a,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],jo((()=>{this.iteration=mh(0).variable(),this.accBeta1=mh(t).variable()})),null==r&&(this.epsilon=ds.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);jo((()=>{const n=ic(1,this.accBeta1),r=ou(-this.learningRate,su(uu(this.iteration,this.decay),1));t.forEach(((t,a)=>{const s=ds.registeredVariables[t];null==this.accumulatedFirstMoment[a]&&(this.accumulatedFirstMoment[a]={originalName:`${t}/m`,variable:kl(s).variable(!1)}),null==this.accumulatedWeightedInfNorm[a]&&(this.accumulatedWeightedInfNorm[a]={originalName:`${t}/v`,variable:kl(s).variable(!1)});const i=Array.isArray(e)?e[a].tensor:e[t];if(null==i)return;const o=this.accumulatedFirstMoment[a].variable,u=this.accumulatedWeightedInfNorm[a].variable,l=su(uu(o,this.beta1),uu(i,1-this.beta1)),c=uu(u,this.beta2),h=lu(i),d=Nc(c,h);o.assign(l),u.assign(d);const p=su(uu(ou(r,n),ou(l,su(d,this.epsilon))),s);s.assign(p)})),this.iteration.assign(su(this.iteration,1)),this.accBeta1.assign(uu(this.accBeta1,this.beta1))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&qo(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedWeightedInfNorm&&qo(this.accumulatedWeightedInfNorm.map((e=>e.variable)))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}};Ip.className="Adamax",So(Ip);var Sp=class extends xp{constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;const a=ds.registeredVariables[t];jo((()=>{const e=su(uu(this.c,r),a);a.assign(e)}))})),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=Ko(mh(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(0!==(e=await this.extractIterations(e)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}};Sp.className="SGD",So(Sp);var Np=class extends Sp{constructor(e,t,n=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=mh(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=ds.registeredVariables[t];if(null==this.accumulations[n]){const e=!1;this.accumulations[n]={originalName:`${t}/momentum`,variable:jo((()=>kl(r).variable(e)))}}const a=this.accumulations[n].variable,s=Array.isArray(e)?e[n].tensor:e[t];null!=s&&jo((()=>{let e;const t=su(uu(this.m,a),s);e=this.useNesterov?su(uu(this.c,su(s,uu(t,this.m))),r):su(uu(this.c,t),r),a.assign(t),r.assign(e)}))})),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&qo(this.accumulations.map((e=>e.variable)))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),this.accumulations=e.map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}};Np.className="Momentum",So(Np);var Tp=class extends xp{constructor(e,t=.9,n=0,r=null,a=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=a,null==r&&(this.epsilon=ds.backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=ds.registeredVariables[t],a=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:`${t}/rms`,variable:jo((()=>kl(r).variable(a)))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:`${t}/momentum`,variable:jo((()=>kl(r).variable(a)))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${t}/mg`,variable:jo((()=>kl(r).variable(a)))});const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const i=this.accumulatedMeanSquares[n].variable,o=this.accumulatedMoments[n].variable;jo((()=>{const e=su(uu(i,this.decay),uu(Dc(s),1-this.decay));if(this.centered){const t=this.accumulatedMeanGrads[n].variable,a=su(uu(t,this.decay),uu(s,1-this.decay)),u=ou(uu(s,this.learningRate),Fh(ic(e,su(Dc(a),this.epsilon)))),l=su(uu(o,this.momentum),u);i.assign(e),t.assign(a),o.assign(l);const c=ic(r,l);r.assign(c)}else{const e=su(uu(i,this.decay),uu(Dc(s),1-this.decay)),t=su(uu(o,this.momentum),ou(uu(s,this.learningRate),Fh(su(e,this.epsilon))));i.assign(e),o.assign(t);const n=ic(r,t);r.assign(n)}}))})),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&qo(this.accumulatedMeanSquares.map((e=>e.variable))),null!=this.accumulatedMeanGrads&&this.centered&&qo(this.accumulatedMeanGrads.map((e=>e.variable))),null!=this.accumulatedMoments&&qo(this.accumulatedMoments.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedMoments=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}};Tp.className="RMSProp",So(Tp);var Cp=class{static sgd(e){return new Sp(e)}static momentum(e,t,n=!1){return new Np(e,t,n)}static rmsprop(e,t=.9,n=0,r=null,a=!1){return new Tp(e,t,n,r,a)}static adam(e=.001,t=.9,n=.999,r=null){return new kp(e,t,n,r)}static adadelta(e=.001,t=.95,n=null){return new wp(e,t,n)}static adamax(e=.002,t=.9,n=.999,r=null,a=0){return new Ip(e,t,n,r,a)}static adagrad(e,t=.1){return new vp(e,t)}},$p={sgd:Cp.sgd,momentum:Cp.momentum,adadelta:Cp.adadelta,adagrad:Cp.adagrad,rmsprop:Cp.rmsprop,adamax:Cp.adamax,adam:Cp.adam},_p="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:"undefined"!=typeof setImmediate?setImmediate:e=>e();function Ep(){return new Promise((e=>_p((()=>e()))))}var Ap={};function Fp(e,t){const n=e[0].length;e.forEach(((e,t)=>{te(e.length===n,(()=>`Error in concat${n}D: rank of tensors[${t}] must be the same as the rank of the rest (${n})`))})),te(t>=0&&t<n,(()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`));const r=e[0];e.forEach(((e,a)=>{for(let s=0;s<n;s++)te(s===t||e[s]===r[s],(()=>`Error in concat${n}D: Shape of tensors[${a}] (${e}) does not match the shape of the rest (${r}) along the non-concatenated axis ${a}.`))}))}function Rp(e,t){const n=e[0].slice();for(let r=1;r<e.length;r++)n[t]+=e[r][t];return n}y(Ap,{ERF_A1:()=>Hp,ERF_A2:()=>jp,ERF_A3:()=>qp,ERF_A4:()=>Kp,ERF_A5:()=>Xp,ERF_P:()=>Gp,PARALLELIZE_THRESHOLD:()=>Dp,SELU_SCALE:()=>Up,SELU_SCALEALPHA:()=>Vp,applyActivation:()=>pd,assertAndGetBroadcastShape:()=>xl,assertAxesAreInnerMostDims:()=>pc,assertParamsConsistent:()=>Fp,assignToTypedArray:()=>rf,axesAreInnerMostDims:()=>lc,calculateShapes:()=>no,checkEinsumDimSizes:()=>cf,combineLocations:()=>cc,complexWithEvenIndex:()=>ef,complexWithOddIndex:()=>tf,computeConv2DInfo:()=>Nu,computeConv3DInfo:()=>Tu,computeDefaultPad:()=>Cu,computeDilation2DInfo:()=>ku,computeOptimalWindowSize:()=>Mp,computeOutAndReduceShapes:()=>hc,computeOutShape:()=>Rp,computePool2DInfo:()=>Iu,computePool3DInfo:()=>Su,convertConv2DDataFormat:()=>Du,decodeEinsumEquation:()=>uf,eitherStridesOrDilationsAreOne:()=>Ru,expandShapeToKeepDim:()=>dc,exponent:()=>sf,exponents:()=>af,fromStringArrayToUint8:()=>wf,fromUint8ToStringArray:()=>xf,getAxesPermutation:()=>fc,getBroadcastDims:()=>yl,getComplexWithIndex:()=>nf,getEinsumComputePath:()=>hf,getEinsumPermutation:()=>lf,getFusedBiasGradient:()=>dd,getFusedDyActivation:()=>hd,getImageCenter:()=>Op,getInnerMostAxes:()=>gc,getPermuted:()=>zp,getReductionAxes:()=>bl,getReshaped:()=>Lp,getReshapedPermuted:()=>Pp,getSliceBeginCoords:()=>Bp,getSliceSize:()=>Wp,getUndoAxesPermutation:()=>mc,isIdentityPermutation:()=>df,log:()=>Zp,mergeRealAndImagArrays:()=>Jp,prepareAndValidate:()=>Ji,prepareSplitSize:()=>ff,segment_util:()=>mf,shouldFuse:()=>fd,slice_util:()=>ro,splitRealAndImagArrays:()=>Qp,tupleValuesAreOne:()=>Fu,upcastType:()=>ts,validateInput:()=>to,validateUpdateShape:()=>eo,warn:()=>Yp});var Dp=30;function Mp(e){return e<=Dp?e:Ee(e,Math.floor(Math.sqrt(e)))}function Op(e,t,n){return[n*("number"==typeof e?e:e[0]),t*("number"==typeof e?e:e[1])]}function Lp(e,t,n,r=!0){let a=[];if(r)a=a.concat(t.slice(0)),a.push(e[0]/n),a=a.concat(e.slice(1));else{a=a.concat(e[0]);const n=t.length;for(let r=0;r<n;++r)a=a.concat([e[r+1]/t[r],t[r]]);a=a.concat(e.slice(n+1))}return a}function zp(e,t,n=!0){const r=[];if(n){r.push(t);for(let n=t+1;n<e;++n)n<=2*t?(r.push(n),r.push(n-(t+1))):r.push(n)}else{const n=[],a=[];for(let r=1;r<e;++r)r>=2*t+1||r%2==1?a.push(r):n.push(r);r.push(...n),r.push(0),r.push(...a)}return r}function Pp(e,t,n,r=!0){const a=[];r?a.push(e[0]/n):a.push(e[0]*n);for(let n=1;n<e.length;++n)n<=t.length?r?a.push(t[n-1]*e[n]):a.push(e[n]/t[n-1]):a.push(e[n]);return a}function Bp(e,t){const n=[0];for(let r=0;r<t;++r)n.push(e[r][0]);return n}function Wp(e,t,n){const r=e.slice(0,1);for(let a=0;a<n;++a)r.push(e[a+1]-t[a][0]-t[a][1]);return r}var Vp=1.7580993408473768,Up=1.0507009873554805,Gp=.3275911,Hp=.254829592,jp=-.284496736,qp=1.421413741,Kp=-1.453152027,Xp=1.061405429;function Yp(...e){Ue().getBool("IS_TEST")||console.warn(...e)}function Zp(...e){Ue().getBool("IS_TEST")||console.log(...e)}function Jp(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);const n=new Float32Array(2*e.length);for(let r=0;r<n.length;r+=2)n[r]=e[r/2],n[r+1]=t[r/2];return n}function Qp(e){const t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let r=0;r<e.length;r+=2)t[r/2]=e[r],n[r/2]=e[r+1];return{real:t,imag:n}}function ef(e){const t=Math.ceil(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=0;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}}function tf(e){const t=Math.floor(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=2;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}}function nf(e,t){return{real:e[2*t],imag:e[2*t+1]}}function rf(e,t,n,r){e[2*r]=t,e[2*r+1]=n}function af(e,t){const n=new Float32Array(e/2),r=new Float32Array(e/2);for(let a=0;a<Math.ceil(e/2);a++){const s=(t?2:-2)*Math.PI*(a/e);n[a]=Math.cos(s),r[a]=Math.sin(s)}return{real:n,imag:r}}function sf(e,t,n){const r=(n?2:-2)*Math.PI*(e/t);return{real:Math.cos(r),imag:Math.sin(r)}}var of=/->/g;function uf(e,t){const n=((e=e.replace(/\s/g,"")).length-e.replace(of,"").length)/"->".length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error('Equation must contain exactly one arrow ("->").');const[r,a]=e.split("->");te(-1===r.indexOf("..."),(()=>'The ellipsis notation ("...") is not supported yet.'));const s=r.split(","),i=s.length;if(t!==i)throw new Error(`Expected ${i} input tensors, received ${t}`);if(i>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const o=[];for(let e=0;e<a.length;++e){const t=a[e];if(!s.some((e=>-1!==e.indexOf(t))))throw new Error(`Output subscripts contain the label ${t} not present in the input subscripts.`);-1===o.indexOf(t)&&o.push(t)}for(let e=0;e<r.length;++e){const t=r[e];-1===o.indexOf(t)&&","!==t&&o.push(t)}const u=new Array(s.length);for(let e=0;e<i;++e){if(new Set(s[e].split("")).size!==s[e].length)throw new Error(`Found duplicate axes in input component ${s[e]}. Support for duplicate axes in input is not implemented yet.`);u[e]=[];for(let t=0;t<s[e].length;++t)u[e].push(o.indexOf(s[e][t]))}const l=o.length,c=[];for(let e=a.length;e<l;++e)c.push(e);return{allDims:o,summedDims:c,idDims:u}}function lf(e,t){let n=new Array(e);n.fill(-1);for(let e=0;e<t.length;++e)n[t[e]]=e;const r=[];for(let t=0;t<e;++t)-1===n[t]&&r.push(t);return n=n.filter((e=>-1!==e)),{permutationIndices:n,expandDims:r}}function cf(e,t,n){const r=new Array(e);for(let e=0;e<n.length;++e){const a=n[e].shape;for(let n=0;n<t[e].length;++n)void 0===r[t[e][n]]?r[t[e][n]]=a[n]:te(r[t[e][n]]===a[n],(()=>`Expected dimension ${r[t[e][n]]} at axis ${n} of input shaped ${JSON.stringify(a)}, but got dimension ${a[n]}`))}}function hf(e,t){const n=e,r=[];let a=0;0===e.length&&n.push(-1),a=e.length+1;for(let e=0;e<a;++e)r.push([]);const s=[];for(let e=0;e<n.length;++e){const a=pf(t,n[e]);for(const t of a)-1===s.indexOf(t)&&(r[e].push(t),s.push(t))}return{path:n,steps:r}}function df(e){return e.every(((e,t)=>e===t))}function pf(e,t){const n=[];for(let r=0;r<e.length;++r)0!==e[r].length&&-1===e[r].indexOf(t)&&-1!==t||n.push(r);return n}function ff(e,t,n=0){let r=[];if("number"==typeof t)te(e.shape[n]%t==0,(()=>"Number of splits must evenly divide the axis.")),r=new Array(t).fill(e.shape[n]/t);else{te(t.reduce(((e,t)=>(-1===t&&(e+=1),e)),0)<=1,(()=>"There should be only one negative value in split array."));const a=t.indexOf(-1);if(-1!==a){const r=t.reduce(((e,t)=>t>0?e+t:e));t[a]=e.shape[n]-r}te(e.shape[n]===t.reduce(((e,t)=>e+t)),(()=>"The sum of sizes must match the size of the axis dimension.")),r=t}return r}var mf={};function gf(e,t){let n,r=!1;for(e<=Dp?(n=e,r=!0):n=Ee(e,Math.floor(Math.sqrt(e)));!r;)n>t||n===e?r=!0:n=Ee(e,n+1);return n}function yf(e,t,n){const r=[],a=e.length;for(let s=0;s<a;s++)s!==t?r.push(e[s]):r.push(n);return r}function bf(e,t,n,r){const a=t.shape.length,s=e.shape.length;if(0!==r&&(r<-a||r>a))throw new Error(`Expect batchDims in the range of [-${a}, ${a}], but got ${r}`);if(r<0&&(r+=a),r>s)throw new Error(`batchDims (${r}) must be less than rank(x) (\n    ${s}).`);if(n<r)throw new Error(`batchDims (${r}) must be less than or equal to axis (${n}).`);for(let n=0;n<r;++n)if(e.shape[n]!==t.shape[n])throw new Error(`x.shape[${n}]: ${e.shape[n]} should be equal to indices.shape[${n}]: ${t.shape[n]}.`);const i=e.shape[n],o=[];let u=1,l=1,c=1;for(let t=0;t<r;++t)o.push(e.shape[t]),u*=e.shape[t];for(let t=r;t<n;t++)o.push(e.shape[t]),l*=e.shape[t];for(let e=r;e<a;e++)o.push(t.shape[e]);for(let t=n+1;t<s;t++)o.push(e.shape[t]),c*=e.shape[t];return{batchSize:u,sliceSize:c,outerSize:l,dimSize:i,outputShape:o}}function xf(e){try{return e.map((e=>Ea(e)))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function wf(e){return e.map((e=>_a(e)))}y(mf,{collectGatherOpShapeInfo:()=>bf,computeOutShape:()=>yf,segOpComputeOptimalWindowSize:()=>gf});var vf={};y(vf,{nonMaxSuppressionV3Impl:()=>Ad,nonMaxSuppressionV4Impl:()=>Fd,nonMaxSuppressionV5Impl:()=>Rd,whereImpl:()=>Yh});var kf={kernelName:Ke,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>uu(e,Oh(wi(n,"float32"),-1))}}},If={kernelName:Xe,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Dc(wi(n,"float32")),r=Fh(ic(mh(1),t));return nc(ou(e,r))}}}},Sf={kernelName:Ye,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Fh(ic(Dc(wi(n,"float32")),1));return ou(e,t)}}}},Nf={kernelName:Ze,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=xl(n.shape,r.shape);return{a:()=>{let t=e;const r=bl(n.shape,a);return r.length>0&&(t=oc(t,r)),Mu(t,n.shape)},b:()=>{let t=e;const n=bl(r.shape,a);return n.length>0&&(t=oc(t,n)),Mu(t,r.shape)}}}},Tf={kernelName:Je,saveAllInputs:!0,gradFunc:(e,t)=>{const n={};return t.forEach(((t,r)=>{n[r]=()=>e.clone()})),n}},Cf={kernelName:tt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>kl(n)}}},$f={kernelName:nt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>kl(n)}}},_f={kernelName:rt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ou(e,Fh(ic(mh(1),Dc(wi(n,"float32")))))}}},Ef={kernelName:at,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Fh(su(mh(1),Dc(wi(n,"float32"))));return ou(e,t)}}}},Af={kernelName:ot,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=xl(n.shape,r.shape);return{a:()=>{const t=su(Dc(n),Dc(r));let s=uu(e,ou(r,t));const i=bl(n.shape,a);return i.length>0&&(s=oc(s,i)),Mu(s,n.shape)},b:()=>{const t=su(Dc(n),Dc(r));let s=nc(uu(e,ou(n,t)));const i=bl(r.shape,a);return i.length>0&&(s=oc(s,i)),Mu(s,r.shape)}}}},Ff={kernelName:st,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ou(e,su(Dc(wi(n,"float32")),1))}}},Rf={kernelName:it,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ou(e,ic(mh(1),Dc(wi(n,"float32"))))}}},Df=Ss({avgPool3dGrad_:function(e,t,n,r,a,s){const i=vs(e,"dy","avgPool3dGrad"),o=vs(t,"input","avgPool3dGrad");let u=i,l=o,c=!1;4===o.rank&&(c=!0,u=Mu(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),l=Mu(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),te(5===u.rank,(()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${u.rank}.`)),te(5===l.rank,(()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${l.rank}.`)),null!=s&&te(ue(a),(()=>`Error in avgPool3dGrad: pad must be an integer when using, dimRoundingMode ${s} but got pad ${a}.`));const h={dy:u,input:l},d={filterSize:n,strides:r,pad:a,dimRoundingMode:s},p=ds.runKernel(ht,h,d);return c?Mu(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}}),Mf={kernelName:ct,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{filterSize:a,strides:s,pad:i,dimRoundingMode:o}=n;return{x:()=>Df(e,r,a,s,i,o)}}},Of=Ss({avgPoolGrad_:function(e,t,n,r,a){const s=vs(e,"dy","avgPoolGrad"),i=vs(t,"input","avgPoolGrad");te(i.rank===s.rank,(()=>`Rank of input (${i.rank}) does not match rank of dy (${s.rank})`));let o=i,u=s,l=!1;3===i.rank&&(l=!0,o=Mu(i,[1,i.shape[0],i.shape[1],i.shape[2]]),u=Mu(s,[1,s.shape[0],s.shape[1],s.shape[2]])),te(4===u.rank,(()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${u.rank}.`)),te(4===o.rank,(()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${o.rank}.`));const c={dy:u,input:o},h={filterSize:n,strides:r,pad:a},d=ds.runKernel(lt,c,h);return l?Mu(d,[d.shape[1],d.shape[2],d.shape[3]]):d}}),Lf={kernelName:ut,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{filterSize:a,strides:s,pad:i}=n;return{x:()=>Of(e,r,a,s,i)}}},zf={kernelName:dt,inputsToSave:["a","b"],gradFunc:(e,t,n)=>{const[r,a]=t,{transposeA:s,transposeB:i}=n;return s||i?!s&&i?{a:()=>Wi(e,a,!1,!1),b:()=>Wi(e,r,!0,!1)}:s&&!i?{a:()=>Wi(a,e,!1,!0),b:()=>Wi(r,e,!1,!1)}:{a:()=>Wi(a,e,!0,!0),b:()=>Wi(e,r,!0,!0)}:{a:()=>Wi(e,a,!1,!0),b:()=>Wi(r,e,!0,!1)}}},Pf={kernelName:pt,gradFunc:(e,t,n)=>{const{blockShape:r,crops:a}=n;return{x:()=>jc(e,r,a)}}},Bf={kernelName:mt,gradFunc:(e,t,n)=>{const r=n,a=r.inputShape,s=r.shape,i=Array.from(s);for(let e=a.length-1;e>=0;e--)if(a[e]===s[e])i[e]=1;else if(1!==a[e])throw new Error(`broadcastTo(): [${a}] cannot be broadcast to [${s}].`);const o=[];for(let e=0;e<i.length;e++)i[e]>1&&o.push(e);return{x:()=>oc(e,o,!0)}}},Wf={kernelName:gt,gradFunc:e=>({x:()=>e.clone()})},Vf={kernelName:yt,gradFunc:e=>({x:()=>kl(e)})},Uf={kernelName:bt,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{clipValueMin:a,clipValueMax:s}=n;return{x:()=>vl(bc(Ll(r,a),Gl(r,s)),e,kl(e))}}},Gf={kernelName:wt,inputsToSave:["x"],gradFunc:kf.gradFunc},Hf={kernelName:vt,saveAllInputs:!0,gradFunc:(e,t,n)=>{const r=t.map((e=>e.shape)),{axis:a}=n,s=me(a,t[0].shape)[0],i=r.map((e=>e[s]));return Eh(e,i,s).map((e=>()=>e))}},jf={kernelName:kt,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[r,a]=t,{dilations:s,strides:i,pad:o,dataFormat:u}=n;return te(Fu(s),(()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`)),{x:()=>al(r.shape,e,a,i,o,u),filter:()=>cd(r,e,a.shape,i,o,u)}}},qf={kernelName:St,inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{const[r,a]=t,{strides:s,pad:i,dataFormat:o,dimRoundingMode:u}=n;return{dy:()=>nl(e,a,s,i,o,1,u),filter:()=>cd(e,r,a.shape,s,i,o,u)}}},Kf=Ss({conv3DBackpropFilter_:function(e,t,n,r,a){let s=e;4===e.rank&&(s=Mu(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let i=t;4===i.rank&&(i=Mu(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),te(5===s.rank,(()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${s.shape}.`)),te(5===i.rank,(()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${i.shape}.`)),te(5===n.length,(()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`)),te(s.shape[4]===n[3],(()=>`Error in conv3dDerFilter: depth of input ${s.shape[4]}) must match input depth in filter (${n[3]}.`)),te(i.shape[4]===n[4],(()=>`Error in conv3dDerFilter: depth of dy (${i.shape[4]}) must match output depth for filter (${n[4]}).`));const o={x:s,dy:i},u={strides:r,pad:a,filterShape:n};return ds.runKernel(Tt,o,u)}}),Xf={kernelName:Nt,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:a,pad:s}=n;te(Fu(r),(()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`));const[i,o]=t;return{x:()=>ol(i.shape,e,o,a,s),filter:()=>Kf(i,e,o.shape,a,s)}}},Yf={kernelName:$t,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>uu(nc(wh(wi(n,"float32"))),e)}}},Zf={kernelName:_t,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>uu(vh(wi(n,"float32")),e)}}},Jf={kernelName:Et,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:a,exclusive:s,reverse:i}=n;return{x:()=>{const t=fc([a],r.rank);let n=hl(e,a,s,!i);return null!=t&&(n=Ui(n,t)),n}}}},Qf={kernelName:Dt,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:a,pad:s,dimRoundingMode:i}=n,o=null==r?[1,1]:r;te(Fu(o),(()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`));const[u,l]=t;return te(4===u.rank,(()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${u.rank}.`)),te(4===l.rank,(()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${l.rank}.`)),te(u.shape[3]===l.shape[2],(()=>`Error in gradient of depthwiseConv2d: number of input channels (${u.shape[3]}) must match the inChannels dimension in filter ${l.shape[2]}.`)),te(Ru(a,o),(()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${a} and dilations '${o}'.`)),null!=i&&te(ue(s),(()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${s}.`)),{x:()=>yd(u.shape,e,l,a,s,r,i),filter:()=>gd(u,e,l.shape,a,s,r,i)}}},em={kernelName:zt,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[r,a]=t,s={x:r,filter:a,dy:e},i={x:r,filter:a,dy:e};return{x:()=>ds.runKernel(Pt,s,n),filter:()=>ds.runKernel(Bt,i,n)}}},tm={kernelName:Ut,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t,r={dy:e,y:n};return{x:()=>ds.runKernel(Gt,r)}}},nm={kernelName:Ht,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,r=uu($l(nc(Dc(n))),2/Math.sqrt(Math.PI));return{x:()=>uu(e,r)}}},rm={kernelName:qt,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>uu(e,n)}}},am={kernelName:Kt,inputsToSave:["input"],gradFunc:(e,t)=>{const[n]=t;return{input:()=>Mu(e,n.shape)}}},sm={kernelName:Xt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>uu(e,$l(n))}}},im={kernelName:Qt,gradFunc:e=>({x:()=>kl(e)})},om={kernelName:en,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=xl(n.shape,r.shape);return{a:()=>{const t=ou(e,wi(r,"float32")),s=bl(n.shape,a);return s.length>0?Mu(oc(t,s),n.shape):t},b:()=>{let t=uu(e,wi(n,"float32"));const s=bl(r.shape,a);s.length>0&&(t=Mu(oc(t,s),r.shape));const i=Dc(r);return nc(ou(t,wi(i,"float32")))}}}},um={kernelName:tn,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{const{varianceEpsilon:r}=n,[a,s,i,o]=t,u=null==o?mh(1):o,l=bl(s.shape,a.shape),c=[];if(1===s.rank){for(let e=0;e<a.shape.length-1;++e)c.push(a.shape[e]);c.push(1)}const h=ic(a,s),d=uu(e,u),p=fh(su(i,mh(r))),f=uu(uu(uu(p,p),p),mh(-.5));return{x:()=>1===s.rank?Mu(uu(uu(e,Al(Mu(p,[1,1,1,s.shape[0]]),c)),u),a.shape):Mu(uu(uu(e,p),u),a.shape),mean:()=>{let e=uu(uu(p,mh(-1)),d);return 1===s.rank&&(e=oc(e,l)),Mu(e,s.shape)},variance:()=>{let e=uu(uu(f,h),d);return 1===s.rank&&(e=oc(e,l)),Mu(e,s.shape)},scale:()=>{const t=uu(h,p);let n=uu(e,t);return 1===s.rank&&(n=oc(n,l)),Mu(n,s.shape)},offset:()=>{let t=e;return 1===s.rank&&(t=oc(t,l)),Mu(t,s.shape)}}}},lm={kernelName:nn,inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{const[r,a]=t,{axis:s}=n,i=me(s,r.shape)[0];return{x:()=>{const t=r.shape,n=a.size,o=t.slice(0,i),u=o.length,l=t.slice(s,t.length).slice(1),c=l.length,h=cm(0,u),d=cm(u+1,u+1+c),p=hm([o,[n],l]),f=Mu(e,p),m=Mu(a,[n]),g=hm([[u],h,d]),y=Ui(f,g);let b=qh(y,m,r.shape[i]);const x=mc(g);return b=Ui(b,x),b},indices:()=>a}}};function cm(e,t){const n=[];for(let r=e;r<t;++r)n.push(r);return n}function hm(e){const t=[];for(let n=0;n<e.length;++n)for(let r=0;r<e[n].length;++r)t.push(e[n][r]);return t}var dm={kernelName:sn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>kl(n),b:()=>kl(r)}}},pm={kernelName:on,gradFunc:e=>({x:()=>wi(e,"float32")})},fm={kernelName:cn,gradFunc:e=>({x:()=>kl(e)})},mm={kernelName:hn,gradFunc:e=>({x:()=>kl(e)})},gm={kernelName:dn,gradFunc:e=>({x:()=>kl(e)})},ym={kernelName:pn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{alpha:a}=n,s=Ol(r,0);return{x:()=>vl(s,e,uu(e,a))}}},bm={kernelName:bn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ou(e,su(n,1))}}},xm={kernelName:yn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ou(e,wi(n,"float32"))}}},wm={kernelName:kn,inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r]=t,{axis:a}=n;return{logits:()=>{const t=$l(r);return ic(e,uu(oc(e,a,!0),t))}}}},vm=Ss({localResponseNormalizationBackprop_:function(e,t,n,r=5,a=1,s=1,i=.5){const o={x:e,y:t,dy:n},u={depthRadius:r,bias:a,alpha:s,beta:i};return ds.runKernel(Sn,o,u)}}),km={kernelName:In,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,a]=t,{depthRadius:s,bias:i,alpha:o,beta:u}=n;return{x:()=>vm(r,a,e,s,i,o,u)}}};function Im(e,t,n,r){return t.rank<n.rank&&(t=Mu(t,dc(t.shape,r))),e.rank<n.rank&&(e=Mu(e,dc(e.shape,r))),{x:()=>uu(e,wi(wl(n,t),e.dtype))}}var Sm={kernelName:Nn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const r=n,{reductionIndices:a}=r,s=t[0],i=Im(e,t[1],s,me(a,s.shape));return{x:()=>i.x()}}},Nm={kernelName:Tn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>uu(e,wi(Ll(n,r),"float32")),b:()=>uu(e,wi(Ul(n,r),"float32"))}}},Tm=Ss({maxPool3dGrad_:function(e,t,n,r,a,s,i){const o=vs(e,"dy","maxPool3dGrad"),u=vs(t,"input","maxPool3dGrad"),l=vs(n,"output","maxPool3dGrad");let c=o,h=u,d=l,p=!1;4===u.rank&&(p=!0,c=Mu(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),h=Mu(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]]),d=Mu(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]])),te(5===c.rank,(()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${c.rank}.`)),te(5===h.rank,(()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${h.rank}.`)),te(5===d.rank,(()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${d.rank}.`)),null!=i&&te(ue(s),(()=>`Error in maxPool3dGrad: pad must be an integer when using, dimRoundingMode ${i} but got pad ${s}.`));const f={dy:c,input:h,output:d},m={filterSize:r,strides:a,pad:s,dimRoundingMode:i},g=ds.runKernel(En,f,m);return p?Mu(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}}),Cm={kernelName:_n,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,a]=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:u}=n;return{x:()=>Tm(e,r,a,s,i,o,u)}}},$m=Ss({maxPoolGrad_:function(e,t,n,r,a,s,i){const o=vs(e,"dy","maxPoolGrad"),u=vs(t,"input","maxPoolGrad"),l=vs(n,"output","maxPoolGrad");te(u.rank===o.rank,(()=>`Rank of input (${u.rank}) does not match rank of dy (${o.rank})`)),te(4===o.rank,(()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${o.rank}.`)),te(4===u.rank,(()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${u.rank}.`)),null!=i&&te(ue(s),(()=>`Error in maxPoolGrad: pad must be an integer when using, dimRoundingMode ${i} but got pad ${s}.`));const c={dy:o,input:u,output:l},h={filterSize:r,strides:a,pad:s,dimRoundingMode:i};return ds.runKernel($n,c,h)}}),_m={kernelName:qn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const r=t[0],{paddings:a}=n,s=a.map((e=>e[0]));return{x:()=>Bu(e,s,r.shape)}}},Em={kernelName:kr,gradFunc:(e,t,n)=>{const{blockShape:r,paddings:a}=n;return{x:()=>Uu(e,r,a)}}},Am={kernelName:Ir,gradFunc:(e,t,n)=>{const{axis:r}=n;return{x:()=>zu(e,r)}}},Fm=[kf,If,Sf,Nf,Tf,Cf,$f,_f,Ef,Af,Ff,Rf,Mf,Lf,zf,Pf,Bf,Wf,Vf,Uf,Gf,Hf,qf,jf,Xf,Yf,Zf,Jf,Qf,em,{kernelName:Wt,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=xl(n.shape,r.shape);return{a:()=>{const t=ou(e,wi(r,"float32")),s=bl(n.shape,a);return s.length>0?Mu(oc(t,s),n.shape):t},b:()=>{let t=uu(e,wi(n,"float32"));const s=bl(r.shape,a);s.length>0&&(t=Mu(oc(t,s),r.shape));const i=Dc(r);return nc(ou(t,wi(i,"float32")))}}}},tm,nm,rm,am,sm,om,im,um,lm,dm,pm,fm,mm,gm,ym,bm,xm,wm,km,Sm,Sm,Nm,Cm,{kernelName:Cn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,a]=t,{filterSize:s,strides:i,pad:o}=n;return{x:()=>$m(e,r,a,s,i,o)}}},{kernelName:Fn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:a}=n,s=me(a,r.shape),i=se(hc(r.shape,s)[1]);return{x:()=>{const t=r.shape.slice();s.forEach((e=>{t[e]=1}));const n=Mu(e,t);return ou(uu(n,$c(r.shape,"float32")),i)}}}},{kernelName:Rn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const r=n,{axis:a}=r,[s,i]=t,o=Im(e,i,s,me(a,s.shape));return{x:()=>o.x()}}},{kernelName:Dn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>uu(e,wi(Gl(n,r),"float32")),b:()=>uu(e,wi(Ol(n,r),"float32"))}}},{kernelName:Mn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const r=t[0],{paddings:a}=n,s=a.map((e=>e[0]));return{x:()=>Bu(e,s,r.shape)}}},{kernelName:On,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=xl(n.shape,r.shape);return{a:()=>{const t=bl(n.shape,a);return t.length>0?Mu(oc(e,t),n.shape):e},b:()=>{const t=uu(e,nc(Dl(ou(n,r)))),s=bl(r.shape,a);return s.length>0?Mu(oc(t,s),r.shape):t}}}},{kernelName:zn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=xl(n.shape,r.shape);return{a:()=>{const t=uu(e,wi(r,"float32")),s=bl(n.shape,a);return s.length>0?Mu(oc(t,s),n.shape):t},b:()=>{const t=uu(e,wi(n,"float32")),s=bl(r.shape,a);return s.length>0?Mu(oc(t,s),r.shape):t}}}},{kernelName:Pn,gradFunc:e=>({x:()=>nc(e)})},{kernelName:Hn,inputsToSave:["indices"],gradFunc:(e,t)=>{const n=t[0];return{indices:()=>Cc(n.shape,"float32")}}},{kernelName:Gn,gradFunc:e=>({x:()=>kl(e)})},{kernelName:jn,saveAllInputs:!0,gradFunc:(e,t,n)=>{const{axis:r}=n;return Kh(e,r).map((e=>()=>e))}},_m,_m,{kernelName:Xn,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{const[n,r,a]=t,s=n,i=r,o=xl(s.shape,i.shape);return{a:()=>{const t=wi(i,"float32");let n=uu(e,uu(t,Kc(s,ic(t,mh(1)))));const r=bl(s.shape,o);return r.length>0&&(n=oc(n,r)),Mu(n,s.shape)},b:()=>{const t=Ol(s,0),n=vl(t,ql(s),kl(s));let r=uu(e,uu(a,n));const u=bl(i.shape,o);return u.length>0&&(r=oc(r,u)),Mu(r,i.shape)}}}},{kernelName:Yn,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{const[n,r]=t,a=Ol(n,0);return{x:()=>vl(a,e,uu(e,r)),alpha:()=>{let t=vl(a,kl(e),uu(e,n));const s=bl(r.shape,e.shape);return s.length>0&&(t=oc(t,s)),Mu(t,r.shape)}}}},{kernelName:er,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ou(e,nc(Dc(n)))}}},{kernelName:or,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,r=uu(Gl(n,6),Oh(n));return{x:()=>uu(e,wi(r,"float32"))}}},{kernelName:tr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>uu(e,wi(Oh(n),"float32"))}}},{kernelName:nr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Mu(e,n.shape)}}},{kernelName:sr,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[r]=t,a={dy:e,images:r};return{images:()=>ds.runKernel(ir,a,n)}}},{kernelName:rr,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[r]=t,a={dy:e,images:r};return{images:()=>ds.runKernel(ar,a,n)}}},{kernelName:ur,gradFunc:(e,t,n)=>{const{dims:r}=n,a=me(r,e.shape);return{x:()=>uh(e,a)}}},{kernelName:lr,gradFunc:e=>({x:()=>kl(e)})},{kernelName:cr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>nc(ou(e,uu(Kc(n,1.5),2)))}}},{kernelName:dr,inputsToSave:["condition"],gradFunc:(e,t)=>{const[n]=t;return{condition:()=>wi(kl(n),"float32"),t:()=>uu(e,wi(n,e.dtype)),e:()=>uu(e,wi(xc(n),e.dtype))}}},{kernelName:pr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Ol(n,mh(0)),r=mh(Vp),a=mh(Up),s=uu(e,a),i=uu(uu(e,r),$l(wi(n,"float32")));return vl(t,s,i)}}}},{kernelName:br,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>uu(e,uu(n,ic(mh(1),n)))}}},{kernelName:yr,gradFunc:e=>({x:()=>kl(e)})},{kernelName:mr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>uu(ll(wi(n,"float32")),e)}}},{kernelName:gr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>uu(cl(wi(n,"float32")),e)}}},{kernelName:fr,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{begin:a,size:s}=n,i=r.shape,[o,u]=xo(r,a,s),l=[];for(let t=0;t<e.rank;t++)l.push([o[t],i[t]-o[t]-u[t]]);return{x:()=>Wc(e,l)}}},{kernelName:Sr,outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r]=t,{dim:a}=n,s=uu(e,r);return{logits:()=>ic(s,uu(oc(s,[a],!0),r))}}},{kernelName:xr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>uu(e,Pu(n))}}},Em,Em,Am,Am,{kernelName:wr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ou(e,uu(Fh(wi(n,"float32")),2))}}},{kernelName:Er,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=mh(2);return{a:()=>uu(e,uu(a,ic(n,r))),b:()=>uu(e,uu(a,ic(r,n)))}}},{kernelName:Ar,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>uu(e,uu(wi(n,"float32"),2))}}},{kernelName:qr,gradFunc:e=>({x:()=>kl(e)})},{kernelName:Or,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=xl(n.shape,r.shape);return{a:()=>{let t=e;const r=bl(n.shape,a);return r.length>0&&(t=oc(t,r)),Mu(t,n.shape)},b:()=>{let t=e;const n=bl(r.shape,a);return n.length>0&&(t=oc(t,n)),Mu(nc(t),r.shape)}}}},{kernelName:vr,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,a=r.shape.slice(),{axis:s}=n;me(s,r.shape).forEach((e=>{a[e]=1}));const i=Mu(e,a),o=uu(i,$c(r.shape,"float32"));return{x:()=>o}}},{kernelName:Lr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ou(e,Dc(ll(n)))}}},{kernelName:zr,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>uu(ic(mh(1),Dc(n)),e)}}},{kernelName:Pr,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{reps:a}=n;return{x:()=>{let t=kl(r);if(1===r.rank)for(let n=0;n<a[0];++n)t=su(t,Bu(e,[n*r.shape[0]],[r.shape[0]]));else if(2===r.rank)for(let n=0;n<a[0];++n)for(let s=0;s<a[1];++s)t=su(t,Bu(e,[n*r.shape[0],s*r.shape[1]],[r.shape[0],r.shape[1]]));else if(3===r.rank)for(let n=0;n<a[0];++n)for(let s=0;s<a[1];++s)for(let i=0;i<a[2];++i)t=su(t,Bu(e,[n*r.shape[0],s*r.shape[1],i*r.shape[2]],[r.shape[0],r.shape[1],r.shape[2]]));else{if(4!==r.rank)throw new Error(`Gradient for tile operation is not implemented for rank-${r.rank} tensors yet.`);for(let n=0;n<a[0];++n)for(let s=0;s<a[1];++s)for(let i=0;i<a[2];++i)for(let o=0;o<a[3];++o)t=su(t,Bu(e,[n*r.shape[0],s*r.shape[1],i*r.shape[2],o*r.shape[3]],[r.shape[0],r.shape[1],r.shape[2],r.shape[3]]))}return t}}}},{kernelName:Vr,gradFunc:(e,t,n)=>{const r=n,{perm:a}=r,s=mc(a);return{x:()=>Ui(e,s)}}},{kernelName:Gr,gradFunc:(e,t,n)=>{const r=n,{axis:a}=r;return{value:()=>Mh(e,a)}}},{kernelName:Hr,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>function(e,t){const n=Nc(t,kl(t)),r=Ml(e,n);let a=Ll(t,mh(0,"int32"));const s=r.rank-a.rank;for(let e=0;e<s;++e)a=_l(a,e+1);a=bc(a,$c(r.shape,"bool"));const i=kl(r);return vl(a,r,i)}(e,n)}}},{kernelName:jr,gradFunc:e=>({x:()=>kl(e)})}];for(const e of Fm)sa(e);Wa().prototype.abs=function(){return this.throwIfDisposed(),lu(this)},Wa().prototype.acos=function(){return this.throwIfDisposed(),cu(this)},Wa().prototype.acosh=function(){return this.throwIfDisposed(),hu(this)},Wa().prototype.add=function(e){return this.throwIfDisposed(),su(this,e)},Wa().prototype.all=function(e,t){return this.throwIfDisposed(),pu(this,e,t)},Wa().prototype.any=function(e,t){return this.throwIfDisposed(),fu(this,e,t)},Wa().prototype.argMax=function(e){return this.throwIfDisposed(),mu(this,e)},Wa().prototype.argMin=function(e){return this.throwIfDisposed(),gu(this,e)},Wa().prototype.asScalar=function(){return this.throwIfDisposed(),te(1===this.size,(()=>"The array must have only 1 element.")),Mu(this,[])},Wa().prototype.asType=function(e){return this.throwIfDisposed(),wi(this,e)},Wa().prototype.as1D=function(){return this.throwIfDisposed(),Mu(this,[this.size])},Wa().prototype.as2D=function(e,t){return this.throwIfDisposed(),Mu(this,[e,t])},Wa().prototype.as3D=function(e,t,n){return this.throwIfDisposed(),Mu(this,[e,t,n])},Wa().prototype.as4D=function(e,t,n,r){return this.throwIfDisposed(),Mu(this,[e,t,n,r])},Wa().prototype.as5D=function(e,t,n,r,a){return this.throwIfDisposed(),Mu(this,[e,t,n,r,a])},Wa().prototype.asin=function(){return this.throwIfDisposed(),yu(this)},Wa().prototype.asinh=function(){return this.throwIfDisposed(),bu(this)},Wa().prototype.atan=function(){return this.throwIfDisposed(),xu(this)},Wa().prototype.atan2=function(e){return this.throwIfDisposed(),wu(this,e)},Wa().prototype.atanh=function(){return this.throwIfDisposed(),vu(this)},Wa().prototype.avgPool=function(e,t,n,r){return this.throwIfDisposed(),Ou(this,e,t,n,r)},Wa().prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),Uu(this,e,t)},Wa().prototype.batchNorm=function(e,t,n,r,a){return this.throwIfDisposed(),Gu(this,e,t,n,r,a)},Wa().prototype.broadcastTo=function(e){return this.throwIfDisposed(),Xu(this,e)},Wa().prototype.cast=function(e){return this.throwIfDisposed(),wi(this,e)},Wa().prototype.ceil=function(){return this.throwIfDisposed(),Yu(this)},Wa().prototype.clipByValue=function(e,t){return this.throwIfDisposed(),Zu(this,e,t)},Wa().prototype.concat=function(e,t){return this.throwIfDisposed(),e instanceof Ba&&(e=[e]),zu([this,...e],t)},Wa().prototype.conv1d=function(e,t,n,r,a,s){return this.throwIfDisposed(),rl(this,e,t,n,r,a,s)},Wa().prototype.conv2dTranspose=function(e,t,n,r,a){return this.throwIfDisposed(),sl(this,e,t,n,r,a)},Wa().prototype.conv2d=function(e,t,n,r,a,s){return this.throwIfDisposed(),nl(this,e,t,n,r,a,s)},Wa().prototype.cos=function(){return this.throwIfDisposed(),ll(this)},Wa().prototype.cosh=function(){return this.throwIfDisposed(),cl(this)},Wa().prototype.cumsum=function(e,t,n){return this.throwIfDisposed(),hl(this,e,t,n)},Wa().prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),pl(this,e,t)},Wa().prototype.depthwiseConv2d=function(e,t,n,r,a,s){return this.throwIfDisposed(),fl(this,e,t,n,r,a,s)},Wa().prototype.dilation2d=function(e,t,n,r,a){return this.throwIfDisposed(),gl(this,e,t,n,r,a)},Wa().prototype.divNoNan=function(e){return this.throwIfDisposed(),Il(this,e)},Wa().prototype.div=function(e){return this.throwIfDisposed(),ou(this,e)},Wa().prototype.dot=function(e){return this.throwIfDisposed(),Sl(this,e)},Wa().prototype.elu=function(){return this.throwIfDisposed(),Tl(this)},Wa().prototype.equal=function(e){return this.throwIfDisposed(),wl(this,e)},Wa().prototype.erf=function(){return this.throwIfDisposed(),Cl(this)},Wa().prototype.exp=function(){return this.throwIfDisposed(),$l(this)},Wa().prototype.expandDims=function(e){return this.throwIfDisposed(),_l(this,e)},Wa().prototype.expm1=function(){return this.throwIfDisposed(),El(this)},Wa().prototype.fft=function(){return this.throwIfDisposed(),Ch(this)},Wa().prototype.flatten=function(){return this.throwIfDisposed(),Mu(this,[this.size])},Wa().prototype.floor=function(){return this.throwIfDisposed(),Dl(this)},Wa().prototype.floorDiv=function(e){return this.throwIfDisposed(),iu(this,e)},Wa().prototype.gather=function(e,t){return this.throwIfDisposed(),Ml(this,e,t)},Wa().prototype.greaterEqual=function(e){return this.throwIfDisposed(),Ll(this,e)},Wa().prototype.greater=function(e){return this.throwIfDisposed(),Ol(this,e)},Wa().prototype.ifft=function(){return this.throwIfDisposed(),$h(this)},Wa().prototype.irfft=function(){return this.throwIfDisposed(),_h(this)},Wa().prototype.isFinite=function(){return this.throwIfDisposed(),Pl(this)},Wa().prototype.isInf=function(){return this.throwIfDisposed(),Bl(this)},Wa().prototype.isNaN=function(){return this.throwIfDisposed(),Wl(this)},Wa().prototype.leakyRelu=function(e){return this.throwIfDisposed(),Vl(this,e)},Wa().prototype.lessEqual=function(e){return this.throwIfDisposed(),Gl(this,e)},Wa().prototype.less=function(e){return this.throwIfDisposed(),Ul(this,e)},Wa().prototype.localResponseNormalization=function(e,t,n,r){return this.throwIfDisposed(),jl(this,e,t,n,r)},Wa().prototype.logSigmoid=function(){return this.throwIfDisposed(),ac(this)},Wa().prototype.logSoftmax=function(e){return this.throwIfDisposed(),uc(this,e)},Wa().prototype.logSumExp=function(e,t){return this.throwIfDisposed(),yc(this,e,t)},Wa().prototype.log=function(){return this.throwIfDisposed(),ql(this)},Wa().prototype.log1p=function(){return this.throwIfDisposed(),Kl(this)},Wa().prototype.logicalAnd=function(e){return this.throwIfDisposed(),bc(this,e)},Wa().prototype.logicalNot=function(){return this.throwIfDisposed(),xc(this)},Wa().prototype.logicalOr=function(e){return this.throwIfDisposed(),wc(this,e)},Wa().prototype.logicalXor=function(e){return this.throwIfDisposed(),vc(this,e)},Wa().prototype.matMul=function(e,t,n){return this.throwIfDisposed(),Wi(this,e,t,n)},Wa().prototype.maxPool=function(e,t,n,r){return this.throwIfDisposed(),kc(this,e,t,n,r)},Wa().prototype.max=function(e,t){return this.throwIfDisposed(),sc(this,e,t)},Wa().prototype.maximum=function(e){return this.throwIfDisposed(),Nc(this,e)},Wa().prototype.mean=function(e,t){return this.throwIfDisposed(),Tc(this,e,t)},Wa().prototype.min=function(e,t){return this.throwIfDisposed(),Ec(this,e,t)},Wa().prototype.minimum=function(e){return this.throwIfDisposed(),Ac(this,e)},Wa().prototype.mirrorPad=function(e,t){return this.throwIfDisposed(),Fc(this,e,t)},Wa().prototype.mod=function(e){return this.throwIfDisposed(),Rc(this,e)},Wa().prototype.mul=function(e){return this.throwIfDisposed(),uu(this,e)},Wa().prototype.neg=function(){return this.throwIfDisposed(),nc(this)},Wa().prototype.norm=function(e,t,n){return this.throwIfDisposed(),ed(this,e,t,n)},Wa().prototype.notEqual=function(e){return this.throwIfDisposed(),zc(this,e)},Wa().prototype.oneHot=function(e,t=1,n=0){return this.throwIfDisposed(),Vi(this,e,t,n)},Wa().prototype.onesLike=function(){return this.throwIfDisposed(),Pc(this)},Wa().prototype.pad=function(e,t){return this.throwIfDisposed(),Wc(this,e,t)},Wa().prototype.pool=function(e,t,n,r,a){return this.throwIfDisposed(),qc(this,e,t,n,r,a)},Wa().prototype.pow=function(e){return this.throwIfDisposed(),Kc(this,e)},Wa().prototype.prelu=function(e){return this.throwIfDisposed(),Xc(this,e)},Wa().prototype.prod=function(e,t){return this.throwIfDisposed(),Yc(this,e,t)},Wa().prototype.reciprocal=function(){return this.throwIfDisposed(),sh(this)},Wa().prototype.relu=function(){return this.throwIfDisposed(),ih(this)},Wa().prototype.relu6=function(){return this.throwIfDisposed(),oh(this)},Wa().prototype.reshapeAs=function(e){return this.throwIfDisposed(),Mu(this,e.shape)},Wa().prototype.reshape=function(e){return this.throwIfDisposed(),Mu(this,e)},Wa().prototype.resizeBilinear=function(e,t,n){return this.throwIfDisposed(),Bd(this,e,t,n)},Wa().prototype.resizeNearestNeighbor=function(e,t,n){return this.throwIfDisposed(),Wd(this,e,t,n)},Wa().prototype.reverse=function(e){return this.throwIfDisposed(),uh(this,e)},Wa().prototype.rfft=function(){return this.throwIfDisposed(),Ah(this)},Wa().prototype.round=function(){return this.throwIfDisposed(),ph(this)},Wa().prototype.rsqrt=function(){return this.throwIfDisposed(),fh(this)},Wa().prototype.selu=function(){return this.throwIfDisposed(),gh(this)},Wa().prototype.separableConv2d=function(e,t,n,r,a,s){return this.throwIfDisposed(),yh(this,e,t,n,r,a,s)},Wa().prototype.sigmoid=function(){return this.throwIfDisposed(),Pu(this)},Wa().prototype.sign=function(){return this.throwIfDisposed(),xh(this)},Wa().prototype.sin=function(){return this.throwIfDisposed(),wh(this)},Wa().prototype.sinh=function(){return this.throwIfDisposed(),vh(this)},Wa().prototype.slice=function(e,t){return this.throwIfDisposed(),Bu(this,e,t)},Wa().prototype.softmax=function(e){return this.throwIfDisposed(),Th(this,e)},Wa().prototype.softplus=function(){return this.throwIfDisposed(),rc(this)},Wa().prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),jc(this,e,t)},Wa().prototype.split=function(e,t){return this.throwIfDisposed(),Eh(this,e,t)},Wa().prototype.sqrt=function(){return this.throwIfDisposed(),Fh(this)},Wa().prototype.square=function(){return this.throwIfDisposed(),Dc(this)},Wa().prototype.squaredDifference=function(e){return this.throwIfDisposed(),Rh(this,e)},Wa().prototype.squeeze=function(e){return this.throwIfDisposed(),Dh(this,e)},Wa().prototype.stack=function(e,t){this.throwIfDisposed();const n=e instanceof Ba?[this,e]:[this,...e];return Mh(n,t)},Wa().prototype.step=function(e){return this.throwIfDisposed(),Oh(this,e)},Wa().prototype.stridedSlice=function(e,t,n,r,a,s,i,o){return this.throwIfDisposed(),Lh(this,e,t,n,r,a,s,i,o)},Wa().prototype.sub=function(e){return this.throwIfDisposed(),ic(this,e)},Wa().prototype.sum=function(e,t){return this.throwIfDisposed(),oc(this,e,t)},Wa().prototype.tan=function(){return this.throwIfDisposed(),zh(this)},Wa().prototype.tanh=function(){return this.throwIfDisposed(),Wu(this)},Wa().prototype.tile=function(e){return this.throwIfDisposed(),Al(this,e)},Wa().prototype.toBool=function(){return this.throwIfDisposed(),wi(this,"bool")},Wa().prototype.toFloat=function(){return this.throwIfDisposed(),wi(this,"float32")},Wa().prototype.toInt=function(){return this.throwIfDisposed(),wi(this,"int32")},Wa().prototype.topk=function(e,t){return this.throwIfDisposed(),Gh(this,e,t)},Wa().prototype.transpose=function(e){return this.throwIfDisposed(),Ui(this,e)},Wa().prototype.unique=function(e){return this.throwIfDisposed(),jh(this,e)},Wa().prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),qh(this,e,t)},Wa().prototype.unstack=function(e){return this.throwIfDisposed(),Kh(this,e)},Wa().prototype.where=function(e,t){return this.throwIfDisposed(),vl(e,this,t)},Wa().prototype.zerosLike=function(){return this.throwIfDisposed(),kl(this)};var Rm,Dm={};function Mm(){return null==Rm&&(Rm=ru().epsilon()),Rm}y(Dm,{maxNorm:()=>gg,minMaxNorm:()=>xg,nonNeg:()=>bg,unitNorm:()=>yg});var Om=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Om.prototype)}},Lm=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Lm.prototype)}},zm=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,zm.prototype)}},Pm=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Pm.prototype)}},Bm=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Bm.prototype)}};function Wm(e,t){if(Array.isArray(e)){let n=[];for(let r=0;r<t;r++)n=n.concat(e);return n}{const n=new Array(t);return n.fill(e),n}}function Vm(e,t){if(!e)throw new Bm(t)}function Um(e,t){let n=0;for(const r of e)r===t&&n++;return n}function Gm(e){return 1===e.length?e[0]:e}function Hm(e){return Array.isArray(e)?e:[e]}function jm(e){const t=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==t[0]?t:"private"+t}function qm(e){return e.length<=1||-1===e.indexOf("_")?e:e.replace(/[_]+(\w|$)/g,((e,t)=>t.toUpperCase()))}var Km={};function Xm(e){if(null==e)return null;const t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function Ym(e){if(null!=e&&"object"==typeof e)if(Array.isArray(e))e.forEach((e=>Ym(e)));else{const t=Object.keys(e);for(const n of t){const t=e[n];null!=t&&"object"==typeof t&&(Array.isArray(t)||"ndarray"!==t.type||"number"!=typeof t.value?Ym(t):e[n]=t.value)}}}function Zm(e,t={},n={},r="object",a=!1){if("string"==typeof e){const a=e;let s;if(a in n)s=n[a];else if(a in Km)s=Km[a];else if(s=t[a],null==s)throw new zm(`Unknown ${r}: ${e}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return s}{const s=e;if(null==s.className||null==s.config)throw new zm(`${r}: Improper config format: ${JSON.stringify(s)}.\n'className' and 'config' must set.`);const i=s.className;let o,u;if(i in n?[o,u]=n[i]:i in Km?[o,u]=Km.className:i in t&&([o,u]=t[i]),null==o)throw new zm(`Unknown ${r}: ${i}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=u){const e={};for(const t of Object.keys(Km))e[t]=Km[t];for(const t of Object.keys(n))e[t]=n[t];s.config.customObjects=e;const t=Object.assign({},Km);for(const e of Object.keys(n))Km[e]=n[e];Ym(s.config);const r=u(o,s.config,n,a);return Km=Object.assign({},t),r}{const e=Object.assign({},Km);for(const e of Object.keys(n))Km[e]=n[e];const t=new o(s.config);return Km=Object.assign({},e),t}}}function Jm(e,t){return-1*function(e,t){return e<t?-1:e>t?1:0}(e,t)}function Qm(e){if(null==e)return e;const t=[];for(const n of e)-1===t.indexOf(n)&&t.push(n);return t}function eg(e){if(null==e)throw new zm(`Invalid value in obj: ${JSON.stringify(e)}`);for(const t in e)if(e.hasOwnProperty(t))return!1;return!0}function tg(e,t,n){if(null!=n&&e.indexOf(n)<0)throw new zm(`${n} is not a valid ${t}.  Valid values are ${e} or null/undefined.`)}function ng(e,t,n=0,r=1/0){return Vm(n>=0),Vm(r>=n),Array.isArray(e)&&e.length>=n&&e.length<=r&&e.every((e=>typeof e===t))}function rg(e,t){Array.isArray(e)?(ca.assert(e.length>0,(()=>`${t} is unexpectedly an empty array.`)),e.forEach(((e,n)=>rg(e,`element ${n+1} of ${t}`)))):ca.assert(Number.isInteger(e)&&e>0,(()=>`Expected ${t} to be a positive integer, but got ${ag(e)}.`))}function ag(e){return null===e?"null":Array.isArray(e)?"["+e.map((e=>ag(e))).join(",")+"]":"string"==typeof e?`"${e}"`:`${e}`}function sg(e){return"relu"===e?"relu":"linear"===e?"linear":"elu"===e?"elu":null}function ig(e,t){return jo((()=>Fh(oc(uu(e,e),t,!0))))}var og=class extends vo.Serializable{getConfig(){return{}}},ug=class extends og{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return jo((()=>{const t=ig(e,this.axis),n=Zu(t,0,this.maxValue);return uu(e,ou(n,su(Mm(),t)))}))}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}};ug.className="MaxNorm",vo.registerClass(ug);var lg=class extends og{constructor(e){super(),this.defaultAxis=0,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return jo((()=>ou(e,su(Mm(),ig(e,this.axis)))))}getConfig(){return{axis:this.axis}}};lg.className="UnitNorm",vo.registerClass(lg);var cg=class extends og{apply(e){return ih(e)}};cg.className="NonNeg",vo.registerClass(cg);var hg=class extends og{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=e.minValue?e.minValue:this.defaultMinValue,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.rate=null!=e.rate?e.rate:this.defaultRate,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return jo((()=>{const t=ig(e,this.axis),n=su(uu(this.rate,Zu(t,this.minValue,this.maxValue)),uu(1-this.rate,t));return uu(e,ou(n,su(Mm(),t)))}))}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}};hg.className="MinMaxNorm",vo.registerClass(hg);var dg={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function pg(e){return Xm(e)}function fg(e,t={}){return Zm(e,vo.SerializationMap.getMap().classNameMap,t,"constraint")}function mg(e){return null==e?null:"string"==typeof e?fg({className:e in dg?dg[e]:e,config:{}}):e instanceof og?e:fg(e)}function gg(e){return new ug(e)}function yg(e){return new lg(e)}function bg(){return new cg}function xg(e){return new hg(e)}var wg={};y(wg,{constant:()=>Ty,glorotNormal:()=>Ry,glorotUniform:()=>Fy,heNormal:()=>Dy,heUniform:()=>My,identity:()=>Ey,leCunNormal:()=>Oy,leCunUniform:()=>Ly,ones:()=>Ny,orthogonal:()=>zy,randomNormal:()=>$y,randomUniform:()=>Cy,truncatedNormal:()=>_y,varianceScaling:()=>Ay,zeros:()=>Sy});var vg=["channelsFirst","channelsLast"],kg=["nearest","bilinear"],Ig=["valid","same","causal"],Sg=["max","avg"],Ng=["sum","mul","concat","ave"],Tg=new Map;function Cg(e){tg(vg,"DataFormat",e)}function $g(e){tg(Ig,"PaddingMode",e)}function _g(e){tg(Sg,"PoolMode",e)}var Eg=[];function Ag(e,t){Eg.push(e);try{const e=t();return Eg.pop(),e}catch(e){throw Eg.pop(),e}}function Fg(e){if(!Mg(e))throw new Error("Not a valid tensor name: '"+e+"'");return(0===Eg.length?"":Eg.join("/")+"/")+e}function Rg(e){if(!Mg(e))throw new Error("Not a valid tensor name: '"+e+"'");Tg.has(e)||Tg.set(e,0);const t=Tg.get(e);if(Tg.set(e,Tg.get(e)+1),t>0){const n=`${e}_${t}`;return Tg.set(n,1),n}return e}var Dg=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function Mg(e){return!!e.match(Dg)}function Og(e,t,n){null==t&&(t=0),null==n&&(n=e.length);let r=1;for(let a=t;a<n;++a)r*=e[a];return r}function Lg(e){if(0===e.length)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let n=0;n<e.length;n++){const r=e[n];r<t&&(t=r)}return t}function zg(e){if(0===e.length)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let n=0;n<e.length;n++){const r=e[n];r>t&&(t=r)}return t}function Pg(e,t){if(t<e)throw new zm(`end (${t}) < begin (${e}) is forbidden.`);const n=[];for(let r=e;r<t;++r)n.push(r);return n}function Bg(e,t){return wi(e,t)}function Wg(e,t=-1){const n=e.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),Mu(e,n)}function Vg(e,t,n){return jo((()=>{switch(e.rank){case 1:return kh(e,t,n);case 2:return Ih(e,[t,0],[n,e.shape[1]]);case 3:return Sh(e,[t,0,0],[n,e.shape[1],e.shape[2]]);case 4:return Nh(e,[t,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3]]);case 5:return Bu(e,[t,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return Bu(e,[t,0,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new zm(`sliceAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function Ug(e,t,n){return jo((()=>{switch(e.rank){case 1:return kh(e,t,n);case 2:return Ih(e,[0,t],[e.shape[0],n]);case 3:return Sh(e,[0,0,t],[e.shape[0],e.shape[1],n]);case 4:return Nh(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],n]);default:throw new zm(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function Gg(e,t,n,r){return jo((()=>{switch(e.rank){case 1:return kh(e,t,n);case 2:switch(r){case 1:return Vg(e,t,n);case 2:return Ug(e,t,n);default:throw new zm(`The axis is not within the rank of the tensor ${r}`)}case 3:switch(r){case 1:return Vg(e,t,n);case 2:return Sh(e,[0,t,0],[e.shape[0],n,e.shape[2]]);case 3:return Ug(e,t,n);default:throw new zm(`The axis is not within the rank of the tensor ${r}`)}case 4:switch(r){case 1:return Vg(e,t,n);case 2:return Nh(e,[0,t,0,0],[e.shape[0],n,e.shape[2],e.shape[3]]);case 3:return Nh(e,[0,0,t,0],[e.shape[0],e.shape[1],n,e.shape[3]]);case 4:return Ug(e,t,n);default:throw new zm(`The axis is not within the rank of the tensor ${r}`)}default:throw new zm(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function Hg(e,t=-1){let n;return t<0&&(n=e[0].rank,t=0!==n?n:0),t===e[0].rank&&(t=-1),zu(e,t)}function jg(e,t){switch(e.rank){case 1:return Ju([e,t]);case 2:return Qu([e,t],0);case 3:return el([e,t],0);case 4:return tl([e,t],0);default:throw new zm(`concatAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}function qg(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new zm(`The length of input n (${t.length}) does not match the number of dimensions in input x (${e.rank})`);return Al(e,t)}function Kg(e,t=0,n=1,r,a){return th(e,t,n,r,a)}function Xg(e,t,n,r){if(e.rank<2||t.rank<2)throw new Pm(`dot requires both inputs to be rank >= 2 but got x shape = ${e.shape} and y shape = ${t.shape}`);if(t.rank>=3&&e.shape.slice(-1)[0]!==t.shape.slice(-2)[0])throw new Pm(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${e.shape} and  y shape = ${t.shape}`);if(2===e.rank&&2===t.rank){const a=!1,s=!1;return ld.matMul({a:e,b:t,transposeA:a,transposeB:s,bias:r?Jg(e.rank,r,"channelsLast"):null,activation:n})}{const a=e.shape.slice(),s=a.pop();e=Mu(e,[-1,s]);const i=t.shape.slice(),o=i.pop(),u=i.pop(),l=[...i,o],c=Array.from({length:t.rank},((e,n)=>0===n?t.rank-2:n<=t.rank-2?n-1:n));t=Mu(Ui(t,c),[u,-1]);const h=[...a,...l],d=!1,p=!1;return Mu(ld.matMul({a:e,b:t,transposeA:d,transposeB:p,bias:r?Jg(e.rank,r,"channelsLast"):null,activation:n}),h)}}function Yg(e,t,n){return jo((()=>(t=Array.isArray(t)?Ph(t,"int32"):wi(t,"int32"),Ml(e,t,n))))}function Zg(e){return uu(e,e)}function Jg(e,t,n){const r=t.shape;if(1!==t.rank&&t.rank!==e)throw new zm(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${e}`);if(5===e){if("channelsFirst"===n)return 1===r.length?Mu(t,[1,r[0],1,1,1]):Mu(t,[1,r[3],r[0],r[1],r[2]]);if("channelsLast"===n)return 1===r.length?Mu(t,[1,1,1,1,r[0]]):Mu(t,[1].concat(r))}else if(4===e){if("channelsFirst"===n)return 1===r.length?Mu(t,[1,r[0],1,1]):Mu(t,[1,r[2],r[0],r[1]]);if("channelsLast"===n)return 1===r.length?Mu(t,[1,1,1,r[0]]):Mu(t,[1].concat(r))}else if(3===e){if("channelsFirst"===n)return 1===r.length?Mu(t,[1,r[0],1]):Mu(t,[1,r[1],r[0]]);if("channelsLast"===n)return 1===r.length?Mu(t,[1,1,r[0]]):Mu(t,[1].concat(r))}else if(e<3)return t;throw new zm(`Unsupported input rank by biasAdd: ${t.rank}`)}function Qg(e,t,n){return jo((()=>(null==n&&(n="channelsLast"),Cg(n),su(e,Jg(e.rank,t,n)))))}function ey(e,t,n,r){return jo((()=>sd(e,t,n,r)))}function ty(e,t,n=!1){return n?e():t()}var ny=["fanIn","fanOut","fanAvg"],ry=["normal","uniform","truncatedNormal"],ay=class extends vo.Serializable{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}},sy=class extends ay{apply(e,t){return Cc(e,t)}};sy.className="Zeros",vo.registerClass(sy);var iy=class extends ay{apply(e,t){return $c(e,t)}};iy.className="Ones",vo.registerClass(iy);var oy=class extends ay{constructor(e){if(super(),"object"!=typeof e)throw new zm(`Expected argument of type ConstantConfig but got ${e}`);if(void 0===e.value)throw new zm(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return jo((()=>uu(mh(this.value),$c(e,t))))}getConfig(){return{value:this.value}}};oy.className="Constant",vo.registerClass(oy);var uy=class extends ay{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return nh(e,this.minval,this.maxval,t)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}};uy.className="RandomUniform",vo.registerClass(uy);var ly=class extends ay{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new Pm(`randomNormal does not support dType ${t}.`);return Kg(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}};ly.className="RandomNormal",vo.registerClass(ly);var cy=class extends ay{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new Pm(`truncatedNormal does not support dType ${t}.`);return Hh(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}};cy.className="TruncatedNormal",vo.registerClass(cy);var hy=class extends ay{constructor(e){super(),this.gain=null!=e.gain?e.gain:1}apply(e,t){return jo((()=>{if(2!==e.length||e[0]!==e[1])throw new zm("Identity matrix initializer can only be used for 2D square matrices.");return uu(this.gain,Fl(e[0]))}))}getConfig(){return{gain:this.gain}}};hy.className="Identity",vo.registerClass(hy);var dy=class extends ay{constructor(e){if(super(),e.scale<0)throw new zm(`scale must be a positive float. Got: ${e.scale}`);var t;this.scale=null==e.scale?1:e.scale,this.mode=null==e.mode?"fanIn":e.mode,t=this.mode,tg(ny,"FanMode",t),this.distribution=null==e.distribution?"normal":e.distribution,function(e){tg(ry,"Distribution",e)}(this.distribution),this.seed=e.seed}apply(e,t){const n=function(e,t="channelsLast"){let n,r;if(Cg(t),2===e.length)n=e[0],r=e[1];else if(-1!==[3,4,5].indexOf(e.length)){if("channelsFirst"===t){const t=Og(e,2);n=e[1]*t,r=e[0]*t}else if("channelsLast"===t){const t=Og(e,0,e.length-2);n=e[e.length-2]*t,r=e[e.length-1]*t}}else{const t=Og(e);n=Math.sqrt(t),r=Math.sqrt(t)}return[n,r]}(e),r=n[0],a=n[1];let s=this.scale;if("fanIn"===this.mode?s/=Math.max(1,r):"fanOut"===this.mode?s/=Math.max(1,a):s/=Math.max(1,(r+a)/2),"normal"===this.distribution){const n=Math.sqrt(s);if("float32"!==(t=t||"float32")&&"int32"!==t)throw new Pm(`${this.getClassName()} does not support dType ${t}.`);return Hh(e,0,n,t,this.seed)}{const n=Math.sqrt(3*s);return nh(e,-n,n,t)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}};dy.className="VarianceScaling",vo.registerClass(dy);var py=class extends dy{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return dy.className}};py.className="GlorotUniform",vo.registerClass(py);var fy=class extends dy{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return dy.className}};fy.className="GlorotNormal",vo.registerClass(fy);var my=class extends dy{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return dy.className}};my.className="HeNormal",vo.registerClass(my);var gy=class extends dy{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return dy.className}};gy.className="HeUniform",vo.registerClass(gy);var yy=class extends dy{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return dy.className}};yy.className="LeCunNormal",vo.registerClass(yy);var by=class extends dy{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return dy.className}};by.className="LeCunNormal",vo.registerClass(by);var xy=class extends ay{constructor(e){if(super(),this.DEFAULT_GAIN=1,this.gain=null==e.gain?this.DEFAULT_GAIN:e.gain,this.seed=e.seed,null!=this.seed)throw new Pm("Random seed is not implemented for Orthogonal Initializer yet.")}apply(e,t){return jo((()=>{if(e.length<2)throw new Pm("Shape must be at least 2D.");e[0]*e[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${e[0]*e[1]}) elements: Slowness may result.`);const t=Kg(e[0]>e[1]?[e[1],e[0]]:e,0,1,"float32");let n=mp.gramSchmidt(t);return e[0]>e[1]&&(n=Ui(n)),uu(this.gain,n)}))}getConfig(){return{gain:this.gain,seed:this.seed}}};xy.className="Orthogonal",vo.registerClass(xy);var wy={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function vy(e,t={}){return Zm(e,vo.SerializationMap.getMap().classNameMap,t,"initializer")}function ky(e){return Xm(e)}function Iy(e){if("string"==typeof e){const t=e in wy?wy[e]:e;if("GlorotNormal"===t)return new fy;if("GlorotUniform"===t)return new py;if("HeNormal"===t)return new my;if("HeUniform"===t)return new gy;if("LeCunNormal"===t)return new yy;if("LeCunUniform"===t)return new by;{const e={};return e.className=t,e.config={},vy(e)}}return e instanceof ay?e:vy(e)}function Sy(){return new sy}function Ny(){return new iy}function Ty(e){return new oy(e)}function Cy(e){return new uy(e)}function $y(e){return new ly(e)}function _y(e){return new cy(e)}function Ey(e){return new hy(e)}function Ay(e){return new dy(e)}function Fy(e){return new py(e)}function Ry(e){return new fy(e)}function Dy(e){return new my(e)}function My(e){return new gy(e)}function Oy(e){return new yy(e)}function Ly(e){return new by(e)}function zy(e){return new xy(e)}var Py={};y(Py,{Layer:()=>rb,RNN:()=>Tw,RNNCell:()=>Cw,activation:()=>qv,add:()=>nk,alphaDropout:()=>jk,average:()=>rk,averagePooling1d:()=>dk,averagePooling2d:()=>mk,averagePooling3d:()=>bk,avgPool1d:()=>pk,avgPool2d:()=>gk,avgPool3d:()=>xk,avgPooling1d:()=>fk,avgPooling2d:()=>yk,avgPooling3d:()=>wk,batchNormalization:()=>lk,bidirectional:()=>zk,concatenate:()=>ak,conv1d:()=>zv,conv2d:()=>Pv,conv2dTranspose:()=>Bv,conv3d:()=>Wv,conv3dTranspose:()=>Vv,convLstm2d:()=>Dk,convLstm2dCell:()=>Mk,cropping2D:()=>Gv,dense:()=>Kv,depthwiseConv2d:()=>jv,dot:()=>uk,dropout:()=>Xv,elu:()=>Fv,embedding:()=>tk,flatten:()=>Zv,gaussianDropout:()=>Hk,gaussianNoise:()=>Gk,globalAveragePooling1d:()=>vk,globalAveragePooling2d:()=>kk,globalMaxPool1d:()=>Bk,globalMaxPool2d:()=>Wk,globalMaxPooling1d:()=>Ik,globalMaxPooling2d:()=>Sk,gru:()=>$k,gruCell:()=>_k,input:()=>Cx,inputLayer:()=>Av,layerNormalization:()=>ck,leakyReLU:()=>Dv,lstm:()=>Ek,lstmCell:()=>Ak,masking:()=>qk,maxPool1d:()=>Vk,maxPool2d:()=>Uk,maxPooling1d:()=>Nk,maxPooling2d:()=>Tk,maxPooling3d:()=>Ck,maximum:()=>sk,minimum:()=>ik,multiply:()=>ok,permute:()=>ek,prelu:()=>Mv,reLU:()=>Rv,repeatVector:()=>Jv,reshape:()=>Qv,rnn:()=>Ok,separableConv2d:()=>Uv,simpleRNN:()=>Fk,simpleRNNCell:()=>Rk,softmax:()=>Ov,spatialDropout1d:()=>Yv,stackedRNNCells:()=>Lk,thresholdedReLU:()=>Lv,timeDistributed:()=>Pk,upSampling2d:()=>Hv,zeroPadding2d:()=>hk});var By=0;function Wy(){return By++}var Vy={};function Uy(e=""){return e in Vy||(Vy[e]=0),Vy[e]+=1,e+Vy[e].toString()}function Gy(e){return Array.isArray(e)&&Array.isArray(e[0])}function Hy(e){return 0===e.length?[]:Array.isArray(e[0])?e:[e]}function jy(e){let t;if(Array.isArray(e)){if(1!==e.length)throw new zm(`Expected Tensor length to be 1; got ${e.length}`);t=e[0]}else t=e;return t}function qy(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(1===e.length)return(e=e)[0];throw new zm(`Expected exactly 1 Shape; got ${e.length}`)}return e}function Ky(e){let t=0;for(const n of e)0===n.shape.length?t+=1:t+=n.shape.reduce(((e,t)=>e*t));return t}var Xy=class{constructor(e,t="float32",n="Variable",r=!0,a=null){this.dtype=null==t?"float32":t,this.shape=e.shape,this.id=Wy(),n=null==n?"Variable":n,this.originalName=Fg(n),this.name=Rg(this.originalName),this.trainable_=r,this.constraint=a,this.val=Xh(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),function(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}(this.val,e),this.val.id!==e.id&&(this.val.assign(e),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}};function Yy(e){return e.map((e=>e.read()))}function Zy(e){e.forEach((e=>{e[0].write(e[1])}))}var Jy=class{constructor(e){this.dtype=e.dtype,this.shape=e.shape,null!=e.shape?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}},Qy=class{constructor(e,t,n,r,a,s,i){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=r,this.callArgs=a,this.outputTensorIndex=i,this.id=Wy(),null!=s&&(this.originalName=Fg(s),this.name=Rg(this.originalName)),this.rank=t.length}},eb=0,tb=class{constructor(e,t){this.callArgs=t,this.id=eb++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(const t of e.inboundLayers)null!=t&&t.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){const e=[];for(const t of this.inboundLayers)null!=t?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}},nb=0,rb=class extends vo.Serializable{constructor(e={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=nb++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){const e=this.getClassName();t=jm(e)+"_"+Uy(e)}if(this.name=t,this.trainable_=null==e.trainable||e.trainable,null!=e.inputShape||null!=e.batchInputShape){let t;if(null!=e.batchInputShape)t=e.batchInputShape;else if(null!=e.inputShape){let n=null;null!=e.batchSize&&(n=e.batchSize),t=[n].concat(e.inputShape)}this.batchInputShape=t;let n=e.dtype;null==n&&(n=e.inputDType),null==n&&(n="float32"),this.dtype=n}null!=e.weights?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(0===this.inboundNodes.length)throw new Lm(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new zm(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return Gm(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return Gm(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new Om(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(0===this.inboundNodes.length)throw new Om(`Layer ${this.name} is not connected, no input to return.`);return Gm(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new Om(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new Om(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return Gm(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map((e=>e()))}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach((t=>t.trainable=e)),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter((e=>e.trainable)):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter((e=>!e.trainable)).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){if(e=Hm(e),null==this.inputSpec||0===this.inputSpec.length)return;const t=Hm(this.inputSpec);if(e.length!==t.length)throw new zm(`Layer ${this.name} expects ${t.length} inputs, but it received ${e.length} input tensors. Input received: ${e}`);for(let n=0;n<e.length;n++){const r=e[n],a=t[n];if(null==a)continue;const s=r.rank;if(null!=a.ndim&&s!==a.ndim)throw new zm(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${a.ndim}, found ndim=${s}`);if(null!=a.maxNDim&&s>a.maxNDim)throw new zm(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${a.maxNDim}, found ndim=${s}`);if(null!=a.minNDim&&s<a.minNDim)throw new zm(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${a.minNDim}, found ndim=${s}.`);if(null!=a.dtype&&r.dtype!==a.dtype)throw new zm(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${a.dtype}, found dtype=${r.dtype}.`);if(a.axes){const e=r.shape;for(const t in a.axes){const r=Number(t),s=a.axes[t],i=r>=0?e[r]:e[e.length+r];if(null!=s&&-1===[s,null].indexOf(i))throw new zm(`Input ${n} is incompatible with layer ${this.name}: expected axis ${r} of input shape to have value ${s} but got shape ${e}.`)}}if(null!=a.shape)for(let e=0;e<a.shape.length;++e){const t=a.shape[e],s=r.shape[e];if(null!=t&&null!=s&&t!==s)throw new zm(`Input ${n} is incompatible with layer ${this.name}: expected shape=${a.shape}, found shape=${r.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){null!=this._callHook&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();const n=Hm(e);let r=!0;for(const e of n)if(!(e instanceof Qy)){r=!1;break}let a=!0;for(const e of n)if(e instanceof Qy){a=!1;break}if(r===a)throw new zm("Arguments to apply() must be all SymbolicTensors or all Tensors");return Ag(this.name,(()=>{if(!this.built){this.assertInputCompatibility(e);const t=[];for(const n of Hm(e))t.push(n.shape);this.build(Gm(t)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&a&&(this._refCount=1)}if(this.assertInputCompatibility(e),a){let r=this.call(e,t);const a=Hm(r),s=[];for(let e of a)-1!==n.indexOf(e)&&(e=e.clone()),s.push(e);if(r=Gm(s),null!=this.activityRegularizer)throw new Pm("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}{const n=function(e){e=Hm(e);const t=[];for(const n of e)t.push(n.shape);return Gm(t)}(e),r=this.computeOutputShape(n);let a;const s="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(e)?n[0]:n),a=null!=r&&r.length>0&&Array.isArray(r[0])?r.map(((n,r)=>new Qy(s,n,this,Hm(e),t,this.name,r))):new Qy(s,r,this,Hm(e),t,this.name),this.addInboundNode(e,a,null,null,n,r,t),this._refCount++,null!=this.activityRegularizer)throw new Pm("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return a}}))}warnOnIncompatibleInputShape(e){if(null!=this.batchInputShape)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach(((n,r)=>{null!=n&&null!=e[r]&&e[r]!==n&&(t=!0)})),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new Om(`The layer ${this.name} has never been called and thus has no defined output shape.`);const e=[];for(const t of this.inboundNodes){const n=JSON.stringify(t.outputShapes);-1===e.indexOf(n)&&e.push(n)}if(1===e.length){const e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&1===e.length?e[0]:e}throw new Om(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new Lm(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return Ky(this.weights)}build(e){this.built=!0}getWeights(e=!1){return Yy(e?this.trainableWeights:this.weights)}setWeights(e){jo((()=>{const t=this.weights;if(t.length!==e.length)throw new zm(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(0===t.length)return;const n=[],r=Yy(t);for(let a=0;a<r.length;++a){const s=r[a],i=t[a],o=e[a];if(!ca.arraysEqual(s.shape,o.shape))throw new zm(`Layer weight shape ${s.shape} not compatible with provided weight shape ${o.shape}`);n.push([i,o])}Zy(n)}))}addWeight(e,t,n,r,a,s,i){if(-1!==this._addedWeightNames.indexOf(e))throw new zm(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(r=Iy("zeros"));const o=r.apply(t,n),u=new Xy(o,n,e,s,i);return o.dispose(),null!=a&&this.addLoss((()=>a.apply(u.read()))),null==s&&(s=!0),s?this._trainableWeights.push(u):this._nonTrainableWeights.push(u),u}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){null==e||Array.isArray(e)&&0===e.length||(e=Hm(e),void 0!==this._losses&&null!==this._losses&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(null!=t){if(!Array.isArray(t))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);t.forEach((e=>{if(null!=e)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)}))}return null}return t}addInboundNode(e,t,n,r,a,s,i=null){const o=Hm(e);t=Hm(t),n=Hm(n),r=Hm(r),a=Hy(a),s=Hy(s);const u=[],l=[],c=[];for(const e of o)u.push(e.sourceLayer),l.push(e.nodeIndex),c.push(e.tensorIndex);new tb({outboundLayer:this,inboundLayers:u,nodeIndices:l,tensorIndices:c,inputTensors:o,outputTensors:t,inputMasks:n,outputMasks:r,inputShapes:a,outputShapes:s},i);for(let e=0;e<t.length;e++)t[e].sourceLayer=this,t[e].nodeIndex=this.inboundNodes.length-1,t[e].tensorIndex=e}getConfig(){const e={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(e.batchInputShape=this.batchInputShape),null!=this.dtype&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach((e=>e.dispose())),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return 0==--this._refCount&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}};function ab(e,t,n){if((null==t||null!=n&&n>0)&&(t=e.sourceLayer,n=e.nodeIndex),0===t.inboundNodes.length)return[e];{const e=t.inboundNodes[n];if(0===e.inboundLayers.length)return e.inputTensors;{const t=[];for(let n=0;n<e.inboundLayers.length;n++){const r=ab(e.inputTensors[n],e.inboundLayers[n],e.nodeIndices[n]);for(const e of r)-1===t.indexOf(e)&&t.push(e)}return t}}}var sb,ib,ob=class extends rb{constructor(e){if(super({dtype:e.dtype,name:null!=e.name?e.name:Uy("input").toString()}),null==e.batchSize&&(e.batchSize=null),null==e.sparse&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,null!=e.inputShape&&null!=e.batchInputShape)throw new zm("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(null==t){if(null==e.inputShape)throw new zm("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(null!=e.batchSize)throw new zm("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];const r=new Qy(this.dtype,this.batchInputShape,this,[],{},this.name);r.nodeIndex=0,r.tensorIndex=0,new tb({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[r],outputTensors:[r],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new zm(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}};function ub(e){if(null==e.batchShape&&null==e.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=e.batchShape&&null!=e.shape)throw new zm("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;null!=e.shape&&null==t&&(t=[null].concat(e.shape));let n=e.dtype;return null==n&&(n="float32"),new ob({batchInputShape:t,name:e.name,dtype:n,sparse:e.sparse}).inboundNodes[0].outputTensors[0]}async function lb(e){if(null==e)return;const t=[],n=[],r=[];for(const a in e){const s=e[a];if("number"!=typeof s){const e=s;t.push(e.data()),n.push(a),r.push(e)}}if(t.length>0){const a=await Promise.all(t);for(let t=0;t<a.length;++t)e[n[t]]=a[t][0];qo(r)}}function cb(e){if(null!=e)for(const t in e){const n=e[t];"number"!=typeof n&&n.dispose()}}ob.className="InputLayer",vo.registerClass(ob),(ib=sb||(sb={}))[ib.SILENT=0]="SILENT",ib[ib.VERBOSE=1]="VERBOSE";var hb=class{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}},db=class{constructor(e,t=10){null==e&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(const t of this.callbacks)t.setParams(e)}setModel(e){for(const t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainEnd(e)}},pb=class extends hb{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){null==t&&(t={});const n=null==t.size?0:t.size;this.seen+=n;for(const e in t){const r=t[e];if("number"==typeof r)this.totals.hasOwnProperty(e)||(this.totals[e]=0),this.totals[e]=this.totals[e]+r*n;else{let t;e in this.totals?t=this.totals[e]:this.totals[e]=0;const a=jo((()=>su(this.totals[e],uu(r,n))));this.totals[e]=a,null!=t&&t.dispose()}}}async onEpochEnd(e,t){if(null!=t)for(const e of this.params.metrics)null!=this.totals[e]&&("number"==typeof this.totals[e]?t[e]=this.totals[e]/this.seen:jo((()=>{const n=uu(ou(1,this.seen),this.totals[e]);t[e]=n,this.totals[e].dispose(),Ko(t[e])})))}},fb=class extends hb{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){null==t&&(t={}),this.epoch.push(e);for(const e in t)null==this.history[e]&&(this.history[e]=[]),this.history[e].push(t[e])}async syncData(){const e=[],t=[],n=[];for(const r in this.history){const a=this.history[r];for(let s=0;s<a.length;++s)if("number"!=typeof a[s]){const i=a[s];e.push(i.data()),t.push(r),n.push(s)}}const r=await Promise.all(e);for(let e=0;e<r.length;++e)this.history[t[e]][n[e]].dispose(),this.history[t[e]][n[e]]=r[e][0]}},mb=class extends hb{constructor(e,t){if(super(),this.currentEpoch=0,this.yieldEvery=t||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=e.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");ca.isNumber(this.yieldEvery)&&(this.maybeWait=function(e,t){let n,r=ca.now();return(...a)=>{const s=ca.now();return s-r<t||(r=s,n=e(...a)),n}}(this.maybeWait.bind(this),this.yieldEvery)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){const r=[];null!=this.yield&&(await lb(n),r.push(this.yield(e,t,n))),r.push(Ep()),await Promise.all(r)}async onEpochBegin(e,t){this.currentEpoch=e,null!=this.epochBegin&&(await lb(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){const n=[];null!=this.epochEnd&&(await lb(t),n.push(this.epochEnd(e,t))),"epoch"===this.yieldEvery&&n.push(Ep()),await Promise.all(n)}async onBatchBegin(e,t){null!=this.batchBegin&&(await lb(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){const n=[];null!=this.batchEnd&&(await lb(t),n.push(this.batchEnd(e,t))),"batch"===this.yieldEvery?n.push(Ep()):ca.isNumber(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){null!=this.trainBegin&&(await lb(e),await this.trainBegin(e))}async onTrainEnd(e){null!=this.trainEnd&&(await lb(e),await this.trainEnd(e))}};function gb(e,t){return null==e&&(e={}),e instanceof hb?[e]:Array.isArray(e)&&e[0]instanceof hb?e:Hm(e).map((e=>new mb(e,t)))}var yb=class{constructor(){}static registerCallbackConstructor(e,t){ca.assert(e>=0&&Number.isInteger(e),(()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`)),yb.checkForDuplicate(t),null==yb.constructors[e]&&(yb.constructors[e]=[]),yb.constructors[e].push(t)}static checkForDuplicate(e){for(const t in yb.constructors)yb.constructors[+t].forEach((t=>{if(t===e)throw new zm("Duplicate callback constructor.")}))}static clear(){yb.constructors={}}static createCallbacks(e){const t=[];for(const n in yb.constructors){const r=+n;e>=r&&t.push(...yb.constructors[r])}return t.map((e=>new e))}};function bb(e,t,n,r,a,s,i,o,u){const l=new fb,c=[new pb,...yb.createCallbacks(t)];null!=e&&c.push(...e),c.push(l);const h=new db(c);return h.setParams({epochs:n,initialEpoch:r,samples:a,steps:s,batchSize:i,verbose:t,doValidation:o,metrics:u}),{callbackList:h,history:l}}function xb(e,t={},n=!1){return Zm(e,vo.SerializationMap.getMap().classNameMap,t,"layer",n)}function wb(e,t){return jo((()=>{"float32"!==e.dtype&&(e=wi(e,"float32"));const n=oc(Zg(e),t,!0),r=Rl(n.shape,Mm()),a=Fh(Nc(n,r));return ou(e,a)}))}function vb(e,t){return jo((()=>Tc(Zg(ic(t,e)),-1)))}function kb(e,t){return jo((()=>Tc(lu(ic(t,e)),-1)))}function Ib(e,t){return jo((()=>{const n=ic(e,t),r=Zu(lu(e),Mm(),Number.MAX_VALUE),a=lu(ou(n,r));return uu(100,Tc(a,-1))}))}function Sb(e,t,n=!1){return jo((()=>{if(n)t=Th(t);else{const e=oc(t,t.shape.length-1,!0);t=ou(t,e)}return t=Zu(t,Mm(),1-Mm()),nc(oc(uu(wi(e,"float32"),ql(t)),t.shape.length-1))}))}function Nb(e,t,n=!1){return jo((()=>{const r=wi(Dl(function(e){const t=[Og(e.shape)];return Mu(e,t)}(e)),"int32"),a=(t=Zu(t,Mm(),1-Mm())).shape;return Sb(Mu(Vi(r,a[a.length-1]),a),t,n)}))}function Tb(e,t){return jo((()=>{let n;return n=Zu(t,Mm(),1-Mm()),n=ql(ou(n,ic(1,n))),Tc(function(e,t){if(!ca.arraysEqual(e.shape,t.shape))throw new zm(`logits and labels must have the same shape, but got shapes ${JSON.stringify(e.shape)} and ${JSON.stringify(t.shape)}`);return jo((()=>{const n=ih(t),r=nc(lu(t));return su(ic(n,uu(t,e)),Kl($l(r)))}))}(e,n),-1)}))}function Cb(e,t){return jo((()=>{const n=wb(e,-1),r=wb(t,-1),a=uu(n,r);return nc(oc(a,-1))}))}yb.constructors={};var $b={meanSquaredError:vb,meanAbsoluteError:kb,meanAbsolutePercentageError:Ib,meanSquaredLogarithmicError:function(e,t){return jo((()=>{const n=Zu(t,Mm(),Number.MAX_VALUE),r=ql(su(1,n)),a=Zu(e,Mm(),Number.MAX_VALUE),s=ql(su(1,a));return Tc(Zg(ic(r,s)),-1)}))},squaredHinge:function(e,t){return jo((()=>{const n=Nc(0,ic(1,uu(e,t)));return Tc(Zg(n),-1)}))},hinge:function(e,t){return jo((()=>{const n=Nc(0,ic(1,uu(e,t)));return Tc(n,-1)}))},categoricalHinge:function(e,t){return jo((()=>{const n=oc(uu(e,t),-1),r=sc(uu(ic(1,e),t),-1);return Nc(0,su(1,ic(r,n)))}))},logcosh:function(e,t){return jo((()=>{const n=Math.log(2),r=ic(t,e),a=ic(su(r,rc(uu(-2,r))),n);return Tc(a,-1)}))},categoricalCrossentropy:Sb,sparseCategoricalCrossentropy:Nb,binaryCrossentropy:Tb,kullbackLeiblerDivergence:function(e,t){return jo((()=>{const n=Zu(e,Mm(),1),r=Zu(t,Mm(),1);return oc(uu(e,ql(ou(n,r))),-1)}))},poisson:function(e,t){return jo((()=>{const n=ql(su(Mm(),t));return Tc(ic(t,uu(e,n)),-1)}))},cosineProximity:Cb};function _b(e){if("string"==typeof e){if(e in $b)return $b[e];let t=`Unknown loss ${e}`;throw e.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${e}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new zm(t)}return e}function Eb(e,t){return jo((()=>{const n=uu(.5,Pc(t)),r=Bg(Ol(t,n),e.dtype);return Tc(wl(e,r),-1)}))}function Ab(e,t){return jo((()=>Bg(wl(mu(e,-1),mu(t,-1)),"float32")))}function Fb(e,t){return jo((()=>wi(oc(bc(wl(e,1),wl(t,1))),"float32")))}function Rb(e,t){return jo((()=>{const n=Fb(e,t),r=function(e,t){return jo((()=>wi(oc(bc(wl(e,0),wl(t,1))),"float32")))}(e,t),a=su(n,r);return wi(vl(Ol(a,0),ou(n,a),0),"float32")}))}function Db(e,t){return Tb(e,t)}function Mb(e,t){return e.rank===t.rank&&(e=Dh(e,[e.rank-1])),(t=mu(t,-1)).dtype!==e.dtype&&(t=wi(t,e.dtype)),wi(wl(e,t),"float32")}var Ob=Sb,Lb=Nb,zb={binaryAccuracy:Eb,categoricalAccuracy:Ab,precision:Rb,categoricalCrossentropy:Ob,sparseCategoricalCrossentropy:Lb,mse:vb,MSE:vb,mae:kb,MAE:kb,mape:Ib,MAPE:Ib,cosine:Cb};function Pb(e){if("string"==typeof e&&e in zb)return zb[e];if("string"!=typeof e&&null!=e)return e;throw new zm(`Unknown metric ${e}`)}function Bb(e){if(Vm(null!==e,`Unknown LossOrMetricFn ${e}`),"string"==typeof e)return e;{let t;for(const n of Object.keys($b))if($b[n]===e){t=n;break}if(void 0!==t)return t;for(const n of Object.keys(zb))if(zb[n]===e){t=n;break}return void 0!==t?t:e.name}}function Wb(e,t,n=!1){if(null==e||"object"!=typeof e||Object.getPrototypeOf(e)!==Object.prototype||!Vb(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const n=JSON.stringify(e);n.length>1048576&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= 1048576.`)}}function Vb(e){if(null===e)return!0;if("object"==typeof e){if(Object.getPrototypeOf(e)===Object.prototype){const t=Object.keys(e);for(const n of t){if("string"!=typeof n)return!1;if(!Vb(e[n]))return!1}return!0}if(Array.isArray(e)){for(const t of e)if(!Vb(t))return!1;return!0}return!1}{const t=typeof e;return"string"===t||"number"===t||"boolean"===t}}function Ub(e,t,n=console.log){let r="";for(let n=0;n<e.length;++n)n>0&&(r=r.slice(0,r.length-1)+" "),r+=e[n],r=r.slice(0,t[n]),r+=" ".repeat(t[n]-r.length);n(r)}function Gb(e,t,n){let r;try{r=JSON.stringify(e.outputShape)}catch(e){r="multiple"}Ub([`${e.name} (${e.getClassName()})`,r,e.countParams().toString()],t,n)}function Hb(e,t,n,r){let a;try{a=JSON.stringify(e.outputShape)}catch(e){a="multiple"}const s=[];for(const t of e.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(t)))for(let e=0;e<t.inboundLayers.length;++e){const n=t.inboundLayers[e].name,r=t.nodeIndices[e],a=t.tensorIndices[e];s.push(`${n}[${r}][${a}]`)}const i=e.name,o=e.getClassName(),u=0===s.length?"":s[0];Ub([`${i} (${o})`,a,e.countParams().toString(),u],t,r);for(let e=1;e<s.length;++e)Ub(["","","",s[e]],t,r)}function jb(e,t,n){return("inboundNodes"===e||"outputLayers"===e||"inputLayers"===e)&&0===t&&"string"==typeof n}function qb(e,t){if(null===e)return null;if("string"==typeof e)return qm(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const n=[],r=e.length;for(let a=0;a<r;++a){const r=e[a];jb(t,a,r)?n.push(r):n.push(qb(r,t))}return n}{const t={};for(const n of Object.keys(e)){const r=e[n];if("name"===n&&"string"==typeof r)t[n]=r;else{const e=qm(n);t[e]=qb(r,e)}}return t}}function Kb(e,t){if(null==e)return null;if("string"==typeof e)return jm(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const n=[],r=e.length;for(let a=0;a<r;++a){const r=e[a];jb(t,a,r)?n.push(r):n.push(Kb(r,t))}return n}{const t={};for(const n of Object.keys(e)){const r=e[n];t[jm(n)]="name"!==n&&"className"!==n||"string"!=typeof r?Kb(r,n):r}return t}}var Xb="3.8.0",Yb=class{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof Yb)for(const t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(null==e)return;for(const t of e)this.add(t.key,t.value)}}add(e,t,n){if(null!=this.id2Value[e.id])throw new zm(`Duplicate key: name=${e.name}, id=${e.id}`);return this.id2Value[e.id]=function(e,t){if(null==e.dtype||e.dtype===t.dtype)return t;try{return wi(t,e.dtype)}catch(n){throw new zm(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${e.name}' (${e.dtype}).`)}}(e,t),this.name2Id[e.name]=e.id,null!=n&&(this.id2Mask[e.id]=n),this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return null!=this.id2Value[e.id]}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof Qy){if(null==this.id2Value[e.id])throw new zm(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}{const t=this.name2Id[e];if(null==t)throw new zm(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof Qy){if(null==this.id2Value[e.id])throw new zm(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}{const t=this.name2Id[e];if(null==t)throw new zm(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){null!=this.id2Mask&&qo(this.id2Mask)}},Zb={},Jb={};function Qb(e,t,n,r){const a=null!=n&&n.training,s=Array.isArray(e),i=s?e:[e],o=i.map((e=>e.name)),u=[],l=t.names();for(const e of o)-1!==l.indexOf(e)?u.push(t.getValue(e)):u.push(null);null!=r&&(r.maxNumTensors=-1/0,r.minNumTensors=1/0);const c=o.join(",")+"|"+t.names().join(",");let h,d;if(null==Zb[c]){const e=function(e,t){ca.assert(null!=e&&e.length>0,(()=>"Expected at least one fetch, got none"));let n=[],r={};if(1===e.length){const a=tx(e[0],t);n=a.sorted,r=a.recipientMap}else{const a=new Set;for(const s of e){const{sorted:e,recipientMap:i}=tx(s,t);for(const t of e)a.has(t.name)||(n.push(t),a.add(t.name));for(const e in i)null==r[e]&&(r[e]=new Set),i[e].forEach((t=>r[e].add(t)))}}return{sorted:n,recipientCounts:ex(r)}}(i,t);h=e.sorted,d=e.recipientCounts,Zb[c]=h,Jb[c]=d}h=Zb[c],d={},a||Object.assign(d,Jb[c]);const p=new Yb(t);for(let e=0;e<h.length;++e){if(null!=r){const e=Go().numTensors;e>r.maxNumTensors&&(r.maxNumTensors=e),e<r.minNumTensors&&(r.minNumTensors=e)}const s=h[e],i=s.sourceLayer;if(i instanceof ob)continue;const l=[],c=[],f=[];let m=!1;for(const e of s.inputs){const n=p.getValue(e),r=p.getMask(e);l.push(n),c.push(r),null!=r&&(m=!0),a||(d[e.name]--,0!==d[e.name]||t.hasKey(e)||-1!==o.indexOf(e.name)||n.isDisposed||!0===e.sourceLayer.stateful||f.push(n))}m&&((n=n||{}).mask=c[0]);const g=Hm(i.apply(l,n));let y=null;i.supportsMasking&&(y=i.computeMask(l,c));const b=nx(s),x=Array.isArray(b)?b:[b];for(let e=0;e<x.length;++e){p.hasKey(x[e])||p.add(x[e],g[e],Array.isArray(y)?y[0]:y);const t=o.indexOf(x[e].name);-1!==t&&(u[t]=g[e])}a||qo(f)}return p.disposeMasks(),s?u:u[0]}function ex(e){const t={};for(const n in e)t[n]=e[n].size;return t}function tx(e,t){const n=new Set,r=[],a={};for(const e of t.names())n.add(e);const s=[],i=[];for(s.push(e);s.length>0;){const e=s[s.length-1];if(n.has(e.name)){s.pop();continue}const t=i[i.length-1]===s.length-1;if(0===e.inputs.length||t)s.pop(),r.push(e),n.add(e.name),t&&i.pop();else{i.push(s.length-1);for(const t of e.inputs)null==a[t.name]&&(a[t.name]=new Set),a[t.name].add(e.name),n.has(t.name)||s.push(t)}}return{sorted:r,recipientMap:a}}function nx(e){let t;if(1===e.sourceLayer.inboundNodes.length)t=e.sourceLayer.output;else{let n=null;for(let t=0;t<e.sourceLayer.inboundNodes.length;++t)for(const r of e.sourceLayer.inboundNodes[t].outputTensors)if(r.id===e.id){n=t;break}t=e.sourceLayer.getOutputAt(n)}return t}var rx=class extends rb{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,null==this.name){const e=this.getClassName().toLowerCase();this.name=Uy(e)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],Qm(this.inputs).length!==this.inputs.length)throw new zm(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map((e=>e.name))}`);Qm(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map((e=>e.name))}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const e of this.outputs){const t=e.sourceLayer,n=e.nodeIndex,r=e.tensorIndex;this.outputLayers.push(t),this.outputLayersNodeIndices.push(n),this.outputLayersTensorIndices.push(r)}for(const e of this.inputs){const t=e.sourceLayer,n=e.nodeIndex,r=e.tensorIndex;Vm(0===n,"input layer has >1 nodes"),Vm(0===r,"input layer has >1 tensors"),this.inputLayers.push(t),this.inputLayersNodeIndices.push(n),this.inputLayersTensorIndices.push(r)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let t=0;t<this.inputLayers.length;t++){const n=this.inputLayers[t];if(!(n instanceof ob))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${t} (0-based) originates from layer type ${n.getClassName()}.`);this.inputNames.push(n.name),this.feedInputShapes.push(n.batchInputShape),this.feedInputNames.push(n.name)}for(const e of this.outputLayers)this.outputNames.push(e.name);this.internalInputShapes=this.inputs.map((e=>e.shape)),this.internalOutputShapes=this.outputs.map((e=>e.shape));const t={},n={},r={},a={},s={},i=[],o=(e,t,n,r,a,u)=>{null!=r&&null!=a&&null!=u||(r=e.sourceLayer,a=e.nodeIndex,u=e.tensorIndex);const l=r.inboundNodes[a];if(-1!==n.indexOf(l))throw new Lm(`The tensor ${e.name} at layer "${r.name}" is part of a cycle.`);if(-1!==t.indexOf(l))return;this.containerNodes.add(rx.nodeKey(r,a)),r.id in s||(s[r.id]=Object.keys(s).length),-1===n.indexOf(l)&&n.push(l);const c=l.inboundLayers.length;for(let e=0;e<c;e++){const r=l.inputTensors[e],a=l.inboundLayers[e],s=l.nodeIndices[e],i=l.tensorIndices[e];o(r,t,n,a,s,i)}for(t.push(l);n.indexOf(l)>=0;)n.splice(n.indexOf(l),1);i.push(l)},u=[],l=[];for(const e of this.outputs)o(e,u,l);const c=i.slice().reverse();for(const e of c){n[e.id]=e,e.id in t||(t[e.id]=0);let s=t[e.id];const i=null==r[e.outboundLayer.id]?0:r[e.outboundLayer.id];s=Math.max(s,i),r[e.outboundLayer.id]=s,a[e.outboundLayer.id]=e.outboundLayer,t[e.id]=s;for(let r=0;r<e.inboundLayers.length;r++){const a=e.inboundLayers[r],i=e.nodeIndices[r],o=a.inboundNodes[i],u=null==t[o.id]?0:t[o.id];t[o.id]=Math.max(s+1,u),n[o.id]=o}}const h={};for(const e in t){const r=t[e];r in h||(h[r]=[]),h[r].push(n[e])}const d={};for(const e in r){const t=r[e];t in d||(d[t]=[]),d[t].push(a[e])}let p=Object.keys(d).map((e=>parseInt(e,10))).sort(Jm);this.layers=[];for(const e of p){const t=d[e];t.sort(((e,t)=>{const n=s[e.id],r=s[t.id];return n<r?-1:n>r?1:0}));for(const e of t)e instanceof rx&&this.internalContainerRefs.push(e),this.layers.push(e)}this.layersByDepth=d,p=Object.keys(h).map((e=>parseInt(e,10))).sort(Jm);const f=this.inputs.slice(),m=[];for(const e of p)for(const t of h[e]){const e=t.outboundLayer;if(null!=e){for(const n of t.inputTensors)if(-1===f.indexOf(n))throw new Lm(`Graph disconnected: cannot obtain value for tensor ${n} at layer "${e.name}". The following previous layers were accessed without issue: ${m}`);for(const e of t.outputTensors)f.push(e);m.push(e.name)}}this.nodesByDepth=h;const g=this.layers.map((e=>e.name));for(const e of g){const t=g.filter((t=>t===e)).length;if(1!==t)throw new Lm(`The name "${e}" is used ${t} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(g))}this.outboundNodes=[],this.inboundNodes=[],new tb({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map((e=>null)),outputMasks:this.outputs.map((e=>null)),inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs.map((e=>e.shape))}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const e={refCountAfterDispose:null,numDisposedVariables:0};if(0==--this._refCount){for(const t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(const t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach((t=>{t._trainableWeights.forEach((t=>t.trainable=e))})),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new zm("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(const t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.layers)t.push(...e.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){const n={};let r=0;for(const e of this.layers)for(const t of e.weights){if(null!=n[t.originalName])throw new zm(`Duplicate weight name: ${t.originalName}`);n[t.originalName]=t,r++}const a=[];for(const r in e){let s=r;if(null==n[r]){const e=r.split("/");s=e.slice(0,-2).concat([e[e.length-1]]).join("/")}if(null!=n[s])a.push([n[s],e[r]]);else if(t)throw new zm(`Provided weight data has no target variable: ${r}`);delete n[s]}if(t){const e=[];for(const t in n)e.push(t);if(e.length>0)throw new zm(`${e.length} of ${r} weights are not set: ${e}`)}Zy(a)}updatedConfig(){const e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion=`tfjs-layers ${Xb}`,t.backend="TensorFlow.js",t}toJSON(e,t=!0){const n=Kb(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return jo((()=>{e=Hm(e);const n=new Yb;for(let t=0;t<this.inputs.length;++t)n.add(this.inputs[t],e[t]);return Qb(this.outputs,n,t)}))}computeMask(e,t){return jo((()=>{let n;return e=Hm(e),n=null==t?Wm(null,e.length):Hm(t),this.runInternalGraph(e,n)[1]}))}computeOutputShape(e){const t=Hy(e);if(t.length!==this.inputLayers.length)throw new zm(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);const n={};for(let e=0;e<t.length;e++){const r=this.inputLayers[e],a=t[e];n[r.name+"_0_0"]=a}const r=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(Jm);if(r.length>1)for(const e of r){const t=this.nodesByDepth[e];for(const e of t){const t=e.outboundLayer;if(-1!==this.inputLayers.map((e=>e.id)).indexOf(t.id))continue;const r=[];for(let t=0;t<e.inboundLayers.length;t++){const a=e.inboundLayers[t],s=e.nodeIndices[t],i=e.tensorIndices[t],o=n[`${a.name}_${s}_${i}`];r.push(o)}const a=Hy(t.computeOutputShape(Gm(r))),s=t.inboundNodes.indexOf(e);for(let e=0;e<a.length;e++)n[`${t.name}_${s}_${e}`]=a[e]}}const a=[],s=[];for(let e=0;e<this.outputLayers.length;e++){const t=this.outputLayers[e],n=this.outputLayersNodeIndices[e],r=this.outputLayersTensorIndices[e],a=`${t.name}_${n}_${r}`;s.push(a)}for(let e=0;e<s.length;e++){const t=s[e];Vm(t in n),a.push(n[t])}return Gm(a)}runInternalGraph(e,t){null==t&&(t=Wm(null,e.length));const n={};for(let r=0;r<this.inputs.length;++r){const a=this.inputs[r],s=e[r],i=t[r];n[a.id]=[s,i]}const r=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(Jm);for(const e of r){const t=this.nodesByDepth[e];for(const e of t){const t=e.outboundLayer,r=e.inputTensors,a=e.outputTensors,s=new Array;for(const e of r)e.id in n&&s.push(n[e.id]);if(s.length===r.length){let r,i,o,u,l={};if(null!=e.callArgs&&(l=e.callArgs),1===s.length){const[e,n]=s[0];null==l.mask&&(l.mask=n),o=Hm(t.call(e,l)),u=Hm(t.computeMask(e,n)),r=[e],i=[n]}else r=s.map((e=>e[0])),i=s.map((e=>e[1])),null==l.mask&&(l.mask=i),o=Hm(t.call(r,l)),u=Hm(t.computeMask(r,i));if(t.activityRegularizer)throw new Pm("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let e=0;e<a.length;++e){const t=a[e],r=o[e],s=u[e];n[t.id]=[r,s]}}}}const a=[],s=[],i=[];for(const e of this.outputs){Vm(e.id in n,`Could not compute output ${e.name} : ${e.id}`);const[t,r]=n[e.id];i.push(t.shape),a.push(t),s.push(r)}return[a,s,i]}buildNodeConversionMap(e){const t={};let n;for(const e of this.layers){n=e instanceof rx?1:0;for(let r=0;r<e.inboundNodes.length;r++){const a=rx.nodeKey(e,r);this.containerNodes.has(a)&&(t[a]=n,n+=1)}}return t}getLayer(e,t){if(null!=t){if(this.layers.length<=t)throw new zm(`Was asked to retrieve layer at index ${t}, but model only has ${this.layers.length} layer(s).`);return this.layers[t]}if(null==e)throw new zm("Provide either a layer name or layer index");for(const t of this.layers)if(t.name===e)return t;throw new zm(`No such layer: ${e}`)}calculateLosses(){return jo((()=>{const e=[];for(const t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){const r=rx.nodeKey(t,n);this.containerNodes.has(r)&&e.push(...t.calculateLosses())}return e}))}getConfig(){const e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(const e of this.layers){const r=e.getClassName(),a=e.getConfig(),s=[];for(let n=0;n<e.inboundNodes.length;n++){const r=e.inboundNodes[n],a=rx.nodeKey(e,n);let i={};if(this.containerNodes.has(a)){if(r.callArgs)try{JSON.stringify(r.callArgs),i=r.callArgs}catch(t){console.warn(`Layer ${e.name} was passed non-serializable keyword arguments: ${r.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),i={}}if(r.inboundLayers.length>0){const e=[];for(let n=0;n<r.inboundLayers.length;n++){const a=r.inboundLayers[n],s=r.nodeIndices[n],o=r.tensorIndices[n];let u=t[rx.nodeKey(a,s)];null==u&&(u=0),e.push([a.name,u,o,i])}s.push(e)}}}const i={};i.name=e.name,i.className=r,i.config=a,i.inboundNodes=s,n.push(i)}e.layers=n;const r=[];for(let e=0;e<this.inputLayers.length;e++){const n=this.inputLayers[e],a=this.inputLayersNodeIndices[e],s=rx.nodeKey(n,a);if(!this.containerNodes.has(s))continue;let i=t[s];null==i&&(i=0);const o=this.inputLayersTensorIndices[e];r.push([n.name,i,o])}e.inputLayers=r;const a=[];for(let e=0;e<this.outputLayers.length;e++){const n=this.outputLayers[e],r=this.outputLayersNodeIndices[e],s=rx.nodeKey(n,r);if(!this.containerNodes.has(s))continue;let i=t[s];null==i&&(i=0);const o=this.outputLayersTensorIndices[e];a.push([n.name,i,o])}return e.outputLayers=a,e}static fromConfig(e,t,n={},r=!1){const a={},s={};function i(e,t){e.name in s?s[e.name].push(t):s[e.name]=[t]}function o(e,t){const n=[];let r;for(const s of t){const o=s[0],u=s[1],l=s[2];if(r=null==s[3]?{}:s[3],!(o in a))return void i(e,t);const c=a[o];if(c.inboundNodes.length<=u)return void i(e,t);const h=c.inboundNodes[u];n.push(h.outputTensors[l])}n.length>0&&e.apply(Gm(n),r)}function u(e){const n=e.name,s=xb(e,null!=t.customObjects?t.customObjects:{});s.setFastWeightInitDuringBuild(r),a[n]=s,e.inboundNodes.forEach((e=>{if(!(e instanceof Array))throw new zm(`Corrupted configuration, expected array for nodeData: ${e}`);i(s,e)}))}const l=t.name,c=t.layers;for(const e of c)u(e);for(;!eg(s);)for(const e of c){const t=a[e.name];if(t.name in s){const e=s[t.name];delete s[t.name];for(const n of e)o(t,n)}}const h=[],d=[],p=t.inputLayers;for(const e of p){const t=e[0],n=e[1],r=e[2];Vm(t in a);const s=a[t].inboundNodes[n].outputTensors;h.push(s[r])}const f=t.outputLayers;for(const e of f){const t=e[0],n=e[1],r=e[2];Vm(t in a);const s=a[t].inboundNodes[n].outputTensors;d.push(s[r])}return new e({inputs:h,outputs:d,name:l})}get stateful(){if(this._stateful)throw new zm("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const e of this.layers)if(e.stateful)return!0;return!1}resetStates(){jo((()=>{this.layers.forEach((e=>{e.stateful&&e.resetStates()}))}))}};function ax(e,t){return function(e,t,n){const r=t.length;if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>null));if(1===r)return Array.isArray(e)&&1===e.length?e:"object"==typeof e&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==r)throw new Error(`Provided classWeight is an array of ${e.length} element(s), but the model has ${r} outputs. Make sure a set of weights is provided for each model output.`);return e}if("object"==typeof e&&Object.keys(e).length>0&&"object"==typeof e[Object.keys(e)[0]]){const n=[];return t.forEach((t=>{t in e?n.push(e[t]):n.push(null)})),n}throw new Error(`The model has multiple (${r}) outputs, so classWeight must be either an array with ${r} elements or an object with ${t} keys. Provided classWeight not understood: ${JSON.stringify(e)}`)}(e,t)}async function sx(e,t,n,r){if(null!=t||null!=r)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){const t=jo((()=>{if(1===e.shape.length)return vi(e);if(2===e.shape.length){if(e.shape[1]>1)return mu(e,1);if(1===e.shape[1])return Mu(e,[e.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${e.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw new Error(`Unexpected rank of target (y) tensor (${e.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)})),r=Array.from(await t.data());qo(t);const a=[];return r.forEach((e=>{if(null==n[e])throw new Error(`classWeight must contain all classes in the training data. The class ${e} exists in the data but not in classWeight`);a.push(n[e])})),Ph(a,"float32")}return null}function ix(e,t){return uu(e,t)}function ox(e,t){let n,r;const a=t;n=a.xs,r=a.ys,ca.assert(null!=n&&null!=r,(()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`));const s=ux("input",e.inputNames,n),i=ux("output",e.outputNames,r),o=s[0].shape[0];ca.assert(s.length===e.inputs.length,(()=>`LayersModel has ${e.inputs.length} inputs, but the dataset provides ${s.length} inputs.  (Expected input keys: ${JSON.stringify(e.inputNames)})`)),ca.assert(i.length===e.outputs.length,(()=>`LayersModel has ${e.outputs.length} outputs, but the dataset provides ${i.length} outputs.  (Expected output keys: ${JSON.stringify(e.outputNames)})`));for(let t=0;t<s.length;t++)ca.assert(s[t].shape[0]===o,(()=>`Batch size mismatch: input ${e.inputNames[t]} has ${s[t].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`));for(let t=0;t<i.length;t++)ca.assert(i[t].shape[0]===o,(()=>`Batch size mismatch: output ${e.outputNames[t]} has ${i[t].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`));return{xs:s,ys:i}}function ux(e,t,n){if(n instanceof Ba)return[n];if(Array.isArray(n))return ca.assert(n.length===t.length,(()=>`Received an array of ${n.length} Tensors, but expected ${t.length} to match the ${e} keys ${t}.`)),n;{const r=[];for(const a of t){if(null==n[a])throw new zm(`The feature data generated by the dataset lacks the required ${e} key '${a}'.`);r.push(n[a])}return r}}function lx(e){return"function"==typeof e.iterator}function cx(e){ca.assert(e>0&&Number.isInteger(e),(()=>`batchSize is required to be a positive integer, but got ${e}`))}function hx(e,t,n){return null==e?[null]:Array.isArray(e)?e.map((e=>Vg(e,t,n-t))):Vg(e,t,n-t)}function dx(e,t){return jo((()=>null==e?null:Array.isArray(e)?e.map((e=>dx(e,t))):Yg(e,"int32"===t.dtype?t:wi(t,"int32"))))}function px(e,t){const n=[];let r=0,a=null;for(;r<e;)a=r+t,a>=e&&(a=e),n.push([r,a]),r=a;return n}function fx(e){const t=[];e instanceof Ba&&(e=[e]);for(let n=0;n<e.length;++n){const r=e[n];if(1===r.rank)t.push(Wg(r,1));else{if(0===r.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(r)}}return t}function mx(e,t){if(null==e)return;const n=[];if(t instanceof Ba)n.push(t.id);else if(Array.isArray(t))t.forEach((e=>n.push(e.id)));else if(null!=t)for(const e in t){const r=t[e];n.push(r.id)}const r=[];if(e instanceof Ba)-1===n.indexOf(e.id)&&r.push(e);else if(Array.isArray(e))e.forEach((e=>{-1===n.indexOf(e.id)&&r.push(e)}));else if(null!=e)for(const t in e){const a=e[t];-1===n.indexOf(a.id)&&r.push(a)}r.forEach((e=>{e.isDisposed||e.dispose()}))}function gx(e){return Array.isArray(e)}function yx(e){return!function(e){return e instanceof Ba}(e)&&!gx(e)}function bx(e,t,n,r=!0,a=""){if(null==t||0===t.length){if(null!=e){let t=!1;if(gx(e)&&e.length>0)t=!0;else if(yx(e)){for(const n in e)if(e.hasOwnProperty(n)){t=!0;break}}else t=!0;if(t)throw new zm(`Error when checking model ${a} expected no data, but got ${e}`)}return[]}if(null==e)return t.map((e=>null));let s;if(yx(e)){e=e,s=[];for(const n of t){if(null==e[n])throw new zm(`No data provided for "${n}". Need data for each key in: ${t}`);s.push(e[n])}}else if(gx(e)){if((e=e).length!==t.length)throw new zm(`Error when checking model ${a}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${e}`);s=e}else{if(e=e,t.length>1)throw new zm(`The model ${a} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${e.shape}`);s=[e]}if(s=fx(s),null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;const i=s[e];if(i.shape.length!==n[e].length)throw new zm(`Error when checking ${a}: expected ${t[e]} to have ${n[e].length} dimension(s). but got array with shape ${i.shape}`);for(let s=0;s<n[e].length;++s){if(0===s&&!r)continue;const o=i.shape[s],u=n[e][s];if(null!=u&&u>=0&&o!==u)throw new zm(`Error when checking ${a}: expected ${t[e]} to have shape [${n[e]}], but got array with shape [${i.shape}].`)}}return s}function xx(e,t,n,r=!0,a=""){let s;if(Array.isArray(e)){if(e.length!==t.length)throw new zm(`Error when checking model ${a}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${e.length} Tensors(s).`);s=e}else{if(t.length>1)throw new zm(`The model expects ${t.length} ${a} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(e.shape)}.`);s=[e]}if(null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;const i=s[e];if(i.shape.length!==n[e].length)throw new zm(`Error when checking ${a}: expected ${t[e]} to have ${n[e].length} dimension(s), but got array with shape ${JSON.stringify(i.shape)}`);for(let s=0;s<n[e].length;++s){if(0===s&&!r)continue;const o=i.shape[s],u=n[e][s];if(null!=u&&u!==o)throw new zm(`Error when checking ${a}: expected ${t[e]} to have shape ${JSON.stringify(n[e])} but got array with shape ${JSON.stringify(i.shape)}.`)}}}var wx=class extends rx{constructor(e){super(e),this.isTraining=!1}summary(e,t,n=console.log){if(!this.built)throw new zm("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");!function(e,t,n,r=console.log){const a=function(e){let t=!0;const n=[],r=[];for(const t in e.nodesByDepth)n.push(e.nodesByDepth[t]);for(const e of n){if(e.length>1||1===e.length&&e[0].inboundLayers.length>1){t=!1;break}r.push(...e)}if(t)for(const n of e.layers){let e=!1;for(const a of n.inboundNodes)if(-1!==r.indexOf(a)){if(e){t=!1;break}e=!0}if(!t)break}return t}(e),s=["Layer (type)","Output shape","Param #"];let i;if(a?(t=t||65,n=n||[.45,.85,1]):(t=t||98,n=n||[.33,.55,.67,1]),n[n.length-1]<=1&&(n=n.map((e=>Math.floor(t*e)))),!a){s.push("Receives inputs"),i=[];for(const t in e.nodesByDepth)i.push(...e.nodesByDepth[t])}r("_".repeat(t)),Ub(s,n,r),r("=".repeat(t));const o=e.layers;for(let e=0;e<o.length;++e)a?Gb(o[e],n,r):Hb(o[e],n,i,r),r((e===o.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();const u=function(e){let t;return t=null!=e.collectedTrainableWeights?Ky(e.collectedTrainableWeights):Ky(e.trainableWeights),t}(e),l=Ky(e.nonTrainableWeights);r(`Total params: ${u+l}`),r(`Trainable params: ${u}`),r(`Non-trainable params: ${l}`),r("_".repeat(t))}(this,e,t,n)}compile(e){if(null==e.loss&&(e.loss=[]),this.loss=e.loss,"string"==typeof e.optimizer)this.optimizer_=function(e){const t={Adagrad:()=>$p.adagrad(.01),Adadelta:()=>$p.adadelta(1,.95,Mm()),Adam:()=>$p.adam(.001,.9,.999,Mm()),Adamax:()=>$p.adamax(.002,.9,.999,Mm(),0),RMSProp:()=>$p.rmsprop(.001,.9,0,Mm()),SGD:()=>$p.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new zm(`Unknown Optimizer ${e}`)}(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof xp))throw new zm("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(Array.isArray(e.loss)||"string"==typeof e.loss||"function"==typeof e.loss)if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new zm(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);const n=e.loss;t=n.map((e=>_b(e)))}else{const n=_b(e.loss);this.outputs.forEach((e=>{t.push(n)}))}else{e.loss=e.loss;for(const t in e.loss)if(-1===this.outputNames.indexOf(t))throw new zm(`Unknown entry in loss dictionary: "${t}". Only expected the following keys: ${this.outputNames}`);for(const n of this.outputNames)null==e.loss[n]&&console.warn(`Output "${n}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${n} during training`),t.push(_b(e.loss[n]))}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let e=0;e<this.outputs.length;++e){const t=this.internalOutputShapes[e],n=this.outputNames[e];this.feedOutputNames.push(n),this.feedOutputShapes.push(t),this.feedLossFns.push(this.lossFunctions[e])}const n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],Ag("loss",(()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;const t=this.lossFunctions[e];this.outputs.length>1&&(this.metricsTensors.push([t,e]),this.metricsNames.push(this.outputNames[e]+"_loss"))}}));const r=function(e,t){if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>[]));let n;if("string"==typeof e||"function"==typeof e)n=[e];else{if(!Array.isArray(e)&&"object"!=typeof e)throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${e}`);n=e}if(Array.isArray(n))return t.map((e=>n));{const e=[];for(const r of t){let t=n.hasOwnProperty(r)?n[r]:[];Array.isArray(t)||(t=[t]),e.push(t)}return e}}(e.metrics,this.outputNames),a=(e,t,n)=>{this.outputNames.length>1&&(t=this.outputNames[e]+"_"+t),this.metricsNames.push(t),this.metricsTensors.push([n,e])};Ag("metric",(()=>{for(let e=0;e<this.outputs.length;++e)-1===n.indexOf(e)&&(t=>{let n,r,s;for(const i of t){if("string"==typeof i&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(i)){const t=this.internalOutputShapes[e];let a;1===t[t.length-1]||this.lossFunctions[e]===Tb?-1!==["accuracy","acc"].indexOf(i)?r=Eb:-1!==["crossentropy","ce"].indexOf(i)&&(r=Db):this.lossFunctions[e]===Nb?-1!==["accuracy","acc"].indexOf(i)?r=Mb:-1!==["crossentropy","ce"].indexOf(i)&&(r=Lb):-1!==["accuracy","acc"].indexOf(i)?r=Ab:-1!==["crossentropy","ce"].indexOf(i)&&(r=Ob),-1!==["accuracy","acc"].indexOf(i)?a="acc":-1!==["crossentropy","ce"].indexOf(i)&&(a="ce"),s=r,n=""+a}else{const e=Pb(i);s=e,n=""+Bb(i)}let t;Ag(n,(()=>{t=s})),a(e,n,t)}})(r[e])})),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,n={}){const r=null==n.batchSize?32:n.batchSize;cx(r);const a=this.standardizeUserDataXY(e,t,!0,r);try{const s=a[0].concat(a[1]);this.makeTestFunction();const i=this.testFunction;return Gm(this.testLoop(i,s,r,n.verbose,n.steps))}finally{mx(a[0],e),mx(a[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),async function(e,t,n){const r=null!=(n=n||{}).batches,a=e.testFunction;let s=[];if(n.verbose>0)throw new Pm("Verbose mode is not implemented yet.");ca.assert(!r||n.batches>0&&Number.isInteger(n.batches),(()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`));const i="function"==typeof t.next?t:await t.iterator();let o=0,u=0;for(;!r||u<n.batches;){const t=await i.next();if(s=jo((()=>{if(t.value){const{xs:n,ys:r}=ox(e,t.value),i=n.concat(r),l=jo((()=>a(i)));if(qo(i),0===u)for(let e=0;e<l.length;++e)s.push(mh(0));const c=i[0].shape[0];for(let e=0;e<l.length;++e){const t=l[e],n=s[e];s[e]=jo((()=>su(s[e],uu(c,t)))),u>0&&qo(n)}qo(l),o+=c,++u}return s})),t.done){r&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let e=0;e<s.length;++e){const t=s[e];s[e]=ou(s[e],o),qo(t)}return Gm(s)}(this,e,t)}checkNumSamples(e,t,n,r="steps"){let a;if(null!=n){if(a=null,null!=t)throw new zm(`If ${r} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else{if(null==e)throw new zm(`Either the input data should have a defined shape, or ${r} shoud be specified.`);a=Array.isArray(e)?e[0].shape[0]:e.shape[0]}return a}execute(e,t){if(Array.isArray(t)&&0===t.length)throw new zm("`outputs` is an empty Array, which is not allowed.");const n=Array.isArray(t),r=n?t:[t],a=this.retrieveSymbolicTensors(r),s=new Yb;if(e instanceof Ba&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new zm(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let t=0;t<this.inputs.length;++t)s.add(this.inputs[t],e[t])}else for(const t of this.inputs){const n=e[t.name];if(null==n)throw new zm(`No value is provided for the model's input ${t.name}`);s.add(t,n)}const i=Qb(a,s);return n?i:i[0]}retrieveSymbolicTensors(e){const t=Wm(null,e.length);let n=e.length;for(const r of this.layers){const a=Array.isArray(r.output)?r.output:[r.output],s=a.map((e=>e.name));for(let r=0;r<e.length;++r){const i=s.indexOf(e[r]);if(-1!==i&&(t[r]=a[i],n--),0===n)break}if(0===n)break}if(n>0){const n=[];throw t.forEach(((t,r)=>{null==t&&n.push(e[r])})),new zm(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(n)}`)}return t}predictLoop(e,t=32,n=!1){return jo((()=>{const r=this.checkNumSamples(e);if(n)throw new Pm("Verbose predictLoop() is not implemented yet.");const a=px(r,t),s=this.outputs.map((e=>[]));for(let t=0;t<a.length;++t)jo((()=>{const n=a[t][0],r=a[t][1],s=hx(e,n,r),i=[];if(Array.isArray(s))for(let e=0;e<s.length;++e)i.push({key:this.inputs[e],value:s[e]});else i.push({key:this.inputs[0],value:s});const o=new Yb(i);return Qb(this.outputs,o)})).forEach(((e,t)=>s[t].push(e)));return Gm(s.map((e=>zu(e,0))))}))}predict(e,t={}){const n=fx(e);xx(n,this.inputNames,this.feedInputShapes,!1);try{const r=null==t.batchSize?32:t.batchSize;return cx(r),this.predictLoop(n,r)}finally{mx(n,e)}}predictOnBatch(e){xx(e,this.inputNames,this.feedInputShapes,!0);const t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,n=!0,r){if(null==this.optimizer_)throw new Lm("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const a=[];for(let e=0;e<this.feedOutputShapes.length;++e){const t=this.feedOutputShapes[e];this.feedLossFns[e]===Nb?a.push(t.slice(0,t.length-1).concat([1])):a.push(t)}if(function(e,t,n){const r=Qm(e.map((e=>e.shape[0])));r.sort();const a=Qm(t.map((e=>e.shape[0])));if(a.sort(),r.length>1)throw new zm(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map((e=>e.shape)))}`);if(a.length>1)throw new zm(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map((e=>e.shape)))}`);if(r.length>0&&a.length>0&&!ca.arraysEqual(r,a))throw new zm(`Input Tensors should have the same number of samples as target Tensors. Found ${r[0]} input sample(s) and ${a[0]} target sample(s).`)}(e=bx(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=bx(t,this.feedOutputNames,a,!1,"target")),function(e,t,n){const r=[vb,Tb,Sb];for(let a=0;a<e.length;++a){const s=e[a],i=t[a],o=n[a];if(null!=i){if(i===Sb&&1===s.shape[s.shape.length-1])throw new zm(`You are passing a target array of shape ${s.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==r.indexOf(i)){const e=s.shape.slice(1),t=o.slice(1);for(let n=0;n<e.length;++n){const r=e[n],a=t[n];if(null!=a&&r!==a)throw new zm(`A target Tensor with shape ${s.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=r&&r>0&&e[0].shape[0]%r!=0)throw new zm(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${r}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,n,r,a=!0,s){const[i,o]=this.standardizeUserDataXY(e,t,a,s);if(null!=n)throw new Error("sample weight is not supported yet.");let u=null;if(null!=r){const e=ax(r,this.outputNames);u=[];for(let t=0;t<e.length;++t)u.push(await sx(o[t],null,e[t]))}return[i,o,u]}testLoop(e,t,n,r=0,a){return jo((()=>{const s=this.checkNumSamples(t,n,a,"steps"),i=[];if(r>0)throw new Pm("Verbose mode is not implemented yet.");if(null!=a)throw new Pm("steps mode in testLoop() is not implemented yet");{const r=px(s,n),a=Ph(Pg(0,s));for(let n=0;n<r.length;++n){const s=r[n][0],o=r[n][1],u=Vg(a,s,o-s),l=dx(t,u),c=e(l);if(0===n)for(let e=0;e<c.length;++e)i.push(mh(0));for(let e=0;e<c.length;++e){const t=c[e];i[e]=su(i[e],uu(o-s,t))}}for(let e=0;e<i.length;++e)i[e]=ou(i[e],s)}return i}))}getDedupedMetricsNames(){const e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){const r=e[n];let a=r;Um(e,r)>1&&(a+=`_${Um(e.slice(0,n),r)}`),t.push(a)}return t}makeTrainFunction(){return e=>{const t=[],n=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),s=[],i=this.collectedTrainableWeights.map((e=>e.read()));return[this.optimizer_.minimize((()=>{const e=[];for(let t=0;t<this.inputs.length;++t)e.push({key:this.inputs[t],value:n[t]});const i=new Yb(e),o=Qb(this.outputs,i,{training:!0});let u;for(let e=0;e<this.lossFunctions.length;++e){let n=(0,this.lossFunctions[e])(r[e],o[e]);null!=a[e]&&(n=ix(n,a[e]));const s=Tc(n);t.push(s),u=0===e?n:su(u,n)}for(let e=0;e<this.metricsTensors.length;++e){let n;if(this.outputs.length>1&&e<this.outputs.length)n=t[e];else{const t=this.metricsTensors[e][0],a=this.metricsTensors[e][1];n=Tc(t(r[a],o[a]))}Ko(n),s.push(n)}return u=Tc(u),this.calculateLosses().forEach((e=>{u=su(u,e)})),u}),!0,i)].concat(s)}}makeTestFunction(){this.testFunction=e=>jo((()=>{const t=[];let n;const r=e.slice(0,this.inputs.length),a=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=[];for(let e=0;e<this.inputs.length;++e)s.push({key:this.inputs[e],value:r[e]});const i=new Yb(s),o=Qb(this.outputs,i);for(let e=0;e<this.lossFunctions.length;++e){const r=this.lossFunctions[e],s=Tc(r(a[e],o[e]));n=0===e?s:su(n,s),t.push(n)}for(let e=0;e<this.metricsTensors.length;++e){const n=this.metricsTensors[e][0],r=this.metricsTensors[e][1],s=Tc(n(a[r],o[r]));t.push(s)}return t}))}async fit(e,t,n={}){return async function(e,t,n,r={}){if(e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");let a,s,i,o,u,l,c;e.isTraining=!0;try{const h=null==r.batchSize?32:r.batchSize;cx(h);const d=!1,p=await e.standardizeUserData(t,n,r.sampleWeight,r.classWeight,d,h);a=p[0],s=p[1],c=p[2];let f,m=!1;if(null!=r.validationData&&r.validationData.length>0){if(m=!0,2!==r.validationData.length)throw 3===r.validationData.length?new Pm("validationData including sample weights is not supported yet."):new zm(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${r.validationData} is invalid.`);i=r.validationData[0],o=r.validationData[1];const t=!0,n=await e.standardizeUserData(i,o,null,null,t,h);u=n[0],l=n[1],f=u.concat(l)}else if(null!=r.validationSplit&&r.validationSplit>0&&r.validationSplit<1){m=!0;const e=Math.floor(a[0].shape[0]*(1-r.validationSplit)),t=a[0].shape[0];u=hx(a,e,t),a=hx(a,0,e),l=hx(s,e,t),s=hx(s,0,e),f=u.concat(l)}else null!=r.validationSteps&&(m=!0);const g=a.concat(s).concat(c);e.checkTrainableWeightsConsistency();const y=e.makeTrainFunction(),b=e.getDedupedMetricsNames();let x,w;m?(e.makeTestFunction(),x=e.testFunction,w=b.slice().concat(b.map((e=>"val_"+e)))):(x=null,f=[],w=b.slice());const v=gb(r.callbacks,r.yieldEvery);return await async function(e,t,n,r,a,s,i,o,u,l,c,h,d,p,f){null==a&&(a=32),null==s&&(s=1),null==c&&(c=!0),null==d&&(d=0);let m=!1;null!=u&&null!=l&&(m=!0);const g=e.checkNumSamples(n,a,p,"steps_per_epoch");let y;null!=g&&(y=Pg(0,g)),null==i&&(i=1);const{callbackList:b,history:x}=bb(o,i,s,d,g,p,a,m,h);b.setModel(e),e.history=x,await b.onTrainBegin(),e.stopTraining_=!1;for(let i=d;i<s;++i){await b.onEpochBegin(i);const s={};{if("batch"===c)throw new Pm("batch shuffling is not implemneted yet");c&&ca.shuffle(y);const i=Ph(y),o=px(g,a);for(let c=0;c<o.length;++c){const h={};if(await b.onBatchBegin(c,h),jo((()=>{const d=o[c][0],p=o[c][1],f=Vg(i,d,p-d);h.batch=c,h.size=p-d;const g=dx(n,f),y=t(g);for(let e=0;e<r.length;++e){const t=r[e],n=y[e];h[t]=n,Ko(n)}if(c===o.length-1&&m){const t=e.testLoop(u,l,a);for(let e=0;e<r.length;++e){const n=r[e],a=t[e];Ko(a),s["val_"+n]=a}}})),await b.onBatchEnd(c,h),cb(h),e.stopTraining_)break}i.dispose()}if(await b.onEpochEnd(i,s),e.stopTraining_)break}return await b.onTrainEnd(),await e.history.syncData(),e.history}(e,y,g,b,h,r.epochs,r.verbose,v,x,f,r.shuffle,w,r.initialEpoch,null)}finally{e.isTraining=!1,mx(a,t),mx(s,n),mx(u,i),mx(l,o),null!=c&&qo(c)}}(this,e,t,n)}async fitDataset(e,t){return async function(e,t,n){const r=null!=n.batchesPerEpoch;if(ca.assert(null!=e.optimizer,(()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig).")),ca.assert(null!=n,(()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call.")),ca.assert(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),(()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`)),ca.assert(!r||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),(()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`)),ca.assert(null==n.validationSplit,(()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead.")),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{const a=null!=n.validationData;let s,i;if(a)if(lx(n.validationData))ca.assert(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),(()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`));else{const e=function(e){if(3===e.length)throw new Pm("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}(n.validationData);s=e.xs,i=e.ys}const o=e.makeTrainFunction(),u=e.getDedupedMetricsNames();let l;l=a?u.slice().concat(u.map((e=>"val_"+e))):u.slice();const c=gb(n.callbacks,n.yieldEvery),h=null==n.verbose?1:n.verbose,{callbackList:d,history:p}=bb(c,h,n.epochs,null,null,function(e,t){let n=null;return null!=t.batchesPerEpoch?n=t.batchesPerEpoch:Number.isFinite(e.size)&&(n=e.size),n}(t,n),null,a,l);d.setModel(e),e.history=p,await d.onTrainBegin(),e.stopTraining_=!1;let f=null==n.initialEpoch?0:n.initialEpoch,m=await t.iterator();for(;f<n.epochs;){const l={};await d.onEpochBegin(f);let c=0,h=0;for(r||(m=await t.iterator());!r||c<n.batchesPerEpoch;){const t=await m.next();if(r&&t.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${c} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, ${n.batchesPerEpoch*n.epochs} batches). You may need to use the repeat() function when building your dataset.`);break}if(null!=t.value){const{xs:r,ys:a}=ox(e,t.value),s={};s.batch=h,s.size=r[0].shape[0],await d.onBatchBegin(h,s);const i=[];if(null!=n.classWeight){const t=ax(n.classWeight,e.outputNames);for(let e=0;e<t.length;++e)i.push(await sx(a[e],null,t[e]))}const l=r.concat(a).concat(i),p=o(l);qo(l);for(let e=0;e<u.length;++e){const t=u[e],n=p[e];s[t]=n,Ko(n)}await d.onBatchEnd(h,s),cb(s),h++,c++}if(r?c>=n.batchesPerEpoch:t.done){if(a){let t;t=lx(n.validationData)?Hm(await e.evaluateDataset(n.validationData,{batches:n.validationBatches})):Hm(e.evaluate(s,i,{batchSize:null==n.validationBatchSize?32:n.validationBatchSize,verbose:0}));for(let n=0;n<e.metricsNames.length;++n)l[`val_${e.metricsNames[n]}`]=t[n]}break}if(e.stopTraining_)break}if(await d.onEpochEnd(f,l),f++,e.stopTraining_)break}return await d.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}(this,e,t)}async trainOnBatch(e,t){const n=await this.standardizeUserData(e,t),r=n[0],a=n[1],s=this.makeTrainFunction()(r.concat(a)),i=[];for(const e of s){const t=await e.data();i.push(t[0])}return qo(s),Gm(i)}getNamedWeights(e){const t=[],n=null!=e&&e.trainableOnly,r=n?this.trainableWeights:this.weights,a=this.getWeights(n);for(let e=0;e<r.length;++e)n&&!r[e].trainable||t.push({name:r[e].originalName,tensor:a[e]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){const e=super.dispose();if(0===e.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const t=Go().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-Go().numTensors}return e}getLossIdentifiers(){let e;if("string"==typeof this.loss)e=jm(this.loss);else if(Array.isArray(this.loss)){for(const e of this.loss)if("string"!=typeof e)throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map((e=>jm(e)))}else{const t=Object.keys(this.loss);e={};const n=this.loss;for(const r of t){if("string"!=typeof n[r])throw new Error("Serialization of non-string loss is not supported.");e[r]=jm(n[r])}}return e}getMetricIdentifiers(){if("string"==typeof this.metrics||"function"==typeof this.metrics)return[jm(Bb(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map((e=>jm(Bb(e))));{const e={};for(const t in this.metrics)e[t]=jm(Bb(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(null!=e.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=e.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=e.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const t=xb(qb(e.optimizer_config));let n,r;if("string"==typeof e.loss)n=qm(e.loss);else if(Array.isArray(e.loss))n=e.loss.map((e=>qm(e)));else if(null!=e.loss){n={};for(const t in e.loss)n[t]=qm(e.loss[t])}if(Array.isArray(e.metrics))r=e.metrics.map((e=>qm(e)));else if(null!=e.metrics){r={};for(const t in e.metrics)r[t]=qm(e.metrics[t])}this.compile({loss:n,metrics:r,optimizer:t})}async save(e,t){if("string"==typeof e){const t=Ii.getSaveHandlers(e);if(0===t.length)throw new zm(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new zm(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new zm("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const n=await Ii.encodeWeights(this.getNamedWeights(t)),r={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:`TensorFlow.js tfjs-layers v${Xb}`,convertedBy:null};if(null!=t&&t.includeOptimizer&&null!=this.optimizer){r.trainingConfig=this.getTrainingConfig();const e="optimizer",{data:t,specs:a}=await Ii.encodeWeights(await this.optimizer.getWeights(),e);n.specs.push(...a),n.data=Ii.concatenateArrayBuffers([n.data,t])}if(null!=this.userDefinedMetadata){const e=!0;Wb(this.userDefinedMetadata,this.name,e),r.userDefinedMetadata=this.userDefinedMetadata}return r.weightData=n.data,r.weightSpecs=n.specs,e.save(r)}setUserDefinedMetadata(e){Wb(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}};wx.className="Model",vo.registerClass(wx);var vx=class extends wx{};async function kx(e,t){"modelTopology"in e||(e={modelTopology:e});let n=(e=e).modelTopology;null!=n.model_config&&(n=n.model_config);const r=xb(qb(n),t);if(null!=e.weightsManifest){const t=await Ii.loadWeights(e.weightsManifest,e.pathPrefix,r.weights.map((e=>e.originalName))),n={};for(const e of r.weights)n[e.originalName]=t[e.originalName];r.loadWeights(n),qo(t)}return r}vx.className="Functional",vo.registerClass(vx);var Ix=class extends wx{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=null!=e.name?e.name:Uy("sequential_"),null!=e.layers)for(const t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some((e=>e<0)))throw new zm(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){const t=e instanceof Ix||e instanceof wx;let n;if(t){if(n=e,1!==n.outputs.length)throw new zm("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==n.inputs.length)throw new zm("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===e.inboundNodes.length){if(null==e.batchInputShape)throw new zm("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const t=ub({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(t)}if(t)this.outputs=n.outputs,this.inputs=n.inputs;else{if(1!==e.inboundNodes.length)throw new zm(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(1!==e.inboundNodes[0].outputTensors.length)throw new zm("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=ab(this.outputs[0])}this.inboundNodes=[],new tb({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:Wm(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs[0].shape})}else{const t=e.apply(this.outputs[0]);if(Array.isArray(t))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[t],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return null==this.model&&this.build(),this.model.call(e,t)}build(e){if(qy(e),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new wx({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,n=console.log){this.built||this.build(),super.summary(e,t,n)}setWeights(e){null==this.model&&this.build(),this.model.setWeights(e)}evaluate(e,t,n={}){if(!this.built)throw new Lm("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new Lm("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return null==this.model&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return null==this.model&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,n={}){if(!this.built)throw new Lm("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new Lm("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,n={},r=!1){let a,s={};if(t instanceof Array){if(null==t[0].className||"Merge"===t[0].className)throw new zm("Legacy serialization format not supported yet.");a=t}else ca.assert(null!=t.layers,(()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field.")),a=t.layers,delete t.layers,s=t;const i=new e(s);if(!(i instanceof Ix))throw new Pm(`Sequential.fromConfig called on non-Sequential input: ${i}`);for(const e of a){const t=xb(e,void 0,r);r&&t.setFastWeightInitDuringBuild(!0),i.add(t)}return i}set stopTraining(e){if(null==this.model)throw new zm("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(null==this.model)throw new zm("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const e=[];for(const t of this.layers){const n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}};function Sx(e){return new wx(e)}function Nx(e){return new Ix(e)}function Tx(e,t){return null==t&&(t={}),async function(e,t){if(null==t&&(t={}),"string"==typeof e){const n=Ii.getLoadHandlers(e,t);if(0===n.length)n.push(Ii.browserHTTPRequest(e,t));else if(n.length>1)throw new zm(`Found more than one (${n.length}) load handlers for URL '${e}'`);e=n[0]}return async function(e,t,n){if(null==n&&(n={}),null==e.load)throw new zm("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const r=await e.load();let a=r.modelTopology;null!=a.model_config&&(a=a.model_config);const s=null==n.strict||n.strict,i=null!=r.weightData&&null!=r.weightSpecs&&s,o=xb(qb(a),void 0,i),u=r.trainingConfig;if(null!=u&&o.loadTrainingConfig(u),null!=r.userDefinedMetadata&&o.setUserDefinedMetadata(r.userDefinedMetadata),null!=r.weightData){if(null==r.weightSpecs)throw new zm("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");const{modelWeights:e,optimizerWeights:t}=function(e,t){const n=Ii.decodeWeights(e,t),r={},a=[];return t.forEach((e=>{"optimizer"===e.group?a.push({name:e.name,tensor:n[e.name]}):r[e.name]=n[e.name]})),{modelWeights:r,optimizerWeights:a}}(r.weightData,r.weightSpecs);o.loadWeights(e,s),null!=o.optimizer&&t.length>0&&await o.optimizer.setWeights(t),qo(e),qo(t.map((e=>e.tensor)))}return o}(e,0,t)}(e,t)}function Cx(e){return ub(e)}function $x(e,t){yb.registerCallbackConstructor(e,t)}Ix.className="Sequential",vo.registerClass(Ix);var _x=class extends vo.Serializable{getConfig(){return{}}},Ex=class extends _x{apply(e,t=1){return function(e,t=1){if(1!==t)throw new Pm(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return Tl(e)}(e,t)}};Ex.className="elu",vo.registerClass(Ex);var Ax=class extends _x{apply(e){return gh(e)}};Ax.className="selu",vo.registerClass(Ax);var Fx=class extends _x{apply(e){return ih(e)}};Fx.className="relu",vo.registerClass(Fx);var Rx=class extends _x{apply(e){return jo((()=>Ac(6,ih(e))))}};Rx.className="relu6",vo.registerClass(Rx);var Dx=class extends _x{apply(e){return e}};Dx.className="linear",vo.registerClass(Dx);var Mx=class extends _x{apply(e){return Pu(e)}};Mx.className="sigmoid",vo.registerClass(Mx);var Ox=class extends _x{apply(e){return function(e){return jo((()=>{const t=su(.5,uu(.2,e));return Zu(t,0,1)}))}(e)}};Ox.className="hardSigmoid",vo.registerClass(Ox);var Lx=class extends _x{apply(e){return rc(e)}};Lx.className="softplus",vo.registerClass(Lx);var zx=class extends _x{apply(e){return function(e){return jo((()=>ou(e,su(lu(e),1))))}(e)}};zx.className="softsign",vo.registerClass(zx);var Px=class extends _x{apply(e){return Wu(e)}};Px.className="tanh",vo.registerClass(Px);var Bx=class extends _x{apply(e,t=-1){return Th(e,t)}};Bx.className="softmax",vo.registerClass(Bx);var Wx=class extends _x{apply(e,t=-1){return uc(e,t)}};Wx.className="logSoftmax",vo.registerClass(Wx);var Vx=class extends _x{apply(e,t=1){return jo((()=>uu(Pu(uu(e,t)),e)))}};Vx.className="swish",vo.registerClass(Vx);var Ux=class extends _x{apply(e){return jo((()=>uu(e,Wu(rc(e)))))}};function Gx(e){return e.getClassName()}function Hx(e,t={}){return Zm(e,vo.SerializationMap.getMap().classNameMap,t,"activation")}function jx(e){if(null==e){return Hx({className:"linear",config:{}})}if("string"==typeof e){const t={};return t.className=e,t.config={},Hx(t)}return e instanceof _x?e:Hx(e)}function qx(e){if(null!=e&&"object"!=typeof e)throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${e}`)}Ux.className="mish",vo.registerClass(Ux);var Kx=class extends vo.Serializable{},Xx=class extends Kx{constructor(e){super(),qx(e),this.l1=null==e||null==e.l1?.01:e.l1,this.l2=null==e||null==e.l2?.01:e.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(e){return jo((()=>{let t=Cc([1]);return this.hasL1&&(t=su(t,oc(uu(this.l1,lu(e))))),this.hasL2&&(t=su(t,oc(uu(this.l2,Zg(e))))),Mu(t,[])}))}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}};Xx.className="L1L2",vo.registerClass(Xx);var Yx={l1l2:"L1L2"};function Zx(e){return Xm(e)}function Jx(e,t={}){return Zm(e,vo.SerializationMap.getMap().classNameMap,t,"regularizer")}function Qx(e){return null==e?null:"string"==typeof e?Jx({className:e in Yx?Yx[e]:e,config:{}}):e instanceof Kx?e:Jx(e)}var ew=class extends rb{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,null!=e&&(this.maxValue=e.maxValue)}call(e,t){e=jy(e);let n=ih(e);return null!=this.maxValue&&(n=Zu(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){const e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}};ew.className="ReLU",vo.registerClass(ew);var tw=class extends rb{constructor(e){super(null==e?{}:e),this.DEFAULT_ALPHA=.3,null==e&&(e={}),this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=jy(e);return Vl(n,this.alpha)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}};tw.className="LeakyReLU",vo.registerClass(tw);var nw=class extends rb{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==e&&(e={}),this.supportsMasking=!0,this.alphaInitializer=Iy(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=Qx(e.alphaRegularizer),this.alphaConstraint=mg(e.alphaConstraint),null==e.sharedAxes)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else{if("number"!=typeof e.sharedAxes)throw new zm(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`);this.sharedAxes=[e.sharedAxes]}}build(e){const t=(e=qy(e)).slice(1);if(null!=this.sharedAxes)for(const e of this.sharedAxes)t[e-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(null!=this.sharedAxes)for(let t=1;t<e.length;++t)n[t]=e[t];this.inputSpec=[new Jy({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=jy(e),Xc(e,this.alpha.read())}getConfig(){const e={alphaInitializer:ky(this.alphaInitializer),alphaRegularizer:Zx(this.alphaRegularizer),alphaConstraint:pg(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}};nw.className="PReLU",vo.registerClass(nw);var rw=class extends rb{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA=1,null==e&&(e={}),null!=e.alpha&&e.alpha!==this.DEFAULT_ALPHA)throw new Pm(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=jy(e);return Tl(n)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}};rw.className="ELU",vo.registerClass(rw);var aw=class extends rb{constructor(e){super(null==e?{}:e),this.DEFAULT_THETA=1,null==e&&(e={}),this.theta=null==e.theta?this.DEFAULT_THETA:e.theta}call(e,t){const n=jy(e);return uu(n,wi(Ol(n,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){const e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}};aw.className="ThresholdedReLU",vo.registerClass(aw);var sw=class extends rb{constructor(e){super(null==e?{}:e),this.DEFAULT_AXIS=1,null==e&&(e={}),this.softmax=(new Bx).apply,this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis}call(e,t){const n=jy(e);return this.softmax(n,this.axis)}computeOutputShape(e){return e}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}};function iw(e,t,n){if("number"==typeof e)return Wm(e,t);if(e.length!==t)throw new zm(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${e.length} elements.`);for(let a=0;a<t;++a){const s=e[a];if((r=s)!==parseInt(r.toString(),10))throw new zm(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(e)} including a non-integer number ${s}`)}return e;var r}function ow(e,t,n,r,a=1){if(null==e)return e;let s;return s="same"===n?e:e-(t+(t-1)*(a-1))+1,Math.floor((s+r-1)/r)}function uw(e,t,n,r){if(null==e)return null;if("valid"===r)e=e*t+zg([n-t,0]);else{if("same"!==r)throw new zm(`Unsupport padding mode: ${r}.`);e*=t}return e}function lw(e,t){return jo((()=>(Cg(t),"channelsFirst"===t?Ui(e,[0,2,3,1]):e)))}function cw(e,t){return jo((()=>(Cg(t),"channelsFirst"===t?Ui(e,[0,2,3,4,1]):e)))}function hw(e,t,n,r=[1,1],a="valid",s,i,o=null){return jo((()=>{if(null==s&&(s="channelsLast"),Cg(s),3!==e.rank&&4!==e.rank)throw new zm(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${e.rank}.`);if(3!==t.rank&&4!==t.rank)throw new zm(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${e.rank}.`);let u=lw(e,s);if("causal"===a)throw new Pm("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return u=ld.conv2d({x:u,filter:t,strides:r,pad:"same"===a?"same":"valid",dilations:i,dataFormat:"NHWC",bias:n,activation:o}),"channelsFirst"===s&&(u=Ui(u,[0,3,1,2])),u}))}sw.className="Softmax",vo.registerClass(sw);var dw=class extends rb{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",dw.verifyArgs(t),this.rank=e,rg(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new Pm(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=iw(t.kernelSize,e,"kernelSize"),this.strides=iw(null==t.strides?1:t.strides,e,"strides"),this.padding=null==t.padding?"valid":t.padding,$g(this.padding),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,Cg(this.dataFormat),this.activation=jx(t.activation),this.useBias=null==t.useBias||t.useBias,this.biasInitializer=Iy(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=mg(t.biasConstraint),this.biasRegularizer=Qx(t.biasRegularizer),this.activityRegularizer=Qx(t.activityRegularizer),this.dilationRate=iw(null==t.dilationRate?1:t.dilationRate,e,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new zm(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(2===this.rank){if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new zm(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(3===this.rank)if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new zm(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}static verifyArgs(e){if(Vm("kernelSize"in e,"required key 'kernelSize' not in config"),"number"!=typeof e.kernelSize&&!ng(e.kernelSize,"number",1,3))throw new zm(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){const e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:Gx(this.activation),useBias:this.useBias,biasInitializer:ky(this.biasInitializer),biasRegularizer:Zx(this.biasRegularizer),activityRegularizer:Zx(this.activityRegularizer),biasConstraint:pg(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}},pw=class extends dw{constructor(e,t){super(e,t),this.kernel=null,pw.verifyArgs(t),this.filters=t.filters,rg(this.filters,"filters"),this.kernelInitializer=Iy(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=mg(t.kernelConstraint),this.kernelRegularizer=Qx(t.kernelRegularizer)}build(e){e=qy(e);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new zm(`The channel dimension of the input should be defined. Found ${e[t]}`);const n=e[t],r=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return jo((()=>{let t;e=jy(e);const n=null==this.bias?null:this.bias.read(),r=sg(this.activation.getClassName());if(null!=r&&2===this.rank)t=hw(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,r);else{if(1===this.rank)t=function(e,t,n,r=1,a="valid",s,i=1){return jo((()=>{if(null==s&&(s="channelsLast"),Cg(s),3!==e.shape.length)throw new zm(`The input of a conv1dWithBias operation should be 3, but is ${e.shape.length} instead.`);if(3!==t.shape.length)throw new zm(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(null!=n&&1!==n.shape.length)throw new zm(`The bias for a conv1dWithBias operation should be 1, but is ${t.shape.length} instead`);if("channelsFirst"===s&&(e=Ui(e,[0,2,1])),"causal"===a)throw new Pm("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let o=rl(e,t,r,"same"===a?"same":"valid","NWC",i);return null!=n&&(o=Qg(o,n)),o}))}(e,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)t=hw(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new Pm("convolutions greater than 3D are not implemented yet.");t=function(e,t,n,r=[1,1,1],a="valid",s,i){return jo((()=>{if(null==s&&(s="channelsLast"),Cg(s),4!==e.rank&&5!==e.rank)throw new zm(`conv3dWithBias expects input to be of rank 4 or 5, but received ${e.rank}.`);if(4!==t.rank&&5!==t.rank)throw new zm(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${e.rank}.`);let o=cw(e,s);if("causal"===a)throw new Pm("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return o=il(o,t,r,"same"===a?"same":"valid","NDHWC",i),null!=n&&(o=Qg(o,n)),"channelsFirst"===s&&(o=Ui(o,[0,4,1,2,3])),o}))}(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(t=this.activation.apply(t))}return t}))}computeOutputShape(e){e=qy(e);const t=[],n="channelsLast"===this.dataFormat?e.slice(1,e.length-1):e.slice(2);for(let e=0;e<n.length;++e){const r=ow(n[e],this.kernelSize[e],this.padding,this.strides[e],"number"==typeof this.dilationRate?this.dilationRate:this.dilationRate[e]);t.push(r)}let r=[e[0]];return"channelsLast"===this.dataFormat?(r=r.concat(t),r.push(this.filters)):(r.push(this.filters),r=r.concat(t)),r}getConfig(){const e={filters:this.filters,kernelInitializer:ky(this.kernelInitializer),kernelRegularizer:Zx(this.kernelRegularizer),kernelConstraint:pg(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||"number"!=typeof e.filters||e.filters<1)throw new zm(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}},fw=class extends pw{constructor(e){super(2,e),fw.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!ng(e.kernelSize,"number",1,2))throw new zm(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}};fw.className="Conv2D",vo.registerClass(fw);var mw=class extends pw{constructor(e){super(3,e),mw.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&(!Array.isArray(e.kernelSize)||1!==e.kernelSize.length&&3!==e.kernelSize.length))throw new zm(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}};mw.className="Conv3D",vo.registerClass(mw);var gw=class extends fw{constructor(e){if(super(e),this.inputSpec=[new Jy({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new zm(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(4!==(e=qy(e)).length)throw new zm("Input should have rank 4; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new zm("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Jy({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return jo((()=>{let t=jy(e);if(4!==t.shape.length)throw new zm(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);const n=t.shape,r=n[0];let a,s;"channelsFirst"===this.dataFormat?(a=2,s=3):(a=1,s=2);const i=n[a],o=n[s],u=this.kernelSize[0],l=this.kernelSize[1],c=this.strides[0],h=this.strides[1],d=[r,uw(i,c,u,this.padding),uw(o,h,l,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=Ui(t,[0,2,3,1]));let p=sl(t,this.kernel.read(),d,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(p=Ui(p,[0,3,1,2])),null!=this.bias&&(p=Qg(p,this.bias.read(),this.dataFormat)),null!=this.activation&&(p=this.activation.apply(p)),p}))}computeOutputShape(e){const t=(e=qy(e)).slice();let n,r,a;"channelsFirst"===this.dataFormat?(n=1,r=2,a=3):(n=3,r=1,a=2);const s=this.kernelSize[0],i=this.kernelSize[1],o=this.strides[0],u=this.strides[1];return t[n]=this.filters,t[r]=uw(t[r],o,s,this.padding),t[a]=uw(t[a],u,i,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}};gw.className="Conv2DTranspose",vo.registerClass(gw);var yw=class extends mw{constructor(e){if(super(e),this.inputSpec=[new Jy({ndim:5})],"same"!==this.padding&&"valid"!==this.padding)throw new zm(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(5!==(e=qy(e)).length)throw new zm("Input should have rank 5; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new zm("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Jy({ndim:5,axes:{[t]:n}})],this.built=!0}call(e,t){return jo((()=>{let t=jy(e);if(5!==t.shape.length)throw new zm(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);const n=t.shape,r=n[0];let a,s,i;"channelsFirst"===this.dataFormat?(i=2,a=3,s=4):(i=1,a=2,s=3);const o=n[i],u=n[a],l=n[s],c=this.kernelSize[0],h=this.kernelSize[1],d=this.kernelSize[2],p=this.strides[0],f=this.strides[1],m=this.strides[2],g=[r,uw(o,p,c,this.padding),uw(u,f,h,this.padding),uw(l,m,d,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=Ui(t,[0,2,3,4,1]));let y=ul(t,this.kernel.read(),g,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(y=Ui(y,[0,4,1,2,3])),null!==this.bias&&(y=Qg(y,this.bias.read(),this.dataFormat)),null!==this.activation&&(y=this.activation.apply(y)),y}))}computeOutputShape(e){const t=(e=qy(e)).slice();let n,r,a,s;"channelsFirst"===this.dataFormat?(n=1,r=2,a=3,s=4):(n=4,r=1,a=2,s=3);const i=this.kernelSize[0],o=this.kernelSize[1],u=this.kernelSize[2],l=this.strides[0],c=this.strides[1],h=this.strides[2];return t[n]=this.filters,t[r]=uw(t[r],l,i,this.padding),t[a]=uw(t[a],c,o,this.padding),t[s]=uw(t[s],h,u,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}};yw.className="Conv3DTranspose",vo.registerClass(yw);var bw=class extends pw{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==t.filters)throw new zm("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=t.kernelInitializer||null!=t.kernelRegularizer||null!=t.kernelConstraint)throw new zm("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=t.padding&&"same"!==t.padding&&"valid"!==t.padding)throw new zm(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=Iy(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=Qx(t.depthwiseRegularizer),this.depthwiseConstraint=mg(t.depthwiseConstraint),this.pointwiseInitializer=Iy(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=Qx(t.pointwiseRegularizer),this.pointwiseConstraint=mg(t.pointwiseConstraint)}build(e){if((e=qy(e)).length<this.rank+2)throw new zm(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t]||e[t]<0)throw new zm(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);const n=e[t],r=this.kernelSize.concat([n,this.depthMultiplier]),a=[];for(let e=0;e<this.rank;++e)a.push(1);a.push(n*this.depthMultiplier,this.filters);const s=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",r,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,s,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",a,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,s,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,s,this.biasConstraint):this.bias=null,this.inputSpec=[new Jy({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return jo((()=>{let t;if(e=jy(e),1===this.rank)throw new Pm("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(e=Ui(e,[0,2,3,1])),t=yh(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(t=Qg(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),"channelsFirst"===this.dataFormat&&(t=Ui(t,[0,3,1,2])),t}))}getConfig(){const e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=ky(this.depthwiseInitializer),e.pointwiseInitializer=ky(this.pointwiseInitializer),e.depthwiseRegularizer=Zx(this.depthwiseRegularizer),e.pointwiseRegularizer=Zx(this.pointwiseRegularizer),e.depthwiseConstraint=pg(this.depthwiseConstraint),e.pointwiseConstraint=pg(this.pointwiseConstraint),e}};bw.className="SeparableConv";var xw=class extends bw{constructor(e){super(2,e)}};xw.className="SeparableConv2D",vo.registerClass(xw);var ww=class extends pw{constructor(e){super(1,e),ww.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){const e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!ng(e.kernelSize,"number",1,1))throw new zm(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}};ww.className="Conv1D",vo.registerClass(ww);var vw=class extends rb{constructor(e){super(e),"number"==typeof e.cropping?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:"number"==typeof e.cropping[0]?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=void 0===e.dataFormat?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return"channelsFirst"===this.dataFormat?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return jo((()=>{if(e=jy(e),"channelsLast"===this.dataFormat){const t=Gg(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return Gg(t,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const t=Gg(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return Gg(t,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}}))}getConfig(){const e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};vw.className="Cropping2D",vo.registerClass(vw);var kw=class extends rb{constructor(e){var t;super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==e.size?this.DEFAULT_SIZE:e.size,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Cg(this.dataFormat),this.interpolation=null==e.interpolation?"nearest":e.interpolation,t=this.interpolation,tg(kg,"InterpolationFormat",t)}computeOutputShape(e){if("channelsFirst"===this.dataFormat){const t=null==e[2]?null:this.size[0]*e[2],n=null==e[3]?null:this.size[1]*e[3];return[e[0],e[1],t,n]}{const t=null==e[1]?null:this.size[0]*e[1],n=null==e[2]?null:this.size[1]*e[2];return[e[0],t,n,e[3]]}}call(e,t){return jo((()=>{let t=jy(e);const n=t.shape;if("channelsFirst"===this.dataFormat){t=Ui(t,[0,2,3,1]);const e=this.size[0]*n[2],r=this.size[1]*n[3],a="nearest"===this.interpolation?fp.resizeNearestNeighbor(t,[e,r]):fp.resizeBilinear(t,[e,r]);return Ui(a,[0,3,1,2])}{const e=this.size[0]*n[1],r=this.size[1]*n[2];return"nearest"===this.interpolation?fp.resizeNearestNeighbor(t,[e,r]):fp.resizeBilinear(t,[e,r])}}))}getConfig(){const e={size:this.size,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};kw.className="UpSampling2D",vo.registerClass(kw);var Iw=class extends dw{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=Iy(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=mg(e.depthwiseConstraint),this.depthwiseRegularizer=Qx(e.depthwiseRegularizer)}build(e){if((e=qy(e)).length<4)throw new zm(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);const t="channelsFirst"===this.dataFormat?1:3;if(null==e[t]||e[t]<0)throw new zm(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);const n=e[t],r=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",r,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return jo((()=>{let t=function(e,t,n=[1,1],r="valid",a,s){return jo((()=>{null==a&&(a="channelsLast"),Cg(a);let i=lw(e,a);if(4!==e.rank)throw new zm(`Input for depthwiseConv2d is required to be 4-D, but is instead ${e.rank}-D`);if(4!==t.rank)throw new zm(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return i=fl(i,t,n,"same"===r?"same":"valid","NHWC",s),"channelsFirst"===a&&(i=Ui(i,[0,3,1,2])),i}))}(e=jy(e),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(t=Qg(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),t}))}computeOutputShape(e){e=qy(e);const t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,a=ow(t,this.kernelSize[0],this.padding,this.strides[0]),s=ow(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[e[0],r,a,s]:[e[0],a,s,r]}getConfig(){const e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=ky(this.depthwiseInitializer),e.depthwiseRegularizer=Zx(this.depthwiseRegularizer),e.depthwiseConstraint=pg(this.depthwiseRegularizer),e}};function Sw(e,t,n,r){if(Array.isArray(e)){if(null!=t||null!=n)throw new zm("When inputs is an array, neither initialState or constants should be provided");null!=r&&(n=e.slice(e.length-r,e.length),e=e.slice(0,e.length-r)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}function a(e){return null==e||Array.isArray(e)?e:[e]}return{inputs:e,initialState:t=a(t),constants:n=a(n)}}function Nw(e,t,n,r=!1,a,s,i=!1,o=!1){return jo((()=>{const u=t.shape.length;if(u<3)throw new zm(`Input should be at least 3D, but is ${u}D.`);const l=[1,0].concat(Pg(2,u));if(t=Ui(t,l),null!=s)throw new Pm("The rnn() functoin of the deeplearn.js backend does not support constants yet.");i&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=a&&((a=wi(wi(a,"bool"),"float32")).rank===u-1&&(a=_l(a,-1)),a=Ui(a,l)),r&&(t=uh(t,0),null!=a&&(a=uh(a,0)));const c=[];let h,d=n;const p=t.shape[0],f=Kh(t);let m,g;null!=a&&(m=Kh(a));for(let t=0;t<p;++t){const n=f[t],r=jo((()=>e(n,d)));if(null==a)h=r[0],d=r[1];else{const e=jo((()=>{const e=m[t],n=ic(Pc(e),e);return{output:su(uu(r[0],e),uu(d[0],n)),newStates:d.map(((t,a)=>su(uu(r[1][a],e),uu(t,n))))}}));h=e.output,d=e.newStates}o&&c.push(h)}return o&&(g=Mh(c,1)),[h,g,d]}))}Iw.className="DepthwiseConv2D",vo.registerClass(Iw);var Tw=class extends rb{constructor(e){let t;if(super(e),null==e.cell)throw new zm("cell property is missing for the constructor of RNN.");if(t=Array.isArray(e.cell)?new Dw({cells:e.cell}):e.cell,null==t.stateSize)throw new zm("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=null!=e.returnSequences&&e.returnSequences,this.returnState=null!=e.returnState&&e.returnState,this.goBackwards=null!=e.goBackwards&&e.goBackwards,this._stateful=null!=e.stateful&&e.stateful,this.unroll=null!=e.unroll&&e.unroll,this.supportsMasking=!0,this.inputSpec=[new Jy({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){return null==this.states_?Pg(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map((e=>null)):this.states_}setStates(e){this.states_=e}computeOutputShape(e){Gy(e)&&(e=e[0]),e=e;let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);const n=t[0];let r;if(r=this.returnSequences?[e[0],e[1],n]:[e[0],n],this.returnState){const n=[];for(const r of t)n.push([e[0],r]);return[r].concat(n)}return r}computeMask(e,t){return jo((()=>{Array.isArray(t)&&(t=t[0]);const e=this.returnSequences?t:null;if(this.returnState){const t=this.states.map((e=>null));return[e].concat(t)}return e}))}get states(){if(null==this.states_){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}return this.states_}set states(e){this.states_=e}build(e){if(null!=this.numConstants)throw new Pm("Constants support is not implemented in RNN yet.");Gy(e)&&(e=e[0]),e=e;const t=this.stateful?e[0]:null,n=e.slice(2);this.inputSpec[0]=new Jy({shape:[t,null,...n]});const r=[e[0]].concat(e.slice(2));let a;if(this.cell.build(r),a=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!ca.arraysEqual(this.stateSpec.map((e=>e.shape[e.shape.length-1])),a))throw new zm(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=a.map((e=>new Jy({shape:[null,e]})));this.stateful&&this.resetStates()}resetStates(e,t=!1){jo((()=>{if(!this.stateful)throw new Om("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape[0];if(null==n)throw new zm("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>Cc([n,e]))):this.states_=[Cc([n,this.cell.stateSize])];else if(null==e)qo(this.states_),null!=this.keptStates&&(qo(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>Cc([n,e]))):this.states_[0]=Cc([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new zm(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);!0===t?this.keptStates.push(this.states_.slice()):qo(this.states_);for(let t=0;t<this.states_.length;++t){const r=e[t],a=Array.isArray(this.cell.stateSize)?this.cell.stateSize[t]:this.cell.stateSize,s=[n,a];if(!ca.arraysEqual(r.shape,s))throw new zm(`State ${t} is incompatible with layer ${this.name}: expected shape=${s}, received shape=${r.shape}`);this.states_[t]=r}}this.states_=this.states_.map((e=>Ko(e.clone())))}))}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});const a=Sw(e,n,r,this.numConstants);e=a.inputs,n=a.initialState,r=a.constants;let s=[],i=[];if(null!=n){t.initialState=n,s=s.concat(n),this.stateSpec=[];for(const e of n)this.stateSpec.push(new Jy({shape:e.shape}));i=i.concat(this.stateSpec)}if(null!=r&&(t.constants=r,s=s.concat(r),this.numConstants=r.length),s[0]instanceof Qy){const n=[e].concat(s),r=this.inputSpec.concat(i),a=this.inputSpec;this.inputSpec=r;const o=super.apply(n,t);return this.inputSpec=a,o}return super.apply(e,t)}call(e,t){return jo((()=>{const n=null==t?null:t.mask,r=null==t?null:t.training;let a=null==t?null:t.initialState;e=jy(e),null==a&&(a=this.stateful?this.states_:this.getInitialState(e));const s=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(a.length!==s)throw new zm(`RNN Layer has ${s} state(s) but was passed ${a.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const i={training:r},o=Nw(((e,t)=>{const n=this.cell.call([e].concat(t),i);return[n[0],n.slice(1)]}),e,a,this.goBackwards,n,null,this.unroll,this.returnSequences),u=o[0],l=o[1],c=o[2];this.stateful&&this.resetStates(c,r);const h=this.returnSequences?l:u;return this.returnState?[h].concat(c):h}))}getInitialState(e){return jo((()=>{let t=Cc(e.shape);return t=oc(t,[1,2]),t=Wg(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map((e=>e>1?qg(t,[1,e]):t)):this.cell.stateSize>1?[qg(t,[1,this.cell.stateSize])]:[t]}))}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){const e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(t.numConstants=this.numConstants);const n=this.cell.getConfig();return this.getClassName()===Tw.className&&(t.cell={className:this.cell.getClassName(),config:n}),Object.assign({},n,e,t)}static fromConfig(e,t,n={}){const r=xb(t.cell,n);return new e(Object.assign(t,{cell:r}))}};Tw.className="RNN",vo.registerClass(Tw);var Cw=class extends rb{},$w=class extends Cw{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,rg(this.units,"units"),this.activation=jx(null==e.activation?this.DEFAULT_ACTIVATION:e.activation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Iy(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Iy(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Iy(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Qx(e.kernelRegularizer),this.recurrentRegularizer=Qx(e.recurrentRegularizer),this.biasRegularizer=Qx(e.biasRegularizer),this.kernelConstraint=mg(e.kernelConstraint),this.recurrentConstraint=mg(e.recurrentConstraint),this.biasConstraint=mg(e.biasConstraint),this.dropout=Lg([1,zg([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Lg([1,zg([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=qy(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return jo((()=>{if(2!==(e=e).length)throw new zm(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let n=e[1];e=e[0];const r=null!=t.training&&t.training;let a;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Mw({ones:()=>Pc(e),rate:this.dropout,training:r})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Mw({ones:()=>Pc(n),rate:this.recurrentDropout,training:r}));const s=this.dropoutMask,i=this.recurrentDropoutMask;a=Xg(null!=s?uu(e,s):e,this.kernel.read()),null!=this.bias&&(a=Qg(a,this.bias.read())),null!=i&&(n=uu(n,i));let o=su(a,Xg(n,this.recurrentKernel.read()));return null!=this.activation&&(o=this.activation.apply(o)),[o,o]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:Gx(this.activation),useBias:this.useBias,kernelInitializer:ky(this.kernelInitializer),recurrentInitializer:ky(this.recurrentInitializer),biasInitializer:ky(this.biasInitializer),kernelRegularizer:Zx(this.kernelRegularizer),recurrentRegularizer:Zx(this.recurrentRegularizer),biasRegularizer:Zx(this.biasRegularizer),activityRegularizer:Zx(this.activityRegularizer),kernelConstraint:pg(this.kernelConstraint),recurrentConstraint:pg(this.recurrentConstraint),biasConstraint:pg(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign({},e,t)}};$w.className="SimpleRNNCell",vo.registerClass($w);var _w=class extends Tw{constructor(e){e.cell=new $w(e),super(e)}call(e,t){return jo((()=>{null!=this.cell.dropoutMask&&(qo(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(qo(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})}))}static fromConfig(e,t){return new e(t)}};_w.className="SimpleRNN",vo.registerClass(_w);var Ew=class extends Cw{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new zm("GRUCell does not support reset_after parameter set to true.");this.units=e.units,rg(this.units,"units"),this.activation=jx(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=jx(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Iy(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Iy(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Iy(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Qx(e.kernelRegularizer),this.recurrentRegularizer=Qx(e.recurrentRegularizer),this.biasRegularizer=Qx(e.biasRegularizer),this.kernelConstraint=mg(e.kernelConstraint),this.recurrentConstraint=mg(e.recurrentConstraint),this.biasConstraint=mg(e.biasConstraint),this.dropout=Lg([1,zg([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Lg([1,zg([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){const t=(e=qy(e))[e.length-1];this.kernel=this.addWeight("kernel",[t,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return jo((()=>{if(2!==(e=e).length)throw new zm(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);const n=null!=t.training&&t.training;let r=e[1];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Mw({ones:()=>Pc(e),rate:this.dropout,training:n,count:3})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Mw({ones:()=>Pc(r),rate:this.recurrentDropout,training:n,count:3}));const a=this.dropoutMask,s=this.recurrentDropoutMask;let i,o,u;0<this.dropout&&this.dropout<1&&(e=uu(e,a[0]));let l=Xg(e,this.kernel.read());this.useBias&&(l=Qg(l,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(r=uu(r,s[0]));const c=this.recurrentKernel.read(),[h,d]=Eh(c,[2*this.units,this.units],c.rank-1),p=Xg(r,h),[f,m,g]=Eh(l,3,l.rank-1),[y,b]=Eh(p,2,p.rank-1);i=this.recurrentActivation.apply(su(f,y)),o=this.recurrentActivation.apply(su(m,b));const x=Xg(uu(o,r),d);u=this.activation.apply(su(g,x));const w=su(uu(i,r),uu(su(1,nc(i)),u));return[w,w]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:Gx(this.activation),recurrentActivation:Gx(this.recurrentActivation),useBias:this.useBias,kernelInitializer:ky(this.kernelInitializer),recurrentInitializer:ky(this.recurrentInitializer),biasInitializer:ky(this.biasInitializer),kernelRegularizer:Zx(this.kernelRegularizer),recurrentRegularizer:Zx(this.recurrentRegularizer),biasRegularizer:Zx(this.biasRegularizer),activityRegularizer:Zx(this.activityRegularizer),kernelConstraint:pg(this.kernelConstraint),recurrentConstraint:pg(this.recurrentConstraint),biasConstraint:pg(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign({},e,t)}};Ew.className="GRUCell",vo.registerClass(Ew);var Aw=class extends Tw{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new Ew(e),super(e)}call(e,t){return jo((()=>{null!=this.cell.dropoutMask&&(qo(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(qo(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}};Aw.className="GRU",vo.registerClass(Aw);var Fw=class extends Cw{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,rg(this.units,"units"),this.activation=jx(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=jx(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Iy(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Iy(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Iy(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=Qx(e.kernelRegularizer),this.recurrentRegularizer=Qx(e.recurrentRegularizer),this.biasRegularizer=Qx(e.biasRegularizer),this.kernelConstraint=mg(e.kernelConstraint),this.recurrentConstraint=mg(e.recurrentConstraint),this.biasConstraint=mg(e.biasConstraint),this.dropout=Lg([1,zg([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Lg([1,zg([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;const n=(e=qy(e))[e.length-1];let r;if(this.kernel=this.addWeight("kernel",[n,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const e=this.biasInitializer,n=this.units;r=new((t=class extends ay{apply(t,r){const a=e.apply([n]),s=(new iy).apply([n]),i=e.apply([2*n]);return jg(jg(a,s),i)}}).className="CustomInit",t)}else r=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,r,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return jo((()=>{const n=null!=t.training&&t.training;if(3!==(e=e).length)throw new zm(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let r=e[1];const a=e[2];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Mw({ones:()=>Pc(e),rate:this.dropout,training:n,count:4})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Mw({ones:()=>Pc(r),rate:this.recurrentDropout,training:n,count:4}));const s=this.dropoutMask,i=this.recurrentDropoutMask;let o,u,l,c;0<this.dropout&&this.dropout<1&&(e=uu(e,s[0]));let h=Xg(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(r=uu(r,i[0])),h=su(h,Xg(r,this.recurrentKernel.read())),this.useBias&&(h=Qg(h,this.bias.read()));const[d,p,f,m]=Eh(h,4,h.rank-1);o=this.recurrentActivation.apply(d),u=this.recurrentActivation.apply(p),l=su(uu(u,a),uu(o,this.activation.apply(f))),c=this.recurrentActivation.apply(m);const g=uu(c,this.activation.apply(l));return[g,g,l]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:Gx(this.activation),recurrentActivation:Gx(this.recurrentActivation),useBias:this.useBias,kernelInitializer:ky(this.kernelInitializer),recurrentInitializer:ky(this.recurrentInitializer),biasInitializer:ky(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:Zx(this.kernelRegularizer),recurrentRegularizer:Zx(this.recurrentRegularizer),biasRegularizer:Zx(this.biasRegularizer),activityRegularizer:Zx(this.activityRegularizer),kernelConstraint:pg(this.kernelConstraint),recurrentConstraint:pg(this.recurrentConstraint),biasConstraint:pg(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign({},e,t)}};Fw.className="LSTMCell",vo.registerClass(Fw);var Rw=class extends Tw{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new Fw(e),super(e)}call(e,t){return jo((()=>{null!=this.cell.dropoutMask&&(qo(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(qo(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}};Rw.className="LSTM",vo.registerClass(Rw);var Dw=class extends Cw{constructor(e){super(e),this.cells=e.cells}get stateSize(){const e=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return jo((()=>{let n=(e=e).slice(1);const r=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?r.push(n.splice(0,e.stateSize.length)):r.push(n.splice(0,1));r.reverse();const a=[];let s;for(let i=0;i<this.cells.length;++i){const o=this.cells[i];n=r[i],s=0===i?[e[0]].concat(n):[s[0]].concat(n),s=o.call(s,t),a.push(s.slice(1))}n=[];for(const e of a.slice().reverse())n.push(...e);return[s[0]].concat(n)}))}build(e){let t;Gy(e)&&(e=e[0]),e=e,this.cells.forEach(((n,r)=>{Ag(`RNNCell_${r}`,(()=>{n.build(e),t=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,e=[e[0],t]}))})),this.built=!0}getConfig(){const e=super.getConfig(),t={cells:this.cells.map((e=>({className:e.getClassName(),config:e.getConfig()})))};return Object.assign({},e,t)}static fromConfig(e,t,n={}){const r=[];for(const e of t.cells)r.push(xb(e,n));return new e({cells:r})}get trainableWeights(){if(!this.trainable)return[];const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t.concat(e)}return e}getWeights(){const e=[];for(const t of this.cells)e.push(...t.weights);return Yy(e)}setWeights(e){const t=[];for(const n of this.cells){const r=n.weights.length,a=e.splice(r);for(let e=0;e<n.weights.length;++e)t.push([n.weights[e],a[e]])}Zy(t)}};function Mw(e){const{ones:t,rate:n,training:r=!1,count:a=1}=e,s=()=>ey(t(),n),i=()=>ty(s,t,r);return!a||a<=1?Ko(i().clone()):Array(a).fill(void 0).map(i).map((e=>Ko(e.clone())))}Dw.className="StackedRNNCells",vo.registerClass(Dw);var Ow=class extends Tw{constructor(e){if(e.unroll)throw new Pm("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new Pm("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new Jy({ndim:5})]}call(e,t){return jo((()=>{if(null!=this.cell.dropoutMask&&(qo(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(qo(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new zm("ConvRNN2D cell does not support constants");const n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})}))}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return jo((()=>{const{stateSize:t}=this.cell,n=e.shape,r=this.computeSingleOutputShape(n),a=Cc([r[0],...r.slice(2)]);return Array.isArray(t)?Array(t.length).fill(a):[a]}))}resetStates(e,t=!1){jo((()=>{if(!this.stateful)throw new Om("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape,r=this.computeSingleOutputShape(n),a=[r[0],...r.slice(2)];if(null==n[0])throw new zm("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>Cc(a))):this.states_=[Cc(a)];else if(null==e)qo(this.states_),null!=this.keptStates&&(qo(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>Cc(a))):this.states_[0]=Cc(a);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new zm(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):qo(this.states_);for(let t=0;t<this.states_.length;++t){const n=e[t],r=a;if(!ca.arraysEqual(n.shape,r))throw new zm(`State ${t} is incompatible with layer ${this.name}: expected shape=${r}, received shape=${n.shape}`);this.states_[t]=n}}this.states_=this.states_.map((e=>Ko(e.clone())))}))}computeSingleOutputShape(e){const{dataFormat:t,filters:n,kernelSize:r,padding:a,strides:s,dilationRate:i}=this.cell,o="channelsFirst"===t,u=e[o?3:2],l=e[o?4:3],c=ow(u,r[0],a,s[0],i[0]),h=ow(l,r[1],a,s[1],i[1]);return[...e.slice(0,2),...o?[n,c,h]:[c,h,n]]}};Ow.className="ConvRNN2D";var Lw=class extends Fw{constructor(e){const{filters:t,kernelSize:n,strides:r,padding:a,dataFormat:s,dilationRate:i}=e;super(Object.assign({},e,{units:t})),this.filters=t,rg(this.filters,"filters"),this.kernelSize=iw(n,2,"kernelSize"),this.kernelSize.forEach((e=>rg(e,"kernelSize"))),this.strides=iw(r||1,2,"strides"),this.strides.forEach((e=>rg(e,"strides"))),this.padding=a||"valid",$g(this.padding),this.dataFormat=s||"channelsLast",Cg(this.dataFormat),this.dilationRate=iw(i||1,2,"dilationRate"),this.dilationRate.forEach((e=>rg(e,"dilationRate")))}build(e){var t;e=qy(e);const n="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[n])throw new zm(`The channel dimension of the input should be defined. Found ${e[n]}`);const r=e[n],a=this.kernelSize.concat([r,4*this.filters]);this.kernel=this.addWeight("kernel",a,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const s=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",s,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let e;if(this.unitForgetBias){const n=this.biasInitializer,r=this.filters;e=new((t=class extends ay{apply(e,t){return Hg([n.apply([r]),$c([r]),n.apply([2*r])])}}).className="CustomInit",t)}else e=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,e,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return jo((()=>{if(3!==e.length)throw new zm(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);const n=t.training||!1,r=e[0],a=e[1],s=e[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Mw({ones:()=>Pc(r),rate:this.dropout,training:n,count:4}));const i=this.dropoutMask,o=(e,t,n)=>t&&t[n]?uu(t[n],e):e;let u=o(r,i,0),l=o(r,i,1),c=o(r,i,2),h=o(r,i,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Mw({ones:()=>Pc(a),rate:this.recurrentDropout,training:n,count:4}));const d=this.recurrentDropoutMask;let p=o(a,d,0),f=o(a,d,1),m=o(a,d,2),g=o(a,d,3);const[y,b,x,w]=Eh(this.kernel.read(),4,3),[v,k,I,S]=this.useBias?Eh(this.bias.read(),4):[null,null,null,null];u=this.inputConv(u,y,v,this.padding),l=this.inputConv(l,b,k,this.padding),c=this.inputConv(c,x,I,this.padding),h=this.inputConv(h,w,S,this.padding);const[N,T,C,$]=Eh(this.recurrentKernel.read(),4,3);p=this.recurrentConv(p,N),f=this.recurrentConv(f,T),m=this.recurrentConv(m,C),g=this.recurrentConv(g,$);const _=this.recurrentActivation.apply(su(u,p)),E=this.recurrentActivation.apply(su(l,f)),A=su(uu(E,s),uu(_,this.activation.apply(su(c,m)))),F=uu(this.recurrentActivation.apply(su(h,g)),this.activation.apply(A));return[F,F,A]}))}getConfig(){const e=super.getConfig(),{units:t}=e,n=function(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var a=0;for(r=Object.getOwnPropertySymbols(e);a<r.length;a++)t.indexOf(r[a])<0&&Object.prototype.propertyIsEnumerable.call(e,r[a])&&(n[r[a]]=e[r[a]])}return n}(e,["units"]),r={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign({},n,r)}inputConv(e,t,n,r){const a=nl(e,t,this.strides,r||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?Qg(a,n,this.dataFormat):a}recurrentConv(e,t){return nl(e,t,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}};Lw.className="ConvLSTM2DCell",vo.registerClass(Lw);var zw=class extends Ow{constructor(e){const t=new Lw(e);super(Object.assign({},e,{cell:t}))}static fromConfig(e,t){return new e(t)}};zw.className="ConvLSTM2D",vo.registerClass(zw);var Pw=class extends rb{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(null==this.noiseShape)return this.noiseShape;const t=e.shape,n=[];for(let e=0;e<this.noiseShape.length;++e)n.push(null==this.noiseShape[e]?t[e]:this.noiseShape[e]);return n}call(e,t){return jo((()=>{this.invokeCallHook(e,t);const n=jy(e);if(0<this.rate&&this.rate<1){const e=null!=t.training&&t.training,r=this.getNoiseShape(n);return ty((()=>ey(n,this.rate,r,this.seed)),(()=>n),e)}return e}))}getConfig(){const e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}};Pw.className="Dropout",vo.registerClass(Pw);var Bw=class extends Pw{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){const t=e.shape;return[t[0],1,t[2]]}};Bw.className="SpatialDropout1D",vo.registerClass(Bw);var Ww=class extends rb{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==e.batchInputShape&&null==e.inputShape&&null!=e.inputDim){let t=null;null!=e.batchSize&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,rg(this.units,"units"),this.activation=jx(e.activation),null!=e.useBias&&(this.useBias=e.useBias),this.kernelInitializer=Iy(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=Iy(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=mg(e.kernelConstraint),this.biasConstraint=mg(e.biasConstraint),this.kernelRegularizer=Qx(e.kernelRegularizer),this.biasRegularizer=Qx(e.biasRegularizer),this.activityRegularizer=Qx(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){const t=(e=qy(e))[e.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){const t=(e=qy(e)).slice();return t[t.length-1]=this.units,t}call(e,t){return jo((()=>{this.invokeCallHook(e,t);const n=jy(e),r=sg(this.activation.getClassName());let a;return null!=r?a=Xg(n,this.kernel.read(),r,this.bias?this.bias.read():null):(a=Xg(n,this.kernel.read()),null!=this.bias&&(a=Qg(a,this.bias.read())),null!=this.activation&&(a=this.activation.apply(a))),a}))}getConfig(){const e={units:this.units,activation:Gx(this.activation),useBias:this.useBias,kernelInitializer:ky(this.kernelInitializer),biasInitializer:ky(this.biasInitializer),kernelRegularizer:Zx(this.kernelRegularizer),biasRegularizer:Zx(this.biasRegularizer),activityRegularizer:Zx(this.activityRegularizer),kernelConstraint:pg(this.kernelConstraint),biasConstraint:pg(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}};Ww.className="Dense",vo.registerClass(Ww);var Vw=class extends rb{constructor(e){super(e=e||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=qy(e);for(const t of e.slice(1))if(null==t)throw new zm(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],Og(e,1)]}call(e,t){return jo((()=>{this.invokeCallHook(e,t);let n=jy(e);if("channelsFirst"===this.dataFormat&&n.rank>1){const e=[0];for(let t=2;t<n.rank;++t)e.push(t);e.push(1),n=Ui(n,e)}return function(e){if(e.rank<=1)throw new zm(`batchFlatten requires a minimum rank of 2. Got rank: ${e.rank}.`);const t=[e.shape[0],Og(e.shape,1)];return Mu(e,t)}(n)}))}getConfig(){const e={};null!=this.dataFormat&&(e.dataFormat=this.dataFormat);const t=super.getConfig();return Object.assign(e,t),e}};Vw.className="Flatten",vo.registerClass(Vw);var Uw=class extends rb{constructor(e){super(e),this.supportsMasking=!0,this.activation=jx(e.activation)}call(e,t){return jo((()=>{this.invokeCallHook(e,t);const n=jy(e);return this.activation.apply(n)}))}getConfig(){const e={activation:Gx(this.activation)},t=super.getConfig();return Object.assign(e,t),e}};Uw.className="Activation",vo.registerClass(Uw);var Gw=class extends rb{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return jo((()=>{return e=jy(e),t=e,n=this.n,jo((()=>{if(2!==t.shape.length)throw new zm(`repeat() expects a rank-2 tensor, but received a rank-${t.shape.length} tensor.`);return qg(Wg(t,1),[1,n,1])}));var t,n}))}getConfig(){const e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}};Gw.className="RepeatVector",vo.registerClass(Gw);var Hw=class extends rb{constructor(e){super(e),this.targetShape=e.targetShape;for(let e=0;e<this.targetShape.length;++e)this.isUnknown(this.targetShape[e])&&(this.targetShape[e]=null)}isUnknown(e){return e<0||null==e}fixUnknownDimension(e,t){const n="Total size of new array must be unchanged.",r=t.slice();let a=1,s=null;for(let e=0;e<r.length;++e){const t=r[e];if(this.isUnknown(t)){if(null!==s)throw new zm("Can only specifiy one unknown dimension.");s=e}else a*=t}const i=Og(e);if(null!==s){if(0===a||i%a!=0)throw new zm(n);r[s]=i/a}else if(i!==a)throw new zm(n);return r}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return jo((()=>{this.invokeCallHook(e,t);const n=jy(e),r=n.shape,a=r.slice(0,1).concat(this.fixUnknownDimension(r.slice(1),this.targetShape));return Mu(n,a)}))}getConfig(){const e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}};Hw.className="Reshape",vo.registerClass(Hw);var jw=class extends rb{constructor(e){if(super(e),null==e.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);const t=Pg(1,e.dims.length+1);if(!ca.arraysEqual(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new Jy({ndim:this.dims.length+1})]}computeOutputShape(e){const t=(e=qy(e)).slice();return this.dims.forEach(((n,r)=>{t[r+1]=e[n]})),t}call(e,t){return Ui(jy(e),this.dimsIncludingBatch)}getConfig(){const e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}};jw.className="Permute",vo.registerClass(jw);var qw=class extends rb{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,this.maskValue=null!=e?null==e.maskValue?0:e.maskValue:0}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){const n=jy(e);return fu(zc(n,this.maskValue),-1)}call(e,t){return jo((()=>{this.invokeCallHook(e,t);const n=jy(e),r=fu(zc(n,this.maskValue),-1,!0);return uu(n,wi(r,n.dtype))}))}};qw.className="Masking",vo.registerClass(qw);var Kw=class extends rb{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==e.batchInputShape&&null==e.inputShape){let t=null;null!=e.batchSize&&(t=e.batchSize),null==e.inputLength?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(Hm(e.inputLength))}this.inputDim=e.inputDim,rg(this.inputDim,"inputDim"),this.outputDim=e.outputDim,rg(this.outputDim,"outputDim"),this.embeddingsInitializer=Iy(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=Qx(e.embeddingsRegularizer),this.activityRegularizer=Qx(e.activityRegularizer),this.embeddingsConstraint=mg(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return jo((()=>this.maskZero?(e=jy(e),zc(e,kl(e))):null))}computeOutputShape(e){if(e=qy(e),null==this.inputLength)return[...e,this.outputDim];const t=Hm(this.inputLength);if(t.length!==e.length-1)throw new zm(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let n=0;for(let r=0;r<t.length;++r){const a=t[r],s=e[r+1];if(null!=a&&null!=s&&a!==s)throw new zm(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);null==a&&(t[n]=s),n++}}return[e[0],...t,this.outputDim]}call(e,t){return jo((()=>{this.invokeCallHook(e,t);let n=jy(e);"int32"!==n.dtype&&(n=Bg(n,"int32"));const r=Yg(this.embeddings.read(),Mu(n,[n.size]));return Mu(r,qy(this.computeOutputShape(n.shape)))}))}getConfig(){const e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:ky(this.embeddingsInitializer),embeddingsRegularizer:Zx(this.embeddingsRegularizer),activityRegularizer:Zx(this.activityRegularizer),embeddingsConstraint:pg(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}};Kw.className="Embedding",vo.registerClass(Kw);var Xw=class extends rb{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new Pm}computeElementwiseOpOutputShape(e,t){if(null==e||null==t)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(0===t.length)return e;const n=e.slice(0,e.length-t.length);for(let r=0;r<t.length;++r){const a=e[e.length-t.length+r],s=t[r];if(null==a||null==s||a<0||s<0)n.push(null);else if(1===a)n.push(s);else if(1===s)n.push(a);else{if(a!==s)throw new zm("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(a)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[qy(e)]),(e=e).length<2)throw new zm(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(const n of e)null!=n&&null!==n[0]&&t.push(n[0]);if(t=Qm(t),t.length>1)throw new zm(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let n=null==e[0]?null:e[0].slice(1);for(let t=1;t<e.length;++t){const r=null==e[t]?null:e[t].slice(1);n=this.computeElementwiseOpOutputShape(n,r)}const r=e.map((e=>e.length));-1===e.indexOf(null)&&1===Qm(r).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return jo((()=>{if(e=e,this.reshapeRequired){const t=[],n=e.map((e=>e.rank));if(-1===n.indexOf(null)){const r=zg(n);for(let n of e){const e=n.rank;for(let t=0;t<r-e;++t)n=Wg(n,1);t.push(n)}return this.mergeFunction(t)}{let n=!1;for(const r of e){const e=r.rank;if(null==e){const e=r.shape,a=e[0],s=e.slice(1).concat([a]);let i=Mu(r,[a].concat(Og(e.slice(1))));i=Ui(i,[1,0]),i=Mu(i,s),t.push(i),n=!0}else if(e>1){const a=Pg(1,e).concat([0]);t.push(Ui(r,a)),n=!0}else t.push(r)}let r=this.mergeFunction(t);const a=r.rank;if(n)if(null==a){const e=r.shape,t=e[e.length-1],n=[t].concat(e.slice(0,e.length-1));r=Mu(Ui(Mu(r,[-1,t]),[1,0]),n)}else if(a>1){const e=[a-1].concat(Pg(0,a-1));r=Ui(r,e)}return r}}return this.mergeFunction(e)}))}computeOutputShape(e){let t;t=null==(e=e)[0]?null:e[0].slice(1);for(let n=1;n<e.length;++n){const r=null==e[n]?null:e[n].slice(1);t=this.computeElementwiseOpOutputShape(t,r)}let n=[];for(const t of e)null!=t&&null!==t[0]&&n.push(t[0]);return n=Qm(n),t=1===n.length?n.concat(t):[null].concat(t),t}computeMask(e,t){return jo((()=>{if(null==t)return null;if(!Array.isArray(t))throw new zm("`mask` should be an Array");if(!Array.isArray(e))throw new zm("`inputs` should be an Array");if(t.length!==e.length)throw new zm(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every((e=>null==e)))return null;let n=(t=t.map((e=>null==e?e:_l(e,0))))[0];for(let e=1;e<t.length-1;++e)n=bc(n,t[e]);return n}))}},Yw=class extends Xw{constructor(e){super(e)}mergeFunction(e){return jo((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=su(t,e[n]);return t}))}};Yw.className="Add",vo.registerClass(Yw);var Zw=class extends Xw{constructor(e){super(e)}mergeFunction(e){return jo((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=uu(t,e[n]);return t}))}};Zw.className="Multiply",vo.registerClass(Zw);var Jw=class extends Xw{constructor(e){super(e)}mergeFunction(e){return jo((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=su(t,e[n]);return uu(1/e.length,t)}))}};Jw.className="Average",vo.registerClass(Jw);var Qw=class extends Xw{constructor(e){super(e)}mergeFunction(e){return jo((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=Nc(t,e[n]);return t}))}};Qw.className="Maximum",vo.registerClass(Qw);var ev=class extends Xw{constructor(e){super(e)}mergeFunction(e){return jo((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=Ac(t,e[n]);return t}))}};ev.className="Minimum",vo.registerClass(ev);var tv=class extends Xw{constructor(e){super(e),this.DEFAULT_AXIS=-1,null==e&&(e={}),this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!Array.isArray(e)||!Array.isArray(e[0])||1===e.length)throw new zm("A `Concatenate` layer should be called on a list of at least 2 inputs");e=e;let t=!0;for(const n of e)if(null!=n){t=!1;break}if(t)return;const n=[];for(let t=0;t<e.length;++t){const r=e[t].slice();r.splice(this.axis,1);let a=!1;for(const e of n)if(ca.arraysEqual(e,r)){a=!0;break}a||n.push(r)}if(n.length>1)throw new zm("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return jo((()=>Hg(e,this.axis)))}computeOutputShape(e){if(!Array.isArray(e)||!Array.isArray(e[0]))throw new zm("A `Concatenate` layer should be called on a list of inputs.");const t=e,n=t[0].slice(),r=this.axis<0?n.length+this.axis:this.axis;for(const e of t.slice(1)){if(null==n[r]||null==e[r]){n[r]=null;break}n[r]+=e[r]}return n}computeMask(e,t){if(null==t)return null;if(!Array.isArray(t))throw new zm("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new zm("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new zm(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return jo((()=>{let n=!0;if(t.forEach((e=>{null==e||(n=!1)})),n)return null;const r=[];for(let n=0;n<e.length;++n)null==t[n]?r.push(wi(Pc(e[n]),"bool")):t[n].rank<e[n].rank?r.push(_l(t[n],-1)):r.push(t[n]);const a=zu(r,this.axis);return pu(a,-1,!1)}))}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}};function nv(e,t){for(;e<0;)e+=t;return e}tv.className="Concatenate",vo.registerClass(tv);var rv=class extends Xw{constructor(e){super(e),this.axes=e.axes,this.normalize=null!=e.normalize&&e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){ca.assert(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0],n=e[1];if(t.length>3||n.length>3)throw new Pm("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,n);if(t[r[0]]!==n[r[1]])throw new zm(`Dimension incompatibility: ${t[r[0]]} !== ${n[r[1]]}`)}mergeFunction(e){if(2!==e.length)throw new zm(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t,n=e[0],r=e[1];return t=Array.isArray(this.axes)?this.axes.map(((t,n)=>nv(t,e[n].shape.length))):[nv(this.axes,n.shape.length),nv(this.axes,r.shape.length)],this.normalize&&(n=wb(n,t[0]),r=wb(r,t[1])),function(e,t,n){if(e.shape.length>3||t.shape.length>3)throw new Pm("batchDot is not implemented for tensors of 4D or higher rank yet");if(ca.assert(e.shape.length>=2,(()=>`batchDot requires the rank of x to be >= 2, but got ${e.shape.length}`)),ca.assert(e.shape.length>=2,(()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`)),"number"==typeof n&&(n=[n,n]),"complex64"===e.dtype||"complex64"===t.dtype)throw new Pm("batchDot is not implemented for complex64-type Tensors yet.");const r=e.shape.length,a=t.shape.length;null==n&&(n=[r-1,a-2]);const s=n;return jo((()=>{let n,i;if(r>a){n=r-a;const e=[];for(let t=0;t<n;++t)e.push(1);t=Mu(t,t.shape.concat(e))}else if(a>r){n=a-r;const t=[];for(let e=0;e<n;++e)t.push(1);e=Mu(e,e.shape.concat(t))}else n=0;if(2===e.shape.length&&2===t.shape.length)i=s[0]===s[1]?oc(uu(e,t),s[0]):oc(uu(Ui(e,[1,0]),t),s[1]);else{const n=s[0]!==e.shape.length-1,r=s[1]===t.shape.length-1;i=Wi(e,t,n,r)}if(n>0){let e;e=r>a?r+a-3:r-1;const t=[];for(let r=e;r<e+n;++r)t.push(r);i=Dh(i,t)}return 1===i.shape.length&&(i=_l(i,1)),i}))}(n,r,t)}interpretAxes(e,t){let n;return n=Array.isArray(this.axes)?this.axes:[nv(this.axes,e.length),nv(this.axes,t.length)],n}computeOutputShape(e){ca.assert(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new Pm("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,n);t.splice(r[0],1),n.splice(r[1],1),n.splice(0,1);const a=t.concat(n);return 1===a.length&&a.push(1),a}computeMask(e,t){return null}getConfig(){const e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}};rv.className="Dot",vo.registerClass(rv);var av=class extends rb{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return jo((()=>{this.invokeCallHook(e,t);const n=jy(e);return ty((()=>su(Kg(n.shape,0,this.stddev),n)),(()=>n),t.training||!1)}))}};av.className="GaussianNoise",vo.registerClass(av);var sv=class extends rb{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return jo((()=>{this.invokeCallHook(e,t);const n=jy(e);return this.rate>0&&this.rate<1?ty((()=>{const e=Math.sqrt(this.rate/(1-this.rate));return uu(n,Kg(n.shape,1,e))}),(()=>n),t.training||!1):n}))}};sv.className="GaussianDropout",vo.registerClass(sv);var iv=class extends rb{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||jy(e).shape}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return jo((()=>{if(this.rate<1&&this.rate>0){const n=this._getNoiseShape(e);return ty((()=>{const t=jy(e),r=-1.7580993408473766;let a=Ll(nh(n),this.rate);a=Bg(a,"float32");const s=((1-this.rate)*(1+this.rate*r**2))**-.5,i=-s*r*this.rate,o=su(uu(t,a),uu(su(a,-1),r));return su(uu(o,s),i)}),(()=>jy(e)),t.training||!1)}return e}))}};function ov(e,t,n,r,a,s=.001){let i;if(2===e.rank)i=Hu(e,t,n,r,a,s);else if(3===e.rank)i=ju(e,t,n,r,a,s);else{if(4!==e.rank)throw new Pm(`batchNormalization is not implemented for array of rank ${e.rank} yet`);i=qu(e,t,n,r,a,s)}return i}iv.className="AlphaDropout",vo.registerClass(iv);var uv=class extends rb{constructor(e){null==e&&(e={}),super(e),this.supportsMasking=!0,this.axis=null==e.axis?-1:e.axis,this.momentum=null==e.momentum?.99:e.momentum,this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=Iy(e.betaInitializer||"zeros"),this.gammaInitializer=Iy(e.gammaInitializer||"ones"),this.movingMeanInitializer=Iy(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=Iy(e.movingVarianceInitializer||"ones"),this.betaConstraint=mg(e.betaConstraint),this.gammaConstraint=mg(e.gammaConstraint),this.betaRegularizer=Qx(e.betaRegularizer),this.gammaRegularizer=Qx(e.gammaRegularizer)}build(e){e=qy(e);const t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(null==n)throw new zm(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new Jy({ndim:e.length,axes:{[t]:n}})];const r=[n];this.scale&&(this.gamma=this.addWeight("gamma",r,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",r,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",r,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",r,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return jo((()=>{const n=null!=t.training&&t.training,r=jy(e),a=r.shape,s=a.length,i=Pg(0,s),o=this.axis>=0?this.axis:this.axis+s;i.splice(o,1);const u=Wm(1,s);u[o]=a[o];const l=i.slice();l.sort();const c=!ca.arraysEqual(l,Pg(0,s).slice(0,s-1));if(!n)return(()=>{if(c){const e=Mu(this.movingMean.read(),u),t=Mu(this.movingVariance.read(),u),n=this.center?Mu(this.beta.read(),u):null,a=this.scale?Mu(this.gamma.read(),u):null;return ov(r,e,t,n,a,this.epsilon)}return ov(r,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();const[h,d,p]=function(e,t,n,r,a=.001){return ca.arraysEqual(r.slice().sort(),Pg(0,e.rank-1))?function(e,t,n,r,a=.001){return jo((()=>{const s=Mc(e,r),i=s.mean,o=s.variance;return[ov(e,i,o,n,t,a),i,o]}))}(e,t,n,r,a):function(e,t,n,r,a=.001){return jo((()=>{const s=Mc(e,r),i=s.mean,o=s.variance,u=[];for(const t of Pg(0,e.rank))-1!==r.indexOf(t)?u.push(1):u.push(e.shape[t]);const l=Mu(i,u),c=Mu(o,u),h=null==t?null:Mu(t,u),d=null==n?null:Mu(n,u);return[ov(e,l,c,d,h,a),i,o]}))}(e,t,n,r,a)}(r,this.gamma.read(),this.beta.read(),i,this.epsilon),f=(e,t,n)=>{jo((()=>{const r=1-n,a=e.read(),s=uu(ic(a,t),r);e.write(ic(a,s))}))};return(()=>{f(this.movingMean,d,this.momentum),f(this.movingVariance,p,this.momentum)})(),h}))}getConfig(){const e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:ky(this.betaInitializer),gammaInitializer:ky(this.gammaInitializer),movingMeanInitializer:ky(this.movingMeanInitializer),movingVarianceInitializer:ky(this.movingVarianceInitializer),betaRegularizer:Zx(this.betaRegularizer),gammaRegularizer:Zx(this.gammaRegularizer),betaConstraint:pg(this.betaConstraint),gammaConstraint:pg(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}};uv.className="BatchNormalization",vo.registerClass(uv);var lv=class extends rb{constructor(e){if(null==e&&(e={}),super(e),this.axis=null==e.axis?-1:e.axis,"number"==typeof this.axis){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else{if(!Array.isArray(this.axis))throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);for(const e of this.axis)if(!Number.isInteger(e))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=Iy(e.betaInitializer||"zeros"),this.gammaInitializer=Iy(e.gammaInitializer||"ones"),this.betaRegularizer=Qx(e.betaRegularizer),this.gammaRegularizer=Qx(e.gammaRegularizer),this.supportsMasking=!0}build(e){const t=(e=qy(e)).length;"number"==typeof this.axis&&(this.axis=[this.axis]);for(let e=0;e<this.axis.length;++e)this.axis[e]<0&&(this.axis[e]+=t);for(const e of this.axis)if(e<0||e>=t)throw new Error(`Invalid axis: ${e}`);if(this.axis.length!==Qm(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const n=this.axis.map((t=>e[t]));this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,!0):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,!0):this.beta=null,this.built=!0}call(e,t){const n=jy(e),r=n.shape,a=r.length;return jo((()=>{let{mean:e,variance:t}=Mc(n,this.axis,!0);const s=Wm(1,a);for(const e of this.axis)s[e]=r[e];const i=e=>null!=e&&e.shape.length!==a&&this.axis!==[a-1]?Mu(e,s):e;let o=i(this.gamma.read()),u=i(this.beta.read());const l=[],c=[];for(let e=0;e<a;++e)-1!==this.axis.indexOf(e)?(l.push(r[e]),c.push(1)):(l.push(1),c.push(r[e]));return e=Al(e,l),t=Al(t,l),o=Al(o,c),u=Al(u,c),ov(n,e,t,u,o,this.epsilon)}))}getConfig(){const e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:ky(this.betaInitializer),gammaInitializer:ky(this.gammaInitializer),betaRegularizer:Zx(this.betaRegularizer),gammaRegularizer:Zx(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}};lv.className="LayerNormalization",vo.registerClass(lv);var cv=class extends rb{constructor(e){if(null==e&&(e={}),super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,null==e.padding)this.padding=[[1,1],[1,1]];else if("number"==typeof e.padding)this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,2!==e.padding.length)throw new zm(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,n;if("number"==typeof e.padding[0])t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,2!==e.padding[0].length)throw new zm(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],2!==e.padding[1].length)throw new zm(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new Jy({ndim:4})]}computeOutputShape(e){let t,n;return e=qy(e),"channelsFirst"===this.dataFormat?(t=null!=e[2]&&e[2]>=0?e[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[3]&&e[3]>=0?e[3]+this.padding[1][0]+this.padding[1][1]:null,[e[0],e[1],t,n]):(t=null!=e[1]&&e[1]>=0?e[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[2]&&e[2]>=0?e[2]+this.padding[1][0]+this.padding[1][1]:null,[e[0],t,n,e[3]])}call(e,t){return jo((()=>{return t=jy(e),n=this.padding,r=this.dataFormat,jo((()=>{if(4!==t.rank)throw new zm(`temporalPadding expects input tensor to be 4-D, but received a ${t.rank}-D tensor.`);if(null==n&&(n=[[1,1],[1,1]]),2!==n.length||2!==n[0].length||2!==n[1].length)throw new zm("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==r&&(r="channelsLast"),"channelsLast"!==r&&"channelsFirst"!==r)throw new zm(`Unknown data format: ${r}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let e;return e="channelsFirst"===r?[[0,0],[0,0],n[0],n[1]]:[[0,0],n[0],n[1],[0,0]],Wc(t,e)}));var t,n,r}))}getConfig(){const e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};function hv(e,t,n,r,a,s){return jo((()=>{let i;Cg(a),_g(s),$g(r),null==n&&(n=[1,1]),null==r&&(r="valid"),null==a&&(a="channelsLast"),null==s&&(s="max"),e=lw(e,a);const o="same"===r?"same":"valid";return i="max"===s?kc(e,t,n,o):Ou(e,t,n,o),"channelsFirst"===a&&(i=Ui(i,[0,3,1,2])),i}))}function dv(e,t,n,r,a,s){return jo((()=>{let i;Cg(a),_g(s),$g(r),null==n&&(n=[1,1,1]),null==r&&(r="valid"),null==a&&(a="channelsLast"),null==s&&(s="max"),e=cw(e,a);const o="same"===r?"same":"valid";return i="max"===s?Ic(e,t,n,o):Lu(e,t,n,o),"channelsFirst"===a&&(i=Ui(i,[0,4,1,2,3])),i}))}cv.className="ZeroPadding2D",vo.registerClass(cv);var pv=class extends rb{constructor(e){if(null==e.poolSize&&(e.poolSize=2),super(e),"number"==typeof e.poolSize)this.poolSize=[e.poolSize];else{if(!Array.isArray(e.poolSize)||1!==e.poolSize.length||"number"!=typeof e.poolSize[0])throw new zm(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);this.poolSize=e.poolSize}if(rg(this.poolSize,"poolSize"),null==e.strides)this.strides=this.poolSize;else if("number"==typeof e.strides)this.strides=[e.strides];else{if(!Array.isArray(e.strides)||1!==e.strides.length||"number"!=typeof e.strides[0])throw new zm(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);this.strides=e.strides}rg(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,$g(this.padding),this.inputSpec=[new Jy({ndim:3})]}computeOutputShape(e){const t=ow((e=qy(e))[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return jo((()=>{this.invokeCallHook(e,t),e=Wg(jy(e),2);const n=this.poolingFunction(jy(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return Dh(n,[2])}))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}},fv=class extends pv{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return Cg(a),$g(r),hv(e,t,n,r,a,"max")}};fv.className="MaxPooling1D",vo.registerClass(fv);var mv=class extends pv{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return Cg(a),$g(r),hv(e,t,n,r,a,"avg")}};mv.className="AveragePooling1D",vo.registerClass(mv);var gv=class extends rb{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(2!==e.strides.length)throw new zm(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];rg(this.poolSize,"poolSize"),rg(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Cg(this.dataFormat),$g(this.padding),this.inputSpec=[new Jy({ndim:4})]}computeOutputShape(e){e=qy(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2];return t=ow(t,this.poolSize[0],this.padding,this.strides[0]),n=ow(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return jo((()=>(this.invokeCallHook(e,t),this.poolingFunction(jy(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},yv=class extends gv{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return Cg(a),$g(r),hv(e,t,n,r,a,"max")}};yv.className="MaxPooling2D",vo.registerClass(yv);var bv=class extends gv{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return Cg(a),$g(r),hv(e,t,n,r,a,"avg")}};bv.className="AveragePooling2D",vo.registerClass(bv);var xv=class extends rb{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(3!==e.strides.length)throw new zm(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];rg(this.poolSize,"poolSize"),rg(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Cg(this.dataFormat),$g(this.padding),this.inputSpec=[new Jy({ndim:5})]}computeOutputShape(e){e=qy(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[4]:e[3];return t=ow(t,this.poolSize[0],this.padding,this.strides[0]),n=ow(n,this.poolSize[1],this.padding,this.strides[1]),r=ow(r,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n,r]:[e[0],t,n,r,e[4]]}call(e,t){return jo((()=>(this.invokeCallHook(e,t),this.poolingFunction(jy(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},wv=class extends xv{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return Cg(a),$g(r),dv(e,t,n,r,a,"max")}};wv.className="MaxPooling3D",vo.registerClass(wv);var vv=class extends xv{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return Cg(a),$g(r),dv(e,t,n,r,a,"avg")}};vv.className="AveragePooling3D",vo.registerClass(vv);var kv=class extends rb{constructor(e){super(e),this.inputSpec=[new Jy({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new Pm}},Iv=class extends kv{constructor(e){super(e||{})}call(e,t){return jo((()=>{const t=jy(e);return Tc(t,1)}))}};Iv.className="GlobalAveragePooling1D",vo.registerClass(Iv);var Sv=class extends kv{constructor(e){super(e||{})}call(e,t){return jo((()=>{const t=jy(e);return sc(t,1)}))}};Sv.className="GlobalMaxPooling1D",vo.registerClass(Sv);var Nv=class extends rb{constructor(e){super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Cg(this.dataFormat),this.inputSpec=[new Jy({ndim:4})]}computeOutputShape(e){return e=e,"channelsLast"===this.dataFormat?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new Pm}getConfig(){const e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},Tv=class extends Nv{call(e,t){return jo((()=>{const t=jy(e);return"channelsLast"===this.dataFormat?Tc(t,[1,2]):Tc(t,[2,3])}))}};Tv.className="GlobalAveragePooling2D",vo.registerClass(Tv);var Cv=class extends Nv{call(e,t){return jo((()=>{const t=jy(e);return"channelsLast"===this.dataFormat?sc(t,[1,2]):sc(t,[2,3])}))}};Cv.className="GlobalMaxPooling2D",vo.registerClass(Cv);var $v=class extends rb{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(e){null!=this.layer&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){const e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,n={}){const r=xb(t.layer,n);delete t.layer;const a={layer:r};return Object.assign(a,t),new e(a)}},_v=class extends $v{constructor(e){super(e),this.supportsMasking=!0}build(e){if((e=qy(e)).length<3)throw new zm(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];const t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){const t=[(e=qy(e))[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),r=e[1];return[n[0],r].concat(n.slice(1))}call(e,t){return jo((()=>Nw(((e,n)=>[jy(this.layer.call(e,t)),[]]),e=jy(e),[],!1,null,null,!1,!0)[1]))}};_v.className="TimeDistributed",vo.registerClass(_v);var Ev=class extends $v{constructor(e){super(e);const t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=xb(n),t.goBackwards=!0!==t.goBackwards;const r={};var a;if(r.className=e.layer.getClassName(),r.config=t,this.backwardLayer=xb(r),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===e.mergeMode?"concat":e.mergeMode,a=this.mergeMode,tg(Ng,"BidirectionalMergeMode",a),e.weights)throw new Pm("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,null!=this.forwardLayer&&(this.forwardLayer.trainable=e),null!=this.backwardLayer&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){const t=e.length,n=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,n)),this.backwardLayer.setWeights(e.slice(n))}computeOutputShape(e){let t,n,r,a=this.forwardLayer.computeOutputShape(e);return Array.isArray(a)&&Array.isArray(a[0])||(a=[a]),a=a,this.returnState?(r=a.slice(1),t=a[0]):t=a[0],t=t,"concat"===this.mergeMode?(t[t.length-1]*=2,n=[t]):n=null==this.mergeMode?[t,t.slice()]:[t],this.returnState?null==this.mergeMode?n.concat(r).concat(r.slice()):[t].concat(r).concat(r.slice()):Gm(n)}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});const a=Sw(e,n,r,this.numConstants);if(e=a.inputs,n=a.initialState,r=a.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(null==n||0===n.length)&&null==r)return super.apply(e,t);const s=[],i=[];if(null!=n){const e=n.length;if(e%2>0)throw new zm("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,s.push(...n);const r=n.map((e=>new Jy({shape:e.shape})));this.forwardLayer.stateSpec=r.slice(0,e/2),this.backwardLayer.stateSpec=r.slice(e/2),i.push(...r)}if(null!=r)throw new Pm("Support for constants in Bidirectional layers is not implemented yet.");const o=s[0]instanceof Qy;for(const e of s)if(e instanceof Qy!==o)throw new zm("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(o){const n=[e].concat(s),r=this.inputSpec.concat(i),a=this.inputSpec;this.inputSpec=r;const o=super.apply(n,t);return this.inputSpec=a,o}return super.apply(e,t)}call(e,t){return jo((()=>{const n=t.initialState;let r,a,s,i;if(null==n)r=this.forwardLayer.call(e,t),a=this.backwardLayer.call(e,t);else{const s=n.slice(0,n.length/2),i=n.slice(n.length/2);r=this.forwardLayer.call(e,Object.assign(t,{initialState:s})),a=this.backwardLayer.call(e,Object.assign(t,{initialState:i}))}return this.returnState&&(Array.isArray(r)&&(s=r.slice(1).concat(a.slice(1))),r=r[0],a=a[0]),this.returnSequences&&(a=uh(a,1)),"concat"===this.mergeMode?i=Hg([r,a]):"sum"===this.mergeMode?i=su(r,a):"ave"===this.mergeMode?i=uu(.5,su(r,a)):"mul"===this.mergeMode?i=uu(r,a):null==this.mergeMode&&(i=[r,a]),this.returnState?null==this.mergeMode?i.concat(s):[i].concat(s):i}))}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){Ag(this.forwardLayer.name,(()=>{this.forwardLayer.build(e)})),Ag(this.backwardLayer.name,(()=>{this.backwardLayer.build(e)})),this.built=!0}computeMask(e,t){let n;if(Array.isArray(t)&&(t=t[0]),n=this.returnSequences?null==this.mergeMode?[t,t]:t:null==this.mergeMode?[null,null]:null,this.returnState){const e=this.forwardLayer.states.map((e=>null));return Array.isArray(n)?n.concat(e).concat(e):[n].concat(e).concat(e)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(e),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){const e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){const n=xb(t.layer);if(delete t.layer,null!=t.numConstants)throw new Pm("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const r=t;return r.layer=n,new e(r)}};function Av(e){return new ob(e)}function Fv(e){return new rw(e)}function Rv(e){return new ew(e)}function Dv(e){return new tw(e)}function Mv(e){return new nw(e)}function Ov(e){return new sw(e)}function Lv(e){return new aw(e)}function zv(e){return new ww(e)}function Pv(e){return new fw(e)}function Bv(e){return new gw(e)}function Wv(e){return new mw(e)}function Vv(e){return new yw(e)}function Uv(e){return new xw(e)}function Gv(e){return new vw(e)}function Hv(e){return new kw(e)}function jv(e){return new Iw(e)}function qv(e){return new Uw(e)}function Kv(e){return new Ww(e)}function Xv(e){return new Pw(e)}function Yv(e){return new Bw(e)}function Zv(e){return new Vw(e)}function Jv(e){return new Gw(e)}function Qv(e){return new Hw(e)}function ek(e){return new jw(e)}function tk(e){return new Kw(e)}function nk(e){return new Yw(e)}function rk(e){return new Jw(e)}function ak(e){return new tv(e)}function sk(e){return new Qw(e)}function ik(e){return new ev(e)}function ok(e){return new Zw(e)}function uk(e){return new rv(e)}function lk(e){return new uv(e)}function ck(e){return new lv(e)}function hk(e){return new cv(e)}function dk(e){return new mv(e)}function pk(e){return dk(e)}function fk(e){return dk(e)}function mk(e){return new bv(e)}function gk(e){return mk(e)}function yk(e){return mk(e)}function bk(e){return new vv(e)}function xk(e){return bk(e)}function wk(e){return bk(e)}function vk(e){return new Iv(e)}function kk(e){return new Tv(e)}function Ik(e){return new Sv(e)}function Sk(e){return new Cv(e)}function Nk(e){return new fv(e)}function Tk(e){return new yv(e)}function Ck(e){return new wv(e)}function $k(e){return new Aw(e)}function _k(e){return new Ew(e)}function Ek(e){return new Rw(e)}function Ak(e){return new Fw(e)}function Fk(e){return new _w(e)}function Rk(e){return new $w(e)}function Dk(e){return new zw(e)}function Mk(e){return new Lw(e)}function Ok(e){return new Tw(e)}function Lk(e){return new Dw(e)}function zk(e){return new Ev(e)}function Pk(e){return new _v(e)}Ev.className="Bidirectional",vo.registerClass(Ev);var Bk=Ik,Wk=Sk,Vk=Nk,Uk=Tk;function Gk(e){return new av(e)}function Hk(e){return new sv(e)}function jk(e){return new iv(e)}function qk(e){return new qw(e)}var Kk={};function Xk(e,t){return Eb(e,t)}function Yk(e,t){return Db(e,t)}function Zk(e,t){return Mb(e,t)}function Jk(e,t){return Ab(e,t)}function Qk(e,t){return Ob(e,t)}function eI(e,t){return Rb(e,t)}function tI(e,t){return function(e,t){return jo((()=>{const n=Fb(e,t),r=function(e,t){return jo((()=>wi(oc(bc(wl(e,1),wl(t,0))),"float32")))}(e,t),a=su(n,r);return wi(vl(Ol(a,0),ou(n,a),0),"float32")}))}(e,t)}function nI(e,t){return Cb(e,t)}function rI(e,t){return kb(e,t)}function aI(e,t){return Ib(e,t)}function sI(e,t){return Ib(e,t)}function iI(e,t){return Ib(e,t)}function oI(e,t){return vb(e,t)}function uI(e,t){return vb(e,t)}function lI(e,t){return vb(e,t)}y(Kk,{MAPE:()=>sI,MSE:()=>uI,binaryAccuracy:()=>Xk,binaryCrossentropy:()=>Yk,categoricalAccuracy:()=>Jk,categoricalCrossentropy:()=>Qk,cosineProximity:()=>nI,mape:()=>iI,meanAbsoluteError:()=>rI,meanAbsolutePercentageError:()=>aI,meanSquaredError:()=>oI,mse:()=>lI,precision:()=>eI,recall:()=>tI,sparseCategoricalAccuracy:()=>Zk});var cI={};y(cI,{modelFromJSON:()=>kx});var hI={};function dI(e){return new Xx(e)}function pI(e){return qx(t=e),new Xx({l1:null!=t?t.l1:null,l2:0});var t}function fI(e){return qx(t=e),new Xx({l2:null!=t?t.l2:null,l1:0});var t}y(hI,{l1:()=>pI,l1l2:()=>dI,l2:()=>fI});var mI=class extends hb{constructor(){super(...arguments),this.model=null}setModel(e){if(!(e instanceof wx))throw new Error("model must be a LayersModel, not some other Container");this.model=e}};function gI(e,t){return e<t}function yI(e,t){return e>t}var bI,xI,wI,vI=class extends mI{constructor(e){if(super(),null==e&&(e={}),e.restoreBestWeights)throw new Pm("restoreBestWeights = True is not implemented in EarlyStopping yet.");this.monitor=e.monitor||"val_loss",this.minDelta=Math.abs(e.minDelta||0),this.patience=e.patience||0,this.verbose=e.verbose||0,this.mode=e.mode||"auto",this.baseline=e.baseline,-1===["auto","min","max"].indexOf(this.mode)&&(console.warn(`EarlyStopping mode '${this.mode}' is invalid. Falling back to mode 'auto'.`),this.mode="auto"),"min"===this.mode?this.monitorFunc=gI:"max"===this.mode||-1!==this.monitor.indexOf("acc")?this.monitorFunc=yI:this.monitorFunc=gI,this.monitorFunc===gI&&(this.minDelta*=-1)}async onTrainBegin(e){this.wait=0,this.stoppedEpoch=0,null!=this.baseline?this.best=this.baseline:this.best=this.monitorFunc===gI?1/0:-1/0}async onEpochEnd(e,t){await lb(t);const n=this.getMonitorValue(t);null!=n&&(this.monitorFunc(n-this.minDelta,this.best)?(this.best=n,this.wait=0):(this.wait++,this.wait>=this.patience&&(this.stoppedEpoch=e,this.model.stopTraining=!0)))}async onTrainEnd(e){this.stoppedEpoch>0&&this.verbose&&console.log(`Epoch ${this.stoppedEpoch}: early stopping.`)}getMonitorValue(e){null==e&&(e={});const t=e[this.monitor];return null==t&&console.warn(`Metric for EarlyStopping ${this.monitor} is not available. Available metrics are: ${Object.keys(e)}`),t}},kI={earlyStopping:function(e){return new vI(e)}};(xI=bI||(bI={}))[xI.DT_INVALID=0]="DT_INVALID",xI[xI.DT_FLOAT=1]="DT_FLOAT",xI[xI.DT_DOUBLE=2]="DT_DOUBLE",xI[xI.DT_INT32=3]="DT_INT32",xI[xI.DT_UINT8=4]="DT_UINT8",xI[xI.DT_INT16=5]="DT_INT16",xI[xI.DT_INT8=6]="DT_INT8",xI[xI.DT_STRING=7]="DT_STRING",xI[xI.DT_COMPLEX64=8]="DT_COMPLEX64",xI[xI.DT_INT64=9]="DT_INT64",xI[xI.DT_BOOL=10]="DT_BOOL",xI[xI.DT_QINT8=11]="DT_QINT8",xI[xI.DT_QUINT8=12]="DT_QUINT8",xI[xI.DT_QINT32=13]="DT_QINT32",xI[xI.DT_BFLOAT16=14]="DT_BFLOAT16",xI[xI.DT_FLOAT_REF=101]="DT_FLOAT_REF",xI[xI.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",xI[xI.DT_INT32_REF=103]="DT_INT32_REF",xI[xI.DT_UINT8_REF=104]="DT_UINT8_REF",xI[xI.DT_INT16_REF=105]="DT_INT16_REF",xI[xI.DT_INT8_REF=106]="DT_INT8_REF",xI[xI.DT_STRING_REF=107]="DT_STRING_REF",xI[xI.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",xI[xI.DT_INT64_REF=109]="DT_INT64_REF",xI[xI.DT_BOOL_REF=110]="DT_BOOL_REF",xI[xI.DT_QINT8_REF=111]="DT_QINT8_REF",xI[xI.DT_QUINT8_REF=112]="DT_QUINT8_REF",xI[xI.DT_QINT32_REF=113]="DT_QINT32_REF",xI[xI.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",function(e){let t;var n;(n=t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))[n.LEGACY=0]="LEGACY",n[n.V1=1]="V1",n[n.V2=2]="V2"}(wI||(wI={}));var II={};function SI(e,t){const n={tfOpName:e,category:"custom",inputs:[],attrs:[],customExecutor:t};II[e]=n}function NI(e){return II[e]}function TI(e){delete II[e]}function CI(e,t,n,r,a){const s=t.inputParams[e];if(s&&void 0!==s.inputIndexStart){const e=s.inputIndexStart,i=0===s.inputIndexEnd?void 0:void 0===s.inputIndexEnd?e+1:s.inputIndexEnd;if("tensor"===s.type)return $I(t.inputNames[s.inputIndexStart],n,r,a);if("tensors"===s.type)return t.inputNames.slice(e,i).map((e=>$I(e,n,r,a)));const o=$I(t.inputNames.slice(e)[0],n,r,a),u=o.dataSync();return"number"===s.type?u[0]:ca.toNestedArray(o.shape,u)}const i=t.attrParams[e];return i&&i.value}function $I(e,t,n,r){const[a,s]=AI(e);if(null!=r){const e=r.getHashTableHandleByName(a);if(null!=e)return e}const i=n.currentContextIds.find((e=>!!t[EI(a,e)]));return void 0!==i?t[EI(a,i)][s]:void 0}function _I(e,t){const[n,r,a]=AI(e);return[EI(n,t&&t.currentContextId),r,a]}function EI(e,t){return t?`${e}-${t}`:e}function AI(e){const t=e.split(":");if(1===t.length)return[e,0,void 0];const n=t[0],r=3===t.length?t[1]:void 0;return[n,Number(t[t.length-1]),r]}function FI(e,t,n){let r=CI("pad",e,t,n);if("explicit"===r){r=CI("explicitPaddings",e,t,n);const a=[[0,0],[0,0],[0,0],[0,0]];for(let e=0;e<4;e++)a[e][0]=r[2*e],a[e][1]=r[2*e+1];return a}return r}function RI(e){return e.kept?e:vi(e)}var DI={};y(DI,{json:()=>MI});var MI=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],OI={};y(OI,{json:()=>LI});var LI=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],zI={};y(zI,{json:()=>PI});var PI=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]}],BI={};y(BI,{json:()=>WI});var WI=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number"}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],VI={};y(VI,{json:()=>UI});var UI=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],GI={};y(GI,{json:()=>HI});var HI=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],jI={};y(jI,{json:()=>qI});var qI=[{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],KI={};y(KI,{json:()=>XI});var XI=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],YI={};y(YI,{json:()=>ZI});var ZI=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]}],JI={};y(JI,{json:()=>QI});var QI=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]}],eS={};y(eS,{json:()=>tS});var tS=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],nS={};y(nS,{json:()=>rS});var rS=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]}],aS={};y(aS,{json:()=>sS});var sS=[{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}],iS={};y(iS,{json:()=>oS});var oS=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],uS={};y(uS,{json:()=>lS});var lS=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}],cS={};y(cS,{json:()=>hS});var hS=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],dS={};y(dS,{json:()=>pS});var pS=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],fS={};y(fS,{json:()=>mS});var mS=[{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],gS={};y(gS,{json:()=>yS});var yS=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]}],bS=class{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const e=[].concat(...[DI,OI,zI,BI,VI,GI,jI,KI,YI,JI,eS,nS,aS,iS,uS,cS,dS,fS,gS].map((e=>e.json)));this.opMappers=e.reduce(((e,t)=>(e[t.tfOpName]=t,e)),{})}transformGraph(e,t={}){const n=e.node,r=[],a=[],s=[],i=n.reduce(((e,t)=>(e[t.name]=this.mapNode(t),t.op.startsWith("Placeholder")?r.push(e[t.name]):"Const"===t.op?a.push(e[t.name]):null!=t.input&&0!==t.input.length||s.push(e[t.name]),e)),{});let o=[];const u=[];let l={},c={};null!=t&&(l=this.mapSignatureEntries(t.inputs),c=this.mapSignatureEntries(t.outputs));const h=Object.keys(i);h.forEach((e=>{const t=i[e];t.inputNames.forEach(((e,n)=>{const[r,,a]=_I(e),s=i[r];if(null!=s.outputs){const e=s.outputs.indexOf(a);if(-1!==e){const a=`${r}:${e}`;t.inputNames[n]=a}}t.inputs.push(s),s.children.push(t)}))})),0===Object.keys(c).length?h.forEach((e=>{const t=i[e];0===t.children.length&&u.push(t)})):Object.keys(c).forEach((e=>{const[t]=_I(e),n=i[t];null!=n&&(n.signatureKey=c[e],u.push(n))})),Object.keys(l).length>0?Object.keys(l).forEach((e=>{const[t]=_I(e),n=i[t];n&&(n.signatureKey=l[e],o.push(n))})):o=r;let d={};null!=e.library&&null!=e.library.function&&(d=e.library.function.reduce(((e,t)=>(e[t.signature.name]=this.mapFunction(t),e)),{}));const p={nodes:i,inputs:o,outputs:u,weights:a,placeholders:r,signature:t,functions:d};return s.length>0&&(p.initNodes=s),p}mapSignatureEntries(e){return Object.keys(e||{}).reduce(((t,n)=>(t[e[n].name]=n,t)),{})}mapNode(e){const t=NI(e.op)||this.opMappers[e.op]||{};null==e.attr&&(e.attr={});const n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map((e=>e.startsWith("^")?e.substr(1):e)),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return null!=t.inputs&&(n.inputParams=t.inputs.reduce(((e,t)=>(e[t.name]={type:t.type,inputIndexStart:t.start,inputIndexEnd:t.end},e)),{})),null!=t.attrs&&(n.attrParams=t.attrs.reduce(((t,n)=>{const r=n.type;let a;switch(n.type){case"string":a=wS(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=wS(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"string[]":a=ES(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=ES(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number":a=kS(e.attr,n.tfName,n.defaultValue||0),void 0===a&&n.tfDeprecatedName&&(a=kS(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number[]":a=_S(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=_S(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool":a=vS(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=vS(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool[]":a=FS(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=FS(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape":a=$S(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=$S(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape[]":a=AS(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=AS(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype":a=NS(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=NS(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype[]":a=TS(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=TS(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"func":a=SS(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=SS(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${n.type} for op: ${e.op}`)}return t[n.name]={value:a,type:r},t}),{})),n}mapFunction(e){const t=e.nodeDef,n=[];let r={};null!=t&&(r=t.reduce(((e,t)=>(e[t.name]=this.mapNode(t),"Const"===t.op&&n.push(e[t.name]),e)),{}));const a=[],s=[];e.signature.inputArg.forEach((e=>{const[t]=_I(e.name),n={name:t,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:IS(e.type),type:"dtype"}},children:[]};n.signatureKey=e.name,a.push(n),r[t]=n})),Object.keys(r).forEach((e=>{const t=r[e];t.inputNames.forEach(((e,n)=>{const[a,,s]=_I(e),i=r[a];if(null!=i.outputs){const e=i.outputs.indexOf(s);if(-1!==e){const r=`${a}:${e}`;t.inputNames[n]=r}}t.inputs.push(i),i.children.push(t)}))}));const i=e.ret;e.signature.outputArg.forEach((e=>{const[t,n]=_I(i[e.name]),a=r[t];null!=a&&(a.defaultOutput=n,s.push(a))}));const o=this.mapArgsToSignature(e);return{nodes:r,inputs:a,outputs:s,weights:n,placeholders:[],signature:o}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce(((e,t)=>(e[t.name]=this.mapArgToTensorInfo(t),e)),{}),outputs:e.signature.outputArg.reduce(((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n,e.ret),t)),{})}}mapArgToTensorInfo(e,t){let n=e.name;return null!=t&&(n=t[n]),{name:n,dtype:e.type}}};function xS(e,t){const n=Array.isArray(e)?String.fromCharCode.apply(null,e):function(e){const t=Ue().global;if(void 0!==t.atob)return t.atob(e);if("undefined"!=typeof Buffer)return new Buffer(e,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}(e);return t?n:n.toLowerCase()}function wS(e,t,n,r=!1){const a=e[t];return null!=a?xS(a.s,r):n}function vS(e,t,n){const r=e[t];return r?r.b:n}function kS(e,t,n){const r=e[t]||{},a=null!=r.i?r.i:null!=r.f?r.f:n;return"number"==typeof a?a:parseInt(a,10)}function IS(e){switch("string"==typeof e&&(e=bI[e]),e){case bI.DT_FLOAT:return"float32";case bI.DT_INT32:case bI.DT_INT64:case bI.DT_INT8:case bI.DT_UINT8:return"int32";case bI.DT_BOOL:return"bool";case bI.DT_DOUBLE:return"float32";case bI.DT_STRING:return"string";default:return null}}function SS(e,t,n){const r=e[t];return r&&r.func?r.func.name:n}function NS(e,t,n){const r=e[t];return r&&r.type?IS(r.type):n}function TS(e,t,n){const r=e[t];return r&&r.list&&r.list.type?r.list.type.map((e=>IS(e))):n}function CS(e){if(!e.unknownRank)return null!=e.dim?e.dim.map((e=>"number"==typeof e.size?e.size:parseInt(e.size,10))):[]}function $S(e,t,n){const r=e[t];return r&&r.shape?CS(r.shape):n}function _S(e,t,n){const r=e[t];return r?((r.list.f&&r.list.f.length?r.list.f:r.list.i)||[]).map((e=>"number"==typeof e?e:parseInt(e,10))):n}function ES(e,t,n,r=!1){const a=e[t];return a&&a.list&&a.list.s?a.list.s.map((e=>xS(e,r))):n}function AS(e,t,n){const r=e[t];return r&&r.list&&r.list.shape?r.list.shape.map((e=>CS(e))):n}function FS(e,t,n){const r=e[t];return r&&r.list&&r.list.b?r.list.b:n}function RS(e,t,n=""){if("number"!=typeof e&&"number"!=typeof t){ca.assert(e.length===t.length,(()=>n+` Shapes ${e} and ${t} must match`));for(let r=0;r<e.length;r++){const a=e[r],s=t[r];ca.assert(a<0||s<0||a===s,(()=>n+` Shapes ${e} and ${t} must match`))}}}function DS(e){return"number"!=typeof e&&!e.some((e=>e<0))}function MS(e,t,n){let r=OS(e,n);const a=!DS(r);if(a&&0===t.length)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${r}`);if(a&&t.forEach((e=>{r=OS(e.shape,r)})),!DS(r))throw new Error(`Non-fully-defined elementShape: ${r}`);return r}function OS(e,t){if("number"==typeof e)return t;if("number"==typeof t)return e;if(e.length!==t.length)throw new Error(`Incompatible ranks during merge: ${e} vs. ${t}`);const n=[];for(let r=0;r<e.length;++r){const a=e[r],s=t[r];if(a>=0&&s>=0&&a!==s)throw new Error(`Incompatible shape during merge: ${e} vs. ${t}`);n[r]=a>=0?a:s}return n}var LS=class{constructor(e,t,n,r=-1){this.tensors=e,this.elementShape=t,this.elementDtype=n,null!=e&&e.forEach((e=>{if(n!==e.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${e.dtype}`);RS(t,e.shape,"TensorList shape mismatch: "),Ko(e)})),this.idTensor=mh(0),this.maxNumElements=r,Ko(this.idTensor)}get id(){return this.idTensor.id}copy(){return new LS([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach((t=>{null!=e&&e.has(t.id)||t.dispose()})),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,n=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(-1!==n&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);RS(e,this.elementShape,"TensorList shape mismatch: ");const r=MS(this.elementShape,this.tensors,e);return jo((()=>{const e=this.tensors.map((e=>Mu(e,r)));return Mh(e,0)}))}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(0===this.size())throw new Error("Trying to pop from an empty list.");const n=MS(this.elementShape,this.tensors,e),r=this.tensors.pop();return RS(r.shape,e,"TensorList shape mismatch: "),Mu(r,n)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(RS(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");Ko(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(-1!==this.maxNumElements&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);this.tensors.length=e}getItem(e,t,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(null==this.tensors[e])throw new Error(`element at index ${e} is null.`);RS(this.tensors[e].shape,t,"TensorList shape mismatch: ");const r=MS(this.elementShape,this.tensors,t);return Mu(this.tensors[e],r)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||-1!==this.maxNumElements&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);RS(this.elementShape,t.shape,"TensorList shape mismatch: "),Ko(t),this.tensors[e]=t}gather(e,t,n){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);RS(this.elementShape,n,"TensorList shape mismatch: "),e=e.slice(0,this.size());const r=MS(this.elementShape,this.tensors,n);return 0===e.length?Cs([],[0].concat(r)):jo((()=>{const t=e.map((e=>Mu(this.tensors[e],r)));return Mh(t,0)}))}concat(e,t){if(e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);RS(this.elementShape,t,"TensorList shape mismatch: ");const n=MS(this.elementShape,this.tensors,t);return 0===this.size()?Cs([],[0].concat(n)):jo((()=>{const e=this.tensors.map((e=>Mu(e,n)));return zu(e,0)}))}},zS=async(e,t,n)=>{switch(e.op){case"If":case"StatelessIf":{const r=CI("thenBranch",e,t,n),a=CI("elseBranch",e,t,n),s=CI("cond",e,t,n),i=CI("args",e,t,n);return(await s.data())[0]?n.functionMap[r].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap):n.functionMap[a].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{const r=CI("body",e,t,n),a=CI("cond",e,t,n),s=CI("args",e,t,n),i=await n.functionMap[a].executeFunctionAsync(s,n.tensorArrayMap,n.tensorListMap),o=s.map((e=>e.id));let u=await i[0].data();i.forEach((e=>{e.kept||-1!==o.indexOf(e.id)||e.dispose()}));let l=s;for(;u[0];){const e=l;l=await n.functionMap[r].executeFunctionAsync(l,n.tensorArrayMap,n.tensorListMap);const t=l.map((e=>e.id));e.forEach((e=>{e.kept||-1!==o.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()}));const s=await n.functionMap[a].executeFunctionAsync(l,n.tensorArrayMap,n.tensorListMap);u=await s[0].data(),s.forEach((e=>{e.kept||-1!==o.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()}))}return l}case"LoopCond":return[RI(CI("pred",e,t,n))];case"Switch":{const r=CI("pred",e,t,n);let a=CI("data",e,t,n);return a.kept||(a=RI(a)),(await r.data())[0]?[void 0,a]:[a,void 0]}case"Merge":{const r=e.inputNames.find((e=>void 0!==$I(e,t,n)));return r?[RI($I(r,t,n))]:void 0}case"Enter":{const r=CI("frameName",e,t,n),a=CI("tensor",e,t,n);return n.enterFrame(r),[RI(a)]}case"Exit":{const r=CI("tensor",e,t,n);return n.exitFrame(),[RI(r)]}case"NextIteration":{const r=CI("tensor",e,t,n);return n.nextIteration(),[RI(r)]}case"TensorArrayV3":{const r=CI("size",e,t,n),a=CI("dtype",e,t,n),s=CI("elementShape",e,t,n),i=CI("dynamicSize",e,t,n),o=CI("clearAfterRead",e,t,n),u=CI("identicalElementShapes",e,t,n),l=CI("name",e,t,n),c=new class{constructor(e,t,n,r,a,s,i){this.name=e,this.dtype=t,this.maxSize=n,this.elementShape=r,this.identicalElementShapes=a,this.dynamicSize=s,this.clearAfterRead=i,this.tensors=[],this.closed_=!1,this.idTensor=mh(0),Ko(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach((t=>{null!=e&&e.has(t.tensor.id)||t.tensor.dispose()})),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);const t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map((e=>this.read(e)))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);const n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},\n          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(0!==this.size()||null!=this.elementShape&&0!==this.elementShape.length||(this.elementShape=t.shape),RS(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);n.tensor=t,Ko(t),n.written=!0,this.tensors[e]=n}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach(((e,n)=>this.write(e,t[n])))}gather(e,t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let t=0;t<this.size();t++)e.push(t)}if(0===e.length)return Cs([],[0].concat(this.elementShape));const n=this.readMany(e);return RS(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),Mh(n,0)}concat(e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(0===this.size())return Cs([],[0].concat(this.elementShape));const t=[];for(let e=0;e<this.size();e++)t.push(e);const n=this.readMany(t);return RS(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),zu(n,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);const n=Math.max(...e);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(e,Kh(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let n=0;const r=e.map((e=>(n+=e,n)));if(n!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${n}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);const a=0===n?0:t.size/n,s=[];jo((()=>{t=Mu(t,[1,n,a]);for(let n=0;n<e.length;++n){const i=[0,0===n?0:r[n-1],0],o=[1,e[n],a];s[n]=Mu(Bu(t,i,o),this.elementShape)}return s}));const i=[];for(let t=0;t<e.length;t++)i[t]=t;this.writeMany(i,s)}}(l,a,r,s,u,i,o);return n.addTensorArray(c),[c.idTensor,mh(1)]}case"TensorArrayWriteV3":{const r=CI("tensorArrayId",e,t,n),a=CI("index",e,t,n),s=CI("tensor",e,t,n),i=n.getTensorArray(r.id);return i.write(a,s),[i.idTensor]}case"TensorArrayReadV3":{const r=CI("tensorArrayId",e,t,n),a=CI("index",e,t,n);return[n.getTensorArray(r.id).read(a)]}case"TensorArrayGatherV3":{const r=CI("tensorArrayId",e,t,n),a=CI("indices",e,t,n),s=CI("dtype",e,t,n);return[n.getTensorArray(r.id).gather(a,s)]}case"TensorArrayScatterV3":{const r=CI("tensorArrayId",e,t,n),a=CI("indices",e,t,n),s=CI("tensor",e,t,n),i=n.getTensorArray(r.id);return i.scatter(a,s),[i.idTensor]}case"TensorArrayConcatV3":{const r=CI("tensorArrayId",e,t,n),a=n.getTensorArray(r.id),s=CI("dtype",e,t,n);return[a.concat(s)]}case"TensorArraySplitV3":{const r=CI("tensorArrayId",e,t,n),a=CI("tensor",e,t,n),s=CI("lengths",e,t,n),i=n.getTensorArray(r.id);return i.split(s,a),[i.idTensor]}case"TensorArraySizeV3":{const r=CI("tensorArrayId",e,t,n);return[mh(n.getTensorArray(r.id).size(),"int32")]}case"TensorArrayCloseV3":{const r=CI("tensorArrayId",e,t,n),a=n.getTensorArray(r.id);return a.clearAndClose(),[a.idTensor]}case"TensorListSetItem":{const r=CI("tensorListId",e,t,n),a=CI("index",e,t,n),s=CI("tensor",e,t,n),i=n.getTensorList(r.id);return i.setItem(a,s),[i.idTensor]}case"TensorListGetItem":{const r=CI("tensorListId",e,t,n),a=CI("index",e,t,n),s=CI("elementShape",e,t,n),i=CI("elementDType",e,t,n);return[n.getTensorList(r.id).getItem(a,s,i)]}case"TensorListScatterV2":case"TensorListScatter":{const r=CI("indices",e,t,n),a=function(e,t,n,r){if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);const a=Math.max(...t);if(null!=r&&-1!==r&&a>=r)throw new Error(`Max index must be < array size (${a}  vs. ${r})`);const s=new LS([],n,e.dtype,r),i=Kh(e,0);return t.forEach(((e,t)=>{s.setItem(e,i[t])})),s}(CI("tensor",e,t,n),r,CI("elementShape",e,t,n),CI("numElements",e,t,n));return n.addTensorList(a),[a.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const r=CI("elementShape",e,t,n),a=CI("elementDType",e,t,n);let s;s="TensorListReserve"===e.op?"numElements":"maxNumElements";const i=function(e,t,n){return new LS([],e,t,n)}(r,a,CI(s,e,t,n));return n.addTensorList(i),[i.idTensor]}case"TensorListGather":{const r=CI("tensorListId",e,t,n),a=CI("indices",e,t,n),s=CI("elementShape",e,t,n),i=CI("elementDType",e,t,n);return[n.getTensorList(r.id).gather(a,i,s)]}case"TensorListStack":{const r=CI("tensorListId",e,t,n),a=CI("elementShape",e,t,n),s=CI("elementDType",e,t,n),i=CI("numElements",e,t,n);return[n.getTensorList(r.id).stack(a,s,i)]}case"TensorListFromTensor":{const r=function(e,t,n){const r=e.dtype;if(e.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${e.shape}`);if(e.dtype!==n)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${n}`);RS(e.shape.slice(1),t,"TensorList shape mismatch: ");const a=Kh(e);return new LS(a,t,r)}(CI("tensor",e,t,n),CI("elementShape",e,t,n),CI("elementDType",e,t,n));return n.addTensorList(r),[r.idTensor]}case"TensorListConcat":{const r=CI("tensorListId",e,t,n),a=n.getTensorList(r.id),s=CI("dtype",e,t,n),i=CI("elementShape",e,t,n);return[a.concat(s,i)]}case"TensorListPushBack":{const r=CI("tensorListId",e,t,n),a=CI("tensor",e,t,n),s=n.getTensorList(r.id);return s.pushBack(a),[s.idTensor]}case"TensorListPopBack":{const r=CI("tensorListId",e,t,n),a=CI("elementShape",e,t,n),s=CI("elementDType",e,t,n);return[n.getTensorList(r.id).popBack(a,s)]}case"TensorListSplit":{const r=CI("tensor",e,t,n),a=CI("elementShape",e,t,n),s=function(e,t,n){let r=0;const a=t.map((e=>(r+=e,r)));if(r!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${r}, and tensor's shape is: ${e.shape}`);const s=OS(e.shape.slice(1),n),i=0===r?0:e.size/r,o=jo((()=>{const n=[];e=Mu(e,[1,r,i]);for(let r=0;r<t.length;++r){const o=[0,0===r?0:a[r-1],0],u=[1,t[r],i];n[r]=Mu(Bu(e,o,u),s)}return e.dispose(),n})),u=new LS([],n,e.dtype,t.length);for(let e=0;e<o.length;e++)u.setItem(e,o[e]);return u}(r,CI("lengths",e,t,n),a);return n.addTensorList(s),[s.idTensor]}default:throw TypeError(`Node type ${e.op} is not implemented`)}};function PS(e,t,n){const[r,a]=CI("fusedOps",e,t,n),s="biasadd"===r,i=!s,o="prelu"===a,u="fusedbatchnorm"===r,l=CI("numArgs",e,t,n);if(s){if(o&&2!==l)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&s&&1!==l)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(u)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");const c=CI("strides",e,t,n),h=FI(e,t,n),d=CI("dataFormat",e,t,n).toUpperCase(),p=CI("dilations",e,t,n);let[f,m]=CI("args",e,t,n);return i&&(m=f,f=void 0),{stride:c,pad:h,dataFormat:d,dilations:p,biasArg:f,preluArg:m,activationFunc:a,leakyreluAlpha:CI("leakyreluAlpha",e,t,n)}}function BS(e,t,n){return{boxes:CI("boxes",e,t,n),scores:CI("scores",e,t,n),maxOutputSize:CI("maxOutputSize",e,t,n),iouThreshold:CI("iouThreshold",e,t,n),scoreThreshold:CI("scoreThreshold",e,t,n),softNmsSigma:CI("softNmsSigma",e,t,n)}}var WS=async(e,t,n,r)=>{switch(e.op){case"HashTable":case"HashTableV2":{const a=CI("keyDType",e,t,n),s=CI("valueDType",e,t,n),i=new class{constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=mh(0),this.tensorMap=new Map,Ko(this.handle)}get id(){return this.handle.id}clearAndClose(){this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return mh(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),jo((()=>{const e=Kh(t),r=n.length,a=e.length;ca.assert(r===a,(()=>`The number of elements doesn't match, keys has ${r} elements, the values has ${a} elements.`));for(let t=0;t<r;t++){const r=n[t],a=e[t];Ko(a),this.tensorMap.set(r,a)}return this.handle}))}async find(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return jo((()=>{const e=[];for(let r=0;r<n.length;r++){const a=n[r],s=this.findWithDefault(a,t);e.push(s)}return Mh(e)}))}findWithDefault(e,t){const n=this.tensorMap.get(e);return null!=n?n:t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}}(a,s);return r.addHashTable(e.name,i),[i.handle]}case"LookupTableImport":case"LookupTableImportV2":{const a=CI("tableHandle",e,t,n,r),s=CI("keys",e,t,n),i=CI("values",e,t,n),o=r.getHashTableById(a.id);return[await o.import(s,i)]}case"LookupTableFind":case"LookupTableFindV2":{const a=CI("tableHandle",e,t,n,r),s=CI("keys",e,t,n),i=CI("defaultValue",e,t,n),o=r.getHashTableById(a.id);return[await o.find(s,i)]}case"LookupTableSize":case"LookupTableSizeV2":{const a=CI("tableHandle",e,t,n,r);return[r.getHashTableById(a.id).tensorSize()]}default:throw TypeError(`Node type ${e.op} is not implemented`)}};function VS(e,t,n,r){const a=((e,t,n)=>{switch(e.category){case"arithmetic":return jo((()=>((e,t,n)=>{switch(e.op){case"BiasAdd":case"AddV2":case"Add":return[su(CI("a",e,t,n),CI("b",e,t,n))];case"AddN":return[du(CI("tensors",e,t,n))];case"FloorMod":case"Mod":return[Rc(CI("a",e,t,n),CI("b",e,t,n))];case"Mul":return[uu(CI("a",e,t,n),CI("b",e,t,n))];case"RealDiv":case"Div":return[ou(CI("a",e,t,n),CI("b",e,t,n))];case"DivNoNan":return[Il(CI("a",e,t,n),CI("b",e,t,n))];case"FloorDiv":return[iu(CI("a",e,t,n),CI("b",e,t,n))];case"Sub":return[ic(CI("a",e,t,n),CI("b",e,t,n))];case"Minimum":return[Ac(CI("a",e,t,n),CI("b",e,t,n))];case"Maximum":return[Nc(CI("a",e,t,n),CI("b",e,t,n))];case"Pow":return[Kc(CI("a",e,t,n),CI("b",e,t,n))];case"SquaredDifference":return[Rh(CI("a",e,t,n),CI("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"basic_math":return jo((()=>((e,t,n)=>{switch(e.op){case"Abs":case"ComplexAbs":return[lu(CI("x",e,t,n))];case"Acos":return[cu(CI("x",e,t,n))];case"Acosh":return[hu(CI("x",e,t,n))];case"Asin":return[yu(CI("x",e,t,n))];case"Asinh":return[bu(CI("x",e,t,n))];case"Atan":return[xu(CI("x",e,t,n))];case"Atan2":return[wu(CI("x",e,t,n),CI("y",e,t,n))];case"Atanh":return[vu(CI("x",e,t,n))];case"Ceil":return[Yu(CI("x",e,t,n))];case"Complex":return[Ns(CI("real",e,t,n),CI("imag",e,t,n))];case"Cos":return[ll(CI("x",e,t,n))];case"Cosh":return[cl(CI("x",e,t,n))];case"Elu":return[Tl(CI("x",e,t,n))];case"Erf":return[Cl(CI("x",e,t,n))];case"Exp":return[$l(CI("x",e,t,n))];case"Expm1":return[El(CI("x",e,t,n))];case"Floor":return[Dl(CI("x",e,t,n))];case"Log":return[ql(CI("x",e,t,n))];case"Log1p":return[Kl(CI("x",e,t,n))];case"Imag":return[zl(CI("x",e,t,n))];case"Neg":return[nc(CI("x",e,t,n))];case"Reciprocal":return[sh(CI("x",e,t,n))];case"Real":return[ah(CI("x",e,t,n))];case"Relu":return[ih(CI("x",e,t,n))];case"Round":return[ph(CI("x",e,t,n))];case"Selu":return[gh(CI("x",e,t,n))];case"Sigmoid":return[Pu(CI("x",e,t,n))];case"Sin":return[wh(CI("x",e,t,n))];case"Sign":return[xh(CI("x",e,t,n))];case"Sinh":return[vh(CI("x",e,t,n))];case"Softplus":return[rc(CI("x",e,t,n))];case"Sqrt":return[Fh(CI("x",e,t,n))];case"Square":return[Dc(CI("x",e,t,n))];case"Tanh":return[Wu(CI("x",e,t,n))];case"Tan":return[zh(CI("x",e,t,n))];case"ClipByValue":return[Zu(CI("x",e,t,n),CI("clipValueMin",e,t,n),CI("clipValueMax",e,t,n))];case"Relu6":return[oh(CI("x",e,t,n))];case"Rsqrt":return[fh($I(e.inputNames[0],t,n))];case"Prod":return[Yc(CI("x",e,t,n),CI("axes",e,t,n))];case"LeakyRelu":return[Vl(CI("x",e,t,n),CI("alpha",e,t,n))];case"Prelu":return[Xc(CI("x",e,t,n),CI("alpha",e,t,n))];case"IsNan":return[Wl($I(e.inputNames[0],t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"control":return zS(e,t,n);case"convolution":return jo((()=>((e,t,n)=>{switch(e.op){case"Conv1D":{const r=CI("stride",e,t,n),a=CI("pad",e,t,n),s=CI("dataFormat",e,t,n).toUpperCase(),i=CI("dilation",e,t,n);return[rl(CI("x",e,t,n),CI("filter",e,t,n),r,a,s,i)]}case"Conv2D":{const r=CI("strides",e,t,n),a=FI(e,t,n),s=CI("dataFormat",e,t,n).toUpperCase(),i=CI("dilations",e,t,n);return[nl(CI("x",e,t,n),CI("filter",e,t,n),[r[1],r[2]],a,s,[i[1],i[2]])]}case"_FusedConv2D":{const{stride:r,pad:a,dataFormat:s,dilations:i,biasArg:o,preluArg:u,activationFunc:l,leakyreluAlpha:c}=PS(e,t,n);return[ld.conv2d({x:CI("x",e,t,n),filter:CI("filter",e,t,n),strides:[r[1],r[2]],pad:a,dataFormat:s,dilations:[i[1],i[2]],bias:o,activation:l,preluActivationWeights:u,leakyreluAlpha:c})]}case"FusedDepthwiseConv2dNative":{const{stride:r,pad:a,dataFormat:s,dilations:i,biasArg:o,preluArg:u,activationFunc:l,leakyreluAlpha:c}=PS(e,t,n);return[ld.depthwiseConv2d({x:CI("x",e,t,n),filter:CI("filter",e,t,n),strides:[r[1],r[2]],pad:a,dataFormat:s,dilations:[i[1],i[2]],bias:o,activation:l,preluActivationWeights:u,leakyreluAlpha:c})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const r=CI("outputShape",e,t,n),a=CI("strides",e,t,n),s=FI(e,t,n);return[sl(CI("x",e,t,n),CI("filter",e,t,n),r,[a[1],a[2]],s)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const r=CI("strides",e,t,n),a=FI(e,t,n),s=CI("dilations",e,t,n),i=CI("dataFormat",e,t,n).toUpperCase();return[fl(CI("input",e,t,n),CI("filter",e,t,n),[r[1],r[2]],a,i,[s[1],s[2]])]}case"Conv3D":{const r=CI("strides",e,t,n),a=CI("pad",e,t,n),s=CI("dataFormat",e,t,n).toUpperCase(),i=CI("dilations",e,t,n);return[il(CI("x",e,t,n),CI("filter",e,t,n),[r[1],r[2],r[3]],a,s,[i[1],i[2],i[3]])]}case"AvgPool":{const r=CI("strides",e,t,n),a=CI("pad",e,t,n),s=CI("kernelSize",e,t,n);return[Ou(CI("x",e,t,n),[s[1],s[2]],[r[1],r[2]],a)]}case"MaxPool":{const r=CI("strides",e,t,n),a=CI("pad",e,t,n),s=CI("kernelSize",e,t,n);return[kc(CI("x",e,t,n),[s[1],s[2]],[r[1],r[2]],a)]}case"MaxPoolWithArgmax":{const r=CI("strides",e,t,n),a=CI("pad",e,t,n),s=CI("kernelSize",e,t,n),i=CI("includeBatchInIndex",e,t,n),{result:o,indexes:u}=Sc(CI("x",e,t,n),[s[1],s[2]],[r[1],r[2]],a,i);return[o,u]}case"AvgPool3D":{const r=CI("strides",e,t,n),a=CI("pad",e,t,n),s=CI("kernelSize",e,t,n);return[Lu(CI("x",e,t,n),[s[1],s[2],s[3]],[r[1],r[2],r[3]],a)]}case"MaxPool3D":{const r=CI("strides",e,t,n),a=CI("pad",e,t,n),s=CI("kernelSize",e,t,n);return[Ic(CI("x",e,t,n),[s[1],s[2],s[3]],[r[1],r[2],r[3]],a)]}case"Dilation2D":{const r=CI("strides",e,t,n),a=CI("pad",e,t,n),s=CI("dilations",e,t,n),i=r[1],o=r[2],u=s[1],l=s[2];return[gl(CI("x",e,t,n),CI("filter",e,t,n),[i,o],a,[u,l],"NHWC")]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"creation":return jo((()=>((e,t,n)=>{switch(e.op){case"Fill":{const r=CI("shape",e,t,n),a=CI("dtype",e,t,n);return[Rl(r,CI("value",e,t,n),a)]}case"LinSpace":return[Hl(CI("start",e,t,n),CI("stop",e,t,n),CI("num",e,t,n))];case"Multinomial":{const r=CI("logits",e,t,n),a=CI("numSamples",e,t,n),s=CI("seed",e,t,n);return[Lc(r,a,s)]}case"OneHot":{const r=CI("indices",e,t,n),a=CI("depth",e,t,n),s=CI("onValue",e,t,n),i=CI("offValue",e,t,n);return[Vi(r,a,s,i)]}case"Ones":return[$c(CI("shape",e,t,n),CI("dtype",e,t,n))];case"OnesLike":return[Pc(CI("x",e,t,n))];case"RandomUniform":return[nh(CI("shape",e,t,n),CI("minval",e,t,n),CI("maxval",e,t,n),CI("dtype",e,t,n))];case"Range":return[rh(CI("start",e,t,n),CI("stop",e,t,n),CI("step",e,t,n),CI("dtype",e,t,n))];case"TruncatedNormal":{const r=CI("shape",e,t,n),a=CI("mean",e,t,n),s=CI("stdDev",e,t,n),i=CI("seed",e,t,n);return[Hh(r,a,s,CI("dtype",e,t,n),i)]}case"Zeros":return[Cc(CI("shape",e,t,n),CI("dtype",e,t,n))];case"ZerosLike":return[kl(CI("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"dynamic":return(async(e,t,n)=>{switch(e.op){case"NonMaxSuppressionV5":{const{boxes:r,scores:a,maxOutputSize:s,iouThreshold:i,scoreThreshold:o,softNmsSigma:u}=BS(e,t,n),l=await fp.nonMaxSuppressionWithScoreAsync(r,a,s,i,o,u);return[l.selectedIndices,l.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:r,scores:a,maxOutputSize:s,iouThreshold:i,scoreThreshold:o}=BS(e,t,n),u=CI("padToMaxOutputSize",e,t,n),l=await fp.nonMaxSuppressionPaddedAsync(r,a,s,i,o,u);return[l.selectedIndices,l.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:r,scores:a,maxOutputSize:s,iouThreshold:i,scoreThreshold:o}=BS(e,t,n);return[await fp.nonMaxSuppressionAsync(r,a,s,i,o)]}case"Where":{const r=wi(CI("condition",e,t,n),"bool"),a=[await Zh(r)];return r.dispose(),a}case"ListDiff":return bh(CI("x",e,t,n),CI("y",e,t,n));default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n);case"evaluation":return jo((()=>((e,t,n)=>{switch(e.op){case"TopKV2":{const r=CI("x",e,t,n),a=CI("k",e,t,n),s=CI("sorted",e,t,n),i=Gh(r,a,s);return[i.values,i.indices]}case"Unique":{const r=CI("x",e,t,n),a=jh(r);return[a.values,a.indices]}case"UniqueV2":{const r=CI("x",e,t,n),a=CI("axis",e,t,n),s=jh(r,a);return[s.values,s.indices]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"image":return jo((()=>((e,t,n)=>{switch(e.op){case"ResizeBilinear":{const r=CI("images",e,t,n),a=CI("size",e,t,n),s=CI("alignCorners",e,t,n),i=CI("halfPixelCenters",e,t,n);return[fp.resizeBilinear(r,[a[0],a[1]],s,i)]}case"ResizeNearestNeighbor":{const r=CI("images",e,t,n),a=CI("size",e,t,n),s=CI("alignCorners",e,t,n),i=CI("halfPixelCenters",e,t,n);return[fp.resizeNearestNeighbor(r,[a[0],a[1]],s,i)]}case"CropAndResize":{const r=CI("image",e,t,n),a=CI("boxes",e,t,n),s=CI("boxInd",e,t,n),i=CI("cropSize",e,t,n),o=CI("method",e,t,n),u=CI("extrapolationValue",e,t,n);return[fp.cropAndResize(r,a,s,i,o,u)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"graph":return jo((()=>((e,t,n)=>{switch(e.op){case"Const":return t[e.name];case"PlaceholderWithDefault":const r=CI("default",e,t,n);return[$I(e.name,t,n)||r];case"Placeholder":return[$I(e.name,t,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":return[RI(CI("x",e,t,n))];case"IdentityN":return CI("x",e,t,n).map((e=>RI(e)));case"Snapshot":return[RI(CI("x",e,t,n))];case"Shape":return[Ph(CI("x",e,t,n).shape,"int32")];case"ShapeN":return CI("x",e,t,n).map((e=>Ph(e.shape)));case"Size":return[mh(CI("x",e,t,n).size,"int32")];case"Rank":return[mh(CI("x",e,t,n).rank,"int32")];case"NoOp":return[mh(1)];case"Print":const a=CI("x",e,t,n),s=CI("data",e,t,n),i=CI("message",e,t,n),o=CI("summarize",e,t,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(i);for(let e=0;e<s.length;e++)console.log(Array.prototype.slice.call(s[e].dataSync()).slice(0,o));return[a];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"logical":return jo((()=>((e,t,n)=>{switch(e.op){case"Equal":return[wl(CI("a",e,t,n),CI("b",e,t,n))];case"NotEqual":return[zc(CI("a",e,t,n),CI("b",e,t,n))];case"Greater":return[Ol(CI("a",e,t,n),CI("b",e,t,n))];case"GreaterEqual":return[Ll(CI("a",e,t,n),CI("b",e,t,n))];case"Less":return[Ul(CI("a",e,t,n),CI("b",e,t,n))];case"LessEqual":return[Gl(CI("a",e,t,n),CI("b",e,t,n))];case"LogicalAnd":return[bc(CI("a",e,t,n),CI("b",e,t,n))];case"LogicalNot":return[xc(CI("a",e,t,n))];case"LogicalOr":return[wc(CI("a",e,t,n),CI("b",e,t,n))];case"Select":case"SelectV2":return[vl(CI("condition",e,t,n),CI("a",e,t,n),CI("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"matrices":return jo((()=>((e,t,n)=>{switch(e.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[Wi(CI("a",e,t,n),CI("b",e,t,n),CI("transposeA",e,t,n),CI("transposeB",e,t,n))];case"Einsum":return[Nl(CI("equation",e,t,n),...CI("tensors",e,t,n))];case"Transpose":return[Ui(CI("x",e,t,n),CI("perm",e,t,n))];case"_FusedMatMul":const[r,a]=CI("fusedOps",e,t,n),s="biasadd"===r,i="prelu"===a,o=CI("numArgs",e,t,n),u=CI("leakyreluAlpha",e,t,n);if(s){if(i&&2!==o)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&1!==o)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[l,c]=CI("args",e,t,n);return[ld.matMul({a:CI("a",e,t,n),b:CI("b",e,t,n),transposeA:CI("transposeA",e,t,n),transposeB:CI("transposeB",e,t,n),bias:l,activation:a,preluActivationWeights:c,leakyreluAlpha:u})];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"normalization":return jo((()=>((e,t,n)=>{switch(e.op){case"FusedBatchNorm":case"FusedBatchNormV2":case"FusedBatchNormV3":return[Gu(CI("x",e,t,n),CI("mean",e,t,n),CI("variance",e,t,n),CI("offset",e,t,n),CI("scale",e,t,n),CI("epsilon",e,t,n))];case"LRN":return[jl(CI("x",e,t,n),CI("radius",e,t,n),CI("bias",e,t,n),CI("alpha",e,t,n),CI("beta",e,t,n))];case"Softmax":return[Th(CI("x",e,t,n))];case"LogSoftmax":return[uc(CI("x",e,t,n))];case"SparseToDense":return[rd(CI("sparseIndices",e,t,n),CI("outputShape",e,t,n),CI("sparseValues",e,t,n),CI("defaultValue",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"reduction":return jo((()=>((e,t,n)=>{switch(e.op){case"Max":{const r=CI("axis",e,t,n),a=CI("keepDims",e,t,n);return[sc(CI("x",e,t,n),r,a)]}case"Mean":{const r=CI("axis",e,t,n),a=CI("keepDims",e,t,n);return[Tc(CI("x",e,t,n),r,a)]}case"Min":{const r=CI("axis",e,t,n),a=CI("keepDims",e,t,n);return[Ec(CI("x",e,t,n),r,a)]}case"Sum":{const r=CI("axis",e,t,n),a=CI("keepDims",e,t,n);return[oc(CI("x",e,t,n),r,a)]}case"All":{const r=CI("axis",e,t,n),a=CI("keepDims",e,t,n);return[pu(CI("x",e,t,n),r,a)]}case"Any":{const r=CI("axis",e,t,n),a=CI("keepDims",e,t,n);return[fu(CI("x",e,t,n),r,a)]}case"ArgMax":{const r=CI("axis",e,t,n);return[mu(CI("x",e,t,n),r)]}case"ArgMin":{const r=CI("axis",e,t,n);return[gu(CI("x",e,t,n),r)]}case"Prod":{const r=CI("axis",e,t,n),a=CI("keepDims",e,t,n);return[Yc(CI("x",e,t,n),r,a)]}case"Cumsum":{const r=CI("axis",e,t,n),a=CI("exclusive",e,t,n),s=CI("reverse",e,t,n);return[hl(CI("x",e,t,n),r,a,s)]}case"Bincount":const r=CI("x",e,t,n),a=CI("weights",e,t,n),s=CI("size",e,t,n);return[Ku(r,a,s)];case"DenseBincount":{const r=CI("x",e,t,n),a=CI("weights",e,t,n),s=CI("size",e,t,n),i=CI("binaryOutput",e,t,n);return[dl(r,a,s,i)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"slice_join":return jo((()=>((e,t,n)=>{switch(e.op){case"ConcatV2":case"Concat":{const r=CI("n",e,t,n),a=CI("axis",e,t,n);let s=CI("tensors",e,t,n);return s=s.slice(0,r),[zu(s,a)]}case"Gather":{const r=CI("x",e,t,n),a=CI("indices",e,t,n);return[Ml(r,wi(a,"int32"),0)]}case"GatherV2":{const r=CI("axis",e,t,n),a=CI("batchDims",e,t,n),s=CI("x",e,t,n),i=CI("indices",e,t,n);return[Ml(s,wi(i,"int32"),r,a)]}case"Reverse":{const r=CI("dims",e,t,n),a=[];for(let e=0;e<r.length;e++)r[e]&&a.push(e);const s=CI("x",e,t,n);return[uh(s,a)]}case"ReverseV2":{const r=CI("axis",e,t,n),a=CI("x",e,t,n);return[uh(a,r)]}case"Slice":{const r=CI("begin",e,t,n),a=CI("size",e,t,n);return[Bu(CI("x",e,t,n),r,a)]}case"StridedSlice":{const r=CI("begin",e,t,n),a=CI("end",e,t,n),s=CI("strides",e,t,n),i=CI("beginMask",e,t,n),o=CI("endMask",e,t,n),u=CI("ellipsisMask",e,t,n),l=CI("newAxisMask",e,t,n),c=CI("shrinkAxisMask",e,t,n),h=CI("x",e,t,n);return[Lh(h,r,a,s,i,o,u,l,c)]}case"Pack":return jo((()=>{const r=CI("axis",e,t,n),a=CI("tensors",e,t,n),s=a[0].shape,i=Dh(a[0]).shape,o=a.map((e=>{const t=ca.arraysEqual(e.shape,s);if(!t&&!ca.arraysEqual(Dh(e).shape,i))throw new Error("the input tensors shape does not match");return t?e:Mu(e,s)}));return[Mh(o,r)]}));case"Unpack":{const r=CI("axis",e,t,n),a=CI("tensor",e,t,n);return Kh(a,r)}case"Tile":{const r=CI("reps",e,t,n);return[Al(CI("x",e,t,n),r)]}case"Split":case"SplitV":{const r=CI("axis",e,t,n),a=CI("numOrSizeSplits",e,t,n),s=CI("x",e,t,n);return Eh(s,a,r)}case"ScatterNd":{const r=CI("indices",e,t,n),a=CI("values",e,t,n),s=CI("shape",e,t,n);return[nd(r,a,s)]}case"GatherNd":{const r=CI("x",e,t,n),a=CI("indices",e,t,n);return[ad(r,a)]}case"SparseToDense":{const r=CI("sparseIndices",e,t,n),a=CI("outputShape",e,t,n),s=CI("sparseValues",e,t,n),i=CI("defaultValue",e,t,n);return[rd(r,s,a,s.dtype===i.dtype?i:wi(i,s.dtype))]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"sparse":return jo((()=>((e,t,n)=>{switch(e.op){case"SparseFillEmptyRows":{const{outputIndices:r,outputValues:a,emptyRowIndicator:s,reverseIndexMap:i}=yp.sparseFillEmptyRows(CI("indices",e,t,n),CI("values",e,t,n),CI("denseShape",e,t,n),CI("defaultValue",e,t,n));return[r,a,s,i]}case"SparseReshape":{const{outputIndices:r,outputShape:a}=yp.sparseReshape(CI("inputIndices",e,t,n),CI("inputShape",e,t,n),CI("newShape",e,t,n));return[r,a]}case"SparseSegmentMean":return[yp.sparseSegmentMean(CI("data",e,t,n),CI("indices",e,t,n),CI("segmentIds",e,t,n))];case"SparseSegmentSum":return[yp.sparseSegmentSum(CI("data",e,t,n),CI("indices",e,t,n),CI("segmentIds",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"spectral":return jo((()=>((e,t,n)=>{switch(e.op){case"FFT":return[Ch(CI("x",e,t,n))];case"IFFT":return[$h(CI("x",e,t,n))];case"RFFT":return[Ah(CI("x",e,t,n))];case"IRFFT":return[_h(CI("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"string":return jo((()=>((e,t,n)=>{switch(e.op){case"StringNGrams":{const{nGrams:r,nGramsSplits:a}=bp.stringNGrams(CI("data",e,t,n),CI("dataSplits",e,t,n),CI("separator",e,t,n),CI("nGramWidths",e,t,n),CI("leftPad",e,t,n),CI("rightPad",e,t,n),CI("padWidth",e,t,n),CI("preserveShortSequences",e,t,n));return[r,a]}case"StringSplit":{const{indices:r,values:a,shape:s}=bp.stringSplit(CI("input",e,t,n),CI("delimiter",e,t,n),CI("skipEmpty",e,t,n));return[r,a,s]}case"StringToHashBucketFast":return[bp.stringToHashBucketFast(CI("input",e,t,n),CI("numBuckets",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"transformation":return jo((()=>((e,t,n)=>{switch(e.op){case"Cast":return[wi(CI("x",e,t,n),CI("dtype",e,t,n))];case"ExpandDims":{const r=CI("axis",e,t,n);return[_l(CI("x",e,t,n),r)]}case"Squeeze":{const r=CI("axis",e,t,n);return[Dh(CI("x",e,t,n),r)]}case"Reshape":return[Mu(CI("x",e,t,n),CI("shape",e,t,n))];case"MirrorPad":return[Fc(CI("x",e,t,n),CI("padding",e,t,n),CI("mode",e,t,n))];case"PadV2":case"Pad":return[Wc(CI("x",e,t,n),CI("padding",e,t,n),CI("constantValue",e,t,n))];case"SpaceToBatchND":{const r=CI("blockShape",e,t,n),a=CI("paddings",e,t,n);return[jc(CI("x",e,t,n),r,a)]}case"BatchToSpaceND":{const r=CI("blockShape",e,t,n),a=CI("crops",e,t,n);return[Uu(CI("x",e,t,n),r,a)]}case"DepthToSpace":{const r=CI("blockSize",e,t,n),a=CI("dataFormat",e,t,n).toUpperCase();return[pl(CI("x",e,t,n),r,a)]}case"BroadcastTo":return[Xu(CI("x",e,t,n),CI("shape",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"hash_table":return WS(e,t,n,r);case"custom":const a=NI(e.op);if(a&&a.customExecutor)return a.customExecutor(new class{constructor(e,t,n){this.node=e,this.tensorMap=t,this.context=n,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map((e=>this.getInput(e))),null!=e.rawAttrs&&(this.attrs=Object.keys(e.rawAttrs).reduce(((e,t)=>(e[t]=this.getAttr(t),e)),{}))}getInput(e){return $I(e,this.tensorMap,this.context)}getAttr(e,t){const n=this.node.rawAttrs[e];if(null!=n.tensor)return $I(e,this.tensorMap,this.context);if(null!=n.i||null!=n.f)return kS(this.node.rawAttrs,e,t);if(null!=n.s)return wS(this.node.rawAttrs,e,t);if(null!=n.b)return vS(this.node.rawAttrs,e,t);if(null!=n.shape)return $S(this.node.rawAttrs,e,t);if(null!=n.type)return NS(this.node.rawAttrs,e,t);if(null!=n.list){if(null!=n.list.i||null!=n.list.f)return _S(this.node.rawAttrs,e,t);if(null!=n.list.s)return ES(this.node.rawAttrs,e,t);if(null!=n.list.shape)return AS(this.node.rawAttrs,e,t);if(null!=n.list.b)return FS(this.node.rawAttrs,e,t);if(null!=n.list.type)return TS(this.node.rawAttrs,e,t)}return t}}(e,t,n));throw TypeError(`Custom op ${e.op} is not registered.`);default:throw TypeError(`Unknown op '${e.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(e,t,n);return ca.isPromise(a)?a.then((e=>[].concat(e))):[].concat(a)}var US=class{constructor(e={},t={},n={},r={}){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=n,this.functionMap=r,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const e=[];for(let t=0;t<this.contexts.length-1;t++){const n=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(n))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map((e=>0===e.id&&0===e.iterationId?"":`${e.frameName}-${e.iterationId}`)).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(!(this.contexts&&this.contexts.length>1))throw new Error("Cannot exit frame, the context is empty");this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift()}nextIteration(){if(!(this.contexts&&this.contexts.length>0))throw new Error("Cannot increase frame iteration, the context is empty");{this.contexts=this.contexts.slice(),this.lastId++;const e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(const t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(const t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}};function GS(e,t,n,r){const a=new Set,s=[];let i=null,o=null;const u=new Set,l=Object.keys(e).map((e=>AI(e)[0]));let c=[];null!=r&&(c=r.map((e=>AI(e.name)[0])));const h=[...t];for(;h.length>0;){const e=h.pop();(KS(e)||XS(e)||YS(e))&&null==i&&(i=e,o=i.children.map((e=>e.name)).filter((e=>a.has(e)))),a.add(e.name),null==n[e.name]&&-1===l.indexOf(e.name)&&-1===c.indexOf(e.name)&&(0!==e.inputs.length?e.inputs.forEach((e=>{u.has(e.name)||(u.add(e.name),h.push(e))})):s.push(e.name))}return{inputs:e,outputs:t,usedNodes:a,missingInputs:s,dynamicNode:i,syncInputs:o}}var HS=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"],jS=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"],qS=["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"];function KS(e){return HS.indexOf(e.op)>=0}function XS(e){return jS.indexOf(e.op)>=0}function YS(e){return qS.indexOf(e.op)>=0}var ZS=class{constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this._weightMap={},this.SEPERATOR=",",this._functions={},this._functionExecutorMap={},this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,null!=e.functions&&Object.keys(e.functions).forEach((t=>{this._functionExecutorMap[t]=new ZS(e.functions[t],this)}))}get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){const t=Object.keys(e).map((t=>e[t].map((e=>e.id))));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get outputs(){return this._outputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get inputNodes(){return this._inputs.map((e=>e.signatureKey||e.name))}get outputNodes(){return this._outputs.map((e=>{const t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t}))}get functions(){return Object.keys(this._functions).reduce(((e,t)=>(e[t]=this._functions[t].signature,e)),{})}getCompilationKey(e,t){const n=e.map((e=>e.name)).sort(),r=t.map((e=>e.name)).sort();return n.join(this.SEPERATOR)+"--"+r.join(this.SEPERATOR)}compile(e,t){const n=GS(e,t,this.weightMap,this._initNodes),{missingInputs:r,dynamicNode:a,syncInputs:s}=n;if(null!=a)throw new Error(`This execution contains the node '${a.name}', which has the dynamic op '${a.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${s}]`);if(r.length>0){const n=t.map((e=>e.name)),a=Object.keys(e);throw new Error(`Cannot compute the outputs [${n}] from the provided inputs [${a}]. Missing the following inputs: [${r}]`)}return function(e,t,n){const{usedNodes:r,inputs:a}=n,s=[],i=Object.keys(a).map((e=>AI(e)[0])).map((t=>e.nodes[t])),o=e.initNodes;i.forEach((e=>{r.has(e.name)&&s.push(e)})),e.weights.forEach((e=>{r.has(e.name)&&s.push(e)})),null!=o&&o.forEach((e=>{r.has(e.name)&&s.push(e)}));const u=new Set,l=[];for(;s.length>0;){const e=s.pop();u.add(e.name),t[e.name]||l.push(e),e.children.forEach((e=>{!u.has(e.name)&&r.has(e.name)&&e.inputs.every((e=>u.has(e.name)))&&s.push(e)}))}return l}(this.graph,this.weightMap,n)}execute(e,t){e=this.mapInputs(e);const n=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);const r=n.map((e=>this.graph.nodes[AI(e)[0]])),a=t.map((e=>AI(e)[0]));let s=a.map((e=>this.graph.nodes[e]));0===s.length&&(s=this._outputs);const i=this.getCompilationKey(r,s);let o=this.compiledMap.get(i);null==o&&(o=this.compile(e,s),this.compiledMap.set(i,o));const u={},l={};return jo((()=>{const n=new US(this.weightMap,u,l,this.functionExecutorMap),r=Object.assign({},this.weightMap);Object.keys(e).forEach((t=>{const[n,a]=AI(t),s=[];s[a]=e[t],r[n]=s}));const s=this.getFrozenTensorIds(r),i={};for(let e=0;e<o.length;e++){const t=o[e];if(!r[t.name]){const e=VS(t,r,n,this._resourceManager);if(ca.isPromise(e))throw new Error(`The execution of the op '${t.op}' returned a promise. Please use model.executeAsync() instead.`);r[t.name]=e,this.checkTensorForDisposal(t.name,t,r,n,s,a,i)}}return null==this.parent&&n.dispose(s),t.map((e=>$I(e,r,n)))}))}getFrozenTensorIds(e){const t=[].concat.apply([],Object.keys(e).map((t=>e[t])).map((e=>e.map((e=>e.id)))));return new Set(t)}checkTensorForDisposal(e,t,n,r,a,s,i){"control"!==t.category&&-1===s.indexOf(e)&&(n[e].forEach((e=>{null!=e&&(i[e.id]=(i[e.id]||0)+t.children.length)})),t.inputs.forEach((e=>{if("control"!==e.category){const t=function(e,t,n){return t[EI(e,n.currentContextId)]}(e.name,n,r);null!=t&&t.forEach((e=>{if(e&&!e.kept&&!a.has(e.id)){const t=i[e.id];1===t?(e.dispose(),delete i[e.id]):null!=t&&i[e.id]--}}))}})))}async executeAsync(e,t){return this._executeAsync(e,t)}async _executeAsync(e,t,n=!1,r={},a={}){n||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));const s=new US(this.weightMap,r,a,this.functionExecutorMap),i=await this.executeWithControlFlow(e,s,t,n),o=t.map((e=>$I(e,i,s))),u=o.map((e=>e.id)),l=Object.keys(e).map((t=>e[t].id)),c=new Set([...u,...l,...this.weightIds]);return Object.keys(i).forEach((e=>{i[e].forEach((e=>{!e||e.kept||e.isDisposed||c.has(e.id)||e.dispose()}))})),null==this.parent&&s.dispose(c),o}async executeFunctionAsync(e,t,n){const r=e.reduce(((e,t,n)=>(e[this.inputs[n].name]=t,e)),{});return this._executeAsync(r,this.outputNodes,!0,t,n)}async executeWithControlFlow(e,t,n,r){const a=Object.keys(e),s=a.map((e=>this.graph.nodes[AI(e)[0]])),i=n.map((e=>AI(e)[0]));let o=i.map((e=>this.graph.nodes[e]));0===o.length&&(o=this._outputs);const{usedNodes:u,missingInputs:l,dynamicNode:c,syncInputs:h}=GS(e,o,this.weightMap,this._initNodes),d=[...s,...this.graph.weights,...this._initNodes||[]].map((e=>({node:e,contexts:t.currentContext}))),p=Object.assign({},this.weightMap);Object.keys(e).forEach((t=>{const[n,r]=AI(t),a=[];a[r]=e[t],p[n]=a}));const f={},m=this.getFrozenTensorIds(p),g={};for(;d.length>0;){const e=this.processStack(s,d,t,p,g,m,i,f,u);await Promise.all(e)}null!=c||r||console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const y=o.filter((e=>!KS(e)&&!$I(e.name,p,t))).map((e=>e.name));if(y.length>0){let e="";throw null!=c&&(e=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${h}]`),new Error(`Cannot compute the outputs [${y}] from the provided inputs [${a}]. Consider providing the following inputs: [${l}]. ${e}`)}return p}processStack(e,t,n,r,a,s,i,o,u){const l=[];for(;t.length>0;){const e=t.pop();n.currentContext=e.contexts;let c="";if("Enter"===e.node.op&&CI("isConstant",e.node,r,n)&&([c]=_I(e.node.name,n)),null==r[e.node.name]){const h=VS(e.node,r,n,this._resourceManager);c||([c]=_I(e.node.name,n));const d=n.currentContext;ca.isPromise(h)?l.push(h.then((l=>(r[c]=l,n.currentContext=d,this.checkTensorForDisposal(c,e.node,r,n,s,i,o),this.processChildNodes(e.node,t,n,r,a,u),l)))):(r[c]=h,this.checkTensorForDisposal(c,e.node,r,n,s,i,o),this.processChildNodes(e.node,t,n,r,a,u))}else this.processChildNodes(e.node,t,n,r,a,u)}return l}processChildNodes(e,t,n,r,a,s){e.children.forEach((e=>{const[i]=_I(e.name,n);!a[i]&&s.has(e.name)&&("Merge"===e.op?e.inputNames.some((e=>!!$I(e,r,n)))&&(a[i]=!0,t.push({contexts:n.currentContext,node:e})):e.inputNames.every((e=>!!$I(e,r,n)))&&(a[i]=!0,t.push({contexts:n.currentContext,node:e})))}))}dispose(){Object.keys(this.weightMap).forEach((e=>this.weightMap[e].forEach((e=>e.dispose()))))}checkInputShapeAndType(e){Object.keys(e).forEach((t=>{const n=e[t],[r]=AI(t),a=this.graph.nodes[r];if(a.attrParams.shape&&a.attrParams.shape.value){const e=a.attrParams.shape.value,t=e.length===n.shape.length&&n.shape.every(((t,n)=>-1===e[n]||e[n]===t));ca.assert(t,(()=>`The shape of dict['${a.name}'] provided in model.execute(dict) must be [${e}], but was [${n.shape}]`))}a.attrParams.dtype&&a.attrParams.dtype.value&&ca.assert(n.dtype===a.attrParams.dtype.value,(()=>`The dtype of dict['${a.name}'] provided in model.execute(dict) must be ${a.attrParams.dtype.value}, but was ${n.dtype}`))}))}mapInputs(e){const t={};for(const n in e)null!=this._signature&&null!=this._signature.inputs&&null!=this._signature.inputs[n]?t[this._signature.inputs[n].name]=e[n]:t[n]=e[n];return t}checkInputs(e){const t=Object.keys(e).filter((e=>{const[t]=AI(e);return null==this.graph.nodes[t]}));if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map((e=>null!=this._signature&&null!=this._signature.outputs&&null!=this._signature.outputs[e]?this._signature.outputs[e].name:e),{})}checkOutputs(e){e.forEach((e=>{const[t]=AI(e);if(!this.graph.nodes[t])throw new Error(`The output '${e}' is not found in the graph`)}))}},JS=class{constructor(e,t={}){this.modelUrl=e,this.loadOptions=t,this.version="n/a",null==t&&(this.loadOptions={}),this.resourceManager=new class{constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(const e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(const e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}}}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}findIOHandler(){const e=this.modelUrl;if(null!=e.load)this.handler=e;else if(null!=this.loadOptions.requestInit)this.handler=Ii.browserHTTPRequest(e,this.loadOptions);else{const t=Ii.getLoadHandlers(e,this.loadOptions);if(0===t.length)t.push(Ii.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}async load(){if(this.findIOHandler(),null==this.handler.load)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const e=await this.handler.load();return this.loadSync(e)}loadSync(e){this.artifacts=e;const t=this.artifacts.modelTopology;let n;n=null!=this.artifacts.userDefinedMetadata&&null!=this.artifacts.userDefinedMetadata.signature?this.artifacts.userDefinedMetadata.signature:this.artifacts.signature,this.signature=n,this.version=`${t.versions.producer}.${t.versions.minConsumer}`;const r=Ii.decodeWeights(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new ZS(bS.Instance.transformGraph(t,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(r),this.executor.resourceManager=this.resourceManager,null!=e.modelInitializer&&null!=e.modelInitializer.node){const t=bS.Instance.transformGraph(e.modelInitializer);this.initializer=new ZS(t),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializer.executeAsync({},[])}return!0}async save(e,t){if("string"==typeof e){const t=Ii.getSaveHandlers(e);if(0===t.length)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new Error(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}predict(e,t){return this.execute(e,this.outputNodes)}normalizeInputs(e){if(!(e instanceof Ba||Array.isArray(e)))return e;if((e=Array.isArray(e)?e:[e]).length!==this.inputNodes.length)throw new Error(`Input tensor count mismatch,the graph model has ${this.inputNodes.length} placeholders, while there are ${e.length} input tensors.`);return this.inputNodes.reduce(((t,n,r)=>(t[n]=e[r],t)),{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}execute(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=this.executor.execute(e,t);return n.length>1?n:n[0]}async executeAsync(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=await this.executor.executeAsync(e,t);return n.length>1?n:n[0]}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce(((t,n)=>(t[n]=[e[n]],t)),{})}dispose(){this.executor.dispose(),this.initializer&&this.initializer.dispose(),this.resourceManager.dispose()}};async function QS(e,t={}){if(null==e)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");null==t&&(t={}),t.fromTFHub&&null==e.load&&(e.endsWith("/")||(e+="/"),e=`${e}model.json?tfjs-format=file`);const n=new JS(e,t);return await n.load(),n}var eN="3.8.0",tN={};y(tN,{CSVDataset:()=>jN,Dataset:()=>DN,FileDataSource:()=>aT,TextLineDataset:()=>PN,URLDataSource:()=>sT,array:()=>ON,csv:()=>iT,func:()=>oT,generator:()=>uT,microphone:()=>cT,version_data:()=>hT,webcam:()=>lT,zip:()=>LN});var nN=b(L()),rN=b(L());function aN(e,t,n=new Map,r=new Set){if(null==e)return null;if(r.has(e))throw new Error("Circular references are not supported.");if(n.has(e))return n.get(e);const a=t(e);if(a.recurse&&null!==a.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(a.recurse){if(lN(e)){const a=Array.isArray(e)?[]:{};r.add(e);for(const s in e){const i=aN(e[s],t,n,r);a[s]=i}return r.delete(e),a}throw new Error(`Can't recurse into non-iterable type: ${e}`)}return n.set(e,a.value),a.value}function sN(e,t=oN){return iN(e,t)}function iN(e,t,n=new Set){const r=e[0];if(n.has(r))throw new Error("Circular references are not supported.");const a=t(e);if(a.recurse&&null!==a.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(a.recurse){if(lN(r)){const a=Array.isArray(r)?[]:{};n.add(r);for(const s in r){const r=iN(e.map((e=>e[s])),t,n);a[s]=r}return n.delete(r),a}throw new Error(`Can't recurse into non-iterable type: ${r}`)}return a.value}function oN(e){return null===e?null:lN(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}async function uN(e,t){const n=new Map;aN(e,t,n);for(const e of Array.from(n.keys())){const t=n.get(e);if(ca.isPromise(t)){const r=await t;n.set(e,r)}}return aN(e,t,n)}function lN(e){return null!=e&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||"object"==typeof e&&!(e instanceof Ba))}function cN(e){return e instanceof Ba?{value:e.clone(),recurse:!1}:lN(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}var hN=class{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,null==e)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(const t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}},dN=class extends hN{constructor(){super(dN.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){const e=2*this.capacity,t=new Array(e),n=this.length();for(let e=0;e<n;e++)t[e]=this.get(this.wrap(this.begin+e));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}};function pN(e){return new bN(e)}function fN(e){return new xN(e)}dN.INITIAL_CAPACITY=32;var mN,gN,yN=class{async toArray(){const e=[];let t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){const e=this.prefetch(100),t=[];let n=await e.next();for(;!n.done;)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);for(;!t.done&&n;)t=await this.next(),n=e(t.value)}handleErrors(e){return new TN(this,e)}filter(e){return new SN(this,e)}map(e){return new NN(this,e)}mapAsync(e){return new CN(this,e)}serialMapAsync(e){return new CN(this,e).serial()}flatmap(e){return new _N(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile((e=>!0===e))}rowMajorBatch(e,t=!0){return new IN(this,e,t)}columnMajorBatch(e,t=!0,n=oN){return this.rowMajorBatch(e,t).map((e=>sN(e,n)))}concatenate(e,t){return new EN(pN([this,e]),t)}take(e){return e<0||null==e?this:new kN(this,e)}skip(e){return e<0||null==e?this:new vN(this,e)}prefetch(e){return new FN(this,e)}shuffle(e,t){return new RN(this,e,t)}serial(){return new wN(this)}},bN=class extends yN{constructor(e){super(),this.items=e,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const e=this.items[this.trav];return this.trav++,{value:(t=e,aN(t,cN)),done:!1};var t}},xN=class extends yN{constructor(e){super(),this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message=`Error thrown while iterating through a dataset: ${e.message}`,e}}},wN=class extends yN{constructor(e){super(),this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){return this.upstream.next()}},vN=class extends yN{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){const e=await this.upstream.next();if(e.done)return e;qo(e.value)}return this.upstream.next()}},kN=class extends yN{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}},IN=class extends yN{constructor(e,t,n=!0){super(),this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){const e=[];for(;e.length<this.batchSize;){const t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}},SN=class extends yN{constructor(e,t){super(),this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;){const e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;qo(e.value)}}},NN=class extends yN{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Map`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=Qa.getTensorsInContainer(e.value),n=this.transform(e.value),r=Qa.getTensorsInContainer(n);for(const e of t)Qa.isTensorInList(e,r)||e.dispose();return{value:n,done:!1}}},TN=class extends yN{constructor(e,t){super(),this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}},CN=class extends yN{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=Qa.getTensorsInContainer(e.value),n=await this.transform(e.value),r=Qa.getTensorsInContainer(n);for(const e of t)Qa.isTensorInList(e,r)||e.dispose();return{value:n,done:!1}}},$N=class extends yN{constructor(){super(),this.outputQueue=new dN,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}},_N=class extends $N{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){const e=await this.upstream.next();if(e.done)return!1;const t=Qa.getTensorsInContainer(e.value),n=this.transform(e.value),r=Qa.getTensorsInContainer(n);this.outputQueue.pushAll(n);for(const e of t)Qa.isTensorInList(e,r)||e.dispose();return!0}},EN=class extends yN{constructor(e,t){super(),this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,null==this.iterator){const e=await this.moreIterators.next();if(e.done)return{value:null,done:!0};this.iterator=e.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}};(gN=mN||(mN={}))[gN.FAIL=0]="FAIL",gN[gN.SHORTEST=1]="SHORTEST",gN[gN.LONGEST=2]="LONGEST";var AN=class extends yN{constructor(e,t=mN.FAIL){super(),this.iterators=e,this.mismatchMode=t,this.count=0,this.currentPromise=null}summary(){return"{TODO: fill in upstream of zip summaries} -> Zip"}async nextState(e){await e;let t=0,n=0;const r=await uN(this.iterators,(function(e){return e instanceof yN?{value:e.next().then((e=>(t++,e.done&&n++,e.value))),recurse:!1}:{value:null,recurse:!0}}));if(t===n)return{value:null,done:!0};if(n>0)switch(this.mismatchMode){case mN.FAIL:throw new Error(`Zipped streams should have the same length. Mismatched at element ${this.count}.`);case mN.SHORTEST:return{value:null,done:!0};case mN.LONGEST:}return this.count++,{value:r,done:!1}}async next(){return this.currentPromise=this.nextState(this.currentPromise),this.currentPromise}},FN=class extends yN{constructor(e,t){super(),this.upstream=e,this.bufferSize=t,this.buffer=new hN(t)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){const e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}},RN=class extends FN{constructor(e,t,n){super(e,t),this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=rN.alea(n||ca.now().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){const e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(!t.done)return this.refill(),t;this.upstreamExhausted=!0}return{value:null,done:!0}}},DN=class{constructor(){this.size=null}batch(e,t=!0){const n=this;let r;return ca.assert(e>0,(()=>`batchSize needs to be positive, but it is\n      ${e}`)),r=this.size===1/0||null==this.size?this.size:t?Math.ceil(this.size/e):Math.floor(this.size/e),MN((async()=>(await n.iterator()).columnMajorBatch(e,t,zN)),r)}concatenate(e){const t=this;let n;return n=this.size===1/0||e.size===1/0?1/0:null!=this.size&&null!=e.size?this.size+e.size:null,MN((async()=>(await t.iterator()).concatenate(await e.iterator())),n)}filter(e){const t=this;let n;return n=this.size===1/0?1/0:null,MN((async()=>(await t.iterator()).filter((t=>jo((()=>e(t)))))),n)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){const t=this;return MN((async()=>(await t.iterator()).map((t=>jo((()=>e(t)))))),this.size)}mapAsync(e){const t=this;return MN((async()=>(await t.iterator()).mapAsync(e)),this.size)}prefetch(e){if(null==e)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const t=this;return MN((async()=>(await t.iterator()).prefetch(e)),this.size)}repeat(e){const t=this;let n;return n=null!=this.size&&e>0?this.size*e:0===e?0:null!=this.size&&(void 0===e||e<0)?1/0:null,MN((async()=>{return n=fN((async()=>({value:await t.iterator(),done:!1}))).take(e),new EN(n,undefined);var n}),n)}skip(e){const t=this;let n;return n=null!=this.size&&e>=0&&this.size>=e?this.size-e:null!=this.size&&(this.size<e||void 0===e||e<0)?0:null,MN((async()=>(await t.iterator()).skip(e)),n)}shuffle(e,t,n=!0){if(null==e||e<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);const r=this,a=nN.alea(t||ca.now().toString());return MN((async()=>{let t=a.int32();return n&&(t+=a.int32()),(await r.iterator()).shuffle(e,t.toString())}),this.size)}take(e){const t=this;let n;return n=null!=this.size&&this.size>e?e:null!=this.size&&this.size<=e?this.size:null,MN((async()=>(await t.iterator()).take(e)),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}};function MN(e,t=null){return new class extends DN{constructor(){super(...arguments),this.size=t}async iterator(){return e()}}}function ON(e){return MN((async()=>pN(e)),e.length)}function LN(e){if(!lN(e))throw new Error("The argument to zip() must be an object or array.");let t;if(Array.isArray(e))for(let n=0;n<e.length;n++)t=null==t?e[n].size:Math.min(t,e[n].size);else if(e instanceof Object)for(const n in e)t=null==t?e[n].size:Math.min(t,e[n].size);return MN((async()=>function(e,t=mN.FAIL){return new AN(e,t)}(await uN(e,(e=>{if(e instanceof DN)return{value:e.iterator(),recurse:!1};if(lN(e))return{value:null,recurse:!0};throw new Error("Leaves of the structure passed to zip() must be Datasets, not primitives.")})),mN.SHORTEST)),t)}function zN(e){if(null===e)return null;return null==(t=e[0])||null===(n=t)||"object"!=typeof n&&"function"!=typeof n||Array.isArray(t)||"object"==typeof t&&t instanceof Ba||ca.isTypedArray(t)?{value:function(e){if(0===e.length)throw new Error("Can't make a batch of zero elements.");return e[0]instanceof Ba?Mh(e):Cs(e)}(e),recurse:!1}:{value:null,recurse:!0};var t,n}DN.MAX_BUFFER_SIZE=1e4;var PN=class extends DN{constructor(e){super(),this.input=e}async iterator(){return(await this.input.iterator()).decodeUTF8().split("\n").map((e=>(e.endsWith("\r")&&(e=e.slice(0,-1)),e)))}},BN='"',WN=Symbol("out"),VN=Symbol("field"),UN=Symbol("quote"),GN=Symbol("quoteafterquote"),HN=Symbol("quoteinquote"),jN=class extends DN{constructor(e,t){super(),this.input=e,this.hasHeader=!0,this.fullColumnNames=null,this.columnNamesValidated=!1,this.columnConfigs=null,this.configuredColumnsOnly=!1,this.delimiter=",",this.delimWhitespace=!1,this.base=new PN(e),t||(t={}),this.hasHeader=!1!==t.hasHeader,this.fullColumnNames=t.columnNames,this.columnConfigs=t.columnConfigs,this.configuredColumnsOnly=t.configuredColumnsOnly,t.delimWhitespace?(ca.assert(null==t.delimiter,(()=>"Delimiter should not be provided when delimWhitespace is true.")),this.delimWhitespace=!0,this.delimiter=" "):this.delimiter=t.delimiter?t.delimiter:","}async columnNames(){return this.columnNamesValidated||await this.setColumnNames(),this.configuredColumnsOnly?Object.keys(this.columnConfigs):this.fullColumnNames}async setColumnNames(){const e=await this.maybeReadHeaderLine();if(!this.fullColumnNames&&!e)throw new Error("Column names must be provided if there is no header line.");this.fullColumnNames&&e&&ca.assert(e.length===this.fullColumnNames.length,(()=>"The length of provided columnNames ("+this.fullColumnNames.length.toString()+") does not match the length of the header line read from file ("+e.length.toString()+").")),this.fullColumnNames||(this.fullColumnNames=e);const t=this.fullColumnNames.reduce(((e,t)=>(e[t]=e[t]+1||1,e)),{}),n=Object.keys(t).filter((e=>t[e]>1));if(ca.assert(0===n.length,(()=>"Duplicate column names found: "+n.toString())),this.columnConfigs)for(const e of Object.keys(this.columnConfigs))if(-1===this.fullColumnNames.indexOf(e))throw new Error('The key "'+e+'" provided in columnConfigs does not match any of the column names ('+this.fullColumnNames.toString()+").");this.columnNamesValidated=!0}async maybeReadHeaderLine(){if(this.hasHeader){const e=await this.base.iterator(),t=await e.next();if(t.done)throw new Error("No data was found for CSV parsing.");const n=t.value;return this.parseRow(n,!1)}return null}async iterator(){this.columnNamesValidated||await this.setColumnNames();let e=await this.base.iterator();return this.hasHeader&&(e=e.skip(1)),e.map((e=>this.makeDataElement(e)))}makeDataElement(e){const t=this.parseRow(e),n={},r={};for(let a=0;a<this.fullColumnNames.length;a++){const s=this.fullColumnNames[a],i=this.columnConfigs?this.columnConfigs[s]:null;if(!this.configuredColumnsOnly||i){const o=t[a];let u=null;if(""===o)if(i&&void 0!==i.default)u=i.default;else{if(i&&(i.required||i.isLabel))throw new Error(`Required column ${s} is empty in this line: ${e}`);u=void 0}else{const e=Number(o);if(isNaN(e))u=i&&"bool"===i.dtype?this.getBoolean(o):o;else if(i&&i.dtype)switch(i.dtype){case"float32":u=e;break;case"int32":u=Math.floor(e);break;case"bool":u=this.getBoolean(o);break;default:u=e}else u=e}i&&i.isLabel?r[s]=u:n[s]=u}}return 0===Object.keys(r).length?n:{xs:n,ys:r}}getBoolean(e){return"1"===e||"true"===e.toLowerCase()?1:0}parseRow(e,t=!0){const n=[];let r=0;const a=e.length;let s=WN;for(let t=0;t<a;t++)switch(s){case WN:switch(e.charAt(t)){case BN:r=t+1,s=UN;break;case this.delimiter:if(r=t+1," "===this.delimiter&&this.delimWhitespace)break;n.push(""),s=WN;break;default:s=VN,r=t}break;case VN:switch(e.charAt(t)){case this.delimiter:n.push(e.substring(r,t)),s=WN,r=t+1}break;case UN:switch(e.charAt(t)){case BN:s=GN}break;case GN:switch(e.charAt(t)){case this.delimiter:n.push(e.substring(r,t-1)),s=WN,r=t+1;break;case BN:s=UN;break;default:s=HN}break;case HN:switch(e.charAt(t)){case BN:s=UN}}if(s===GN?n.push(e.substring(r,a-1)):n.push(e.substring(r)),t&&n.length!==this.fullColumnNames.length)throw new Error(`Invalid row in csv file. Should have ${this.fullColumnNames.length} elements in a row, but got ${n}`);return n}},qN=class extends yN{constructor(e){super(),this.microphoneConfig=e,this.isClosed=!1,this.fftSize=e.fftSize||1024;const t=Math.log2(this.fftSize);if(this.fftSize<0||t<4||t>14||!Number.isInteger(t))throw new Error(`Invalid fftSize: it must be a power of 2 between 2 to 4 and 2 to 14, but got ${this.fftSize}`);if(this.numFrames=e.numFramesPerSpectrogram||43,this.sampleRateHz=e.sampleRateHz,this.columnTruncateLength=e.columnTruncateLength||this.fftSize,this.audioTrackConstraints=e.audioTrackConstraints,this.smoothingTimeConstant=e.smoothingTimeConstant||0,this.includeSpectrogram=!1!==e.includeSpectrogram,this.includeWaveform=!0===e.includeWaveform,!this.includeSpectrogram&&!this.includeWaveform)throw new Error("Both includeSpectrogram and includeWaveform are false. At least one type of data should be returned.")}summary(){return"microphone"}static async create(e={}){if(Ue().get("IS_NODE"))throw new Error("microphone API is only supported in browser environment.");const t=new qN(e);return await t.start(),t}async start(){try{this.stream=await navigator.mediaDevices.getUserMedia({audio:null==this.audioTrackConstraints||this.audioTrackConstraints,video:!1})}catch(e){throw new Error(`Error thrown while initializing video stream: ${e.message}`)}if(!this.stream)throw new Error("Could not obtain audio from microphone.");const e=window.AudioContext||window.webkitAudioContext;if(this.audioContext=new e,this.sampleRateHz){if(this.audioContext.sampleRate!==this.sampleRateHz)throw new Error(`Mismatch in sampling rate: Expected: ${this.sampleRateHz}; Actual: ${this.audioContext.sampleRate}`)}else this.sampleRateHz=this.audioContext.sampleRate;const t=this.audioContext.createMediaStreamSource(this.stream);this.analyser=this.audioContext.createAnalyser(),this.analyser.fftSize=2*this.fftSize,this.analyser.smoothingTimeConstant=this.smoothingTimeConstant,t.connect(this.analyser),this.freqData=new Float32Array(this.fftSize),this.timeData=new Float32Array(this.fftSize)}async next(){if(this.isClosed)return{value:null,done:!0};let e,t;const n=await this.getAudioData();if(this.includeSpectrogram){const t=this.flattenQueue(n.freqDataQueue);e=this.getTensorFromAudioDataArray(t,[this.numFrames,this.columnTruncateLength,1])}if(this.includeWaveform){const e=this.flattenQueue(n.timeDataQueue);t=this.getTensorFromAudioDataArray(e,[this.numFrames*this.fftSize,1])}return{value:{spectrogram:e,waveform:t},done:!1}}async capture(){return(await this.next()).value}async getAudioData(){const e=[],t=[];let n=0;return new Promise((r=>{const a=setInterval((()=>{this.includeSpectrogram&&(this.analyser.getFloatFrequencyData(this.freqData),this.freqData[0]===-1/0&&r({freqDataQueue:e,timeDataQueue:t}),e.push(this.freqData.slice(0,this.columnTruncateLength))),this.includeWaveform&&(this.analyser.getFloatTimeDomainData(this.timeData),t.push(this.timeData.slice())),++n===this.numFrames&&(clearInterval(a),r({freqDataQueue:e,timeDataQueue:t}))}),this.fftSize/this.sampleRateHz*1e3)}))}stop(){this.isClosed||(this.isClosed=!0,this.analyser.disconnect(),this.audioContext.close(),null!=this.stream&&this.stream.getTracks().length>0&&this.stream.getTracks()[0].stop())}toArray(){throw new Error("Can not convert infinite audio stream to array.")}getSampleRate(){return this.sampleRateHz}flattenQueue(e){const t=e[0].length,n=new Float32Array(e.length*t);return e.forEach(((e,r)=>n.set(e,r*t))),n}getTensorFromAudioDataArray(e,t){const n=new Float32Array(ca.sizeFromShape(t));return n.set(e,n.length-e.length),Cs(n,t)}},KN=class extends yN{constructor(e,t){if(super(),this.webcamVideoElement=e,this.webcamConfig=t,this.isClosed=!0,this.resize=!1,this.needToResize())if(this.resize=!0,this.cropSize=[this.webcamConfig.resizeHeight,this.webcamConfig.resizeWidth],this.cropBoxInd=Ph([0],"int32"),this.webcamConfig.centerCrop){const e=1*this.webcamConfig.resizeWidth/this.webcamVideoElement.width,t=1*this.webcamConfig.resizeHeight/this.webcamVideoElement.height,n=(1-e)/2,r=(1-t)/2,a=n+e,s=t+r;this.cropBox=Bh([r,n,s,a],[1,4])}else this.cropBox=Bh([0,0,1,1],[1,4])}summary(){return"webcam"}static async create(e,t={}){if(Ue().get("IS_NODE"))throw new Error("tf.data.webcam is only supported in browser environment.");if(!e){if(e=document.createElement("video"),!t.resizeWidth||!t.resizeHeight)throw new Error("Please provide webcam video element, or resizeWidth and resizeHeight to create a hidden video element.");e.width=t.resizeWidth,e.height=t.resizeHeight}const n=new KN(e,t);return await n.start(),n}async start(){this.webcamConfig.facingMode&&ca.assert("user"===this.webcamConfig.facingMode||"environment"===this.webcamConfig.facingMode,(()=>`Invalid webcam facing mode: ${this.webcamConfig.facingMode}. Please provide 'user' or 'environment'`));try{this.stream=await navigator.mediaDevices.getUserMedia({video:{deviceId:this.webcamConfig.deviceId,facingMode:this.webcamConfig.facingMode?this.webcamConfig.facingMode:"user",width:this.webcamVideoElement.width,height:this.webcamVideoElement.height}})}catch(e){throw e.message=`Error thrown while initializing video stream: ${e.message}`,e}if(!this.stream)throw new Error("Could not obtain video from webcam.");try{this.webcamVideoElement.srcObject=this.stream}catch(e){console.log(e),this.webcamVideoElement.src=window.URL.createObjectURL(this.stream)}return this.webcamVideoElement.play(),this.isClosed=!1,new Promise((e=>{this.webcamVideoElement.onloadedmetadata=()=>{e()}}))}async next(){if(this.isClosed)return{value:null,done:!0};let e;try{e=Hi.fromPixels(this.webcamVideoElement)}catch(e){throw new Error(`Error thrown converting video to pixels: ${JSON.stringify(e)}`)}if(!this.resize)return{value:e,done:!1};try{return{value:this.cropAndResizeFrame(e),done:!1}}catch(e){throw new Error(`Error thrown cropping the video: ${e.message}`)}finally{e.dispose()}}needToResize(){return!(!this.webcamConfig.resizeWidth||!this.webcamConfig.resizeHeight||this.webcamVideoElement.width===this.webcamConfig.resizeWidth&&this.webcamVideoElement.height===this.webcamConfig.resizeHeight)}cropAndResizeFrame(e){return jo((()=>{const t=_l(wi(e,"float32"),0);let n;n=fp.cropAndResize(t,this.cropBox,this.cropBoxInd,this.cropSize,"bilinear");const r=n.shape;return Mu(n,r.slice(1))}))}async capture(){return(await this.next()).value}stop(){this.stream.getTracks().forEach((e=>e.stop()));try{this.webcamVideoElement.srcObject=null}catch(e){console.log(e),this.webcamVideoElement.src=null}this.isClosed=!0}toArray(){throw new Error("Can not convert infinite video stream to array.")}},XN=class{},YN=class extends yN{split(e){return new ZN(this,e)}},ZN=class extends YN{constructor(e,t){super(),this.upstream=e,this.impl=new JN(e,t)}summary(){return this.impl.summary()}async next(){return this.impl.next()}},JN=class extends $N{constructor(e,t){super(),this.upstream=e,this.separator=t,this.carryover=""}summary(){return`${this.upstream.summary()} -> Split('${this.separator}')`}async pump(){const e=await this.upstream.next();if(e.done)return""!==this.carryover&&(this.outputQueue.push(this.carryover),this.carryover="",!0);const t=e.value.split(this.separator);t[0]=this.carryover+t[0];for(const e of t.slice(0,-1))this.outputQueue.push(e);return this.carryover=t[t.length-1],!0}},QN=class extends yN{decodeUTF8(){return new eT(this)}},eT=class extends YN{constructor(e){super(),this.upstream=e,this.impl=new tT(e)}summary(){return this.impl.summary()}async next(){return this.impl.next()}},tT=class extends $N{constructor(e){if(super(),this.upstream=e,Ue().get("IS_BROWSER"))this.decoder=new TextDecoder("utf-8");else{const{StringDecoder:e}=z();this.decoder=new e("utf8")}}summary(){return`${this.upstream.summary()} -> Utf8`}async pump(){const e=await this.upstream.next();let t,n;return!e.done&&(t=e.value,n=Ue().get("IS_BROWSER")?this.decoder.decode(t,{stream:!0}):this.decoder.write(Buffer.from(t.buffer)),this.outputQueue.push(n),!0)}},nT=class extends QN{constructor(e,t={}){super(),this.file=e,this.options=t,ca.assert(e instanceof Uint8Array||!!Ue().get("IS_BROWSER")&&(e instanceof File||e instanceof Blob),(()=>"FileChunkIterator only supports File, Blob and Uint8Array right now.")),this.offset=t.offset||0,this.chunkSize=t.chunkSize||1048576}summary(){return`FileChunks ${this.file}`}async next(){if(this.offset>=(this.file instanceof Uint8Array?this.file.byteLength:this.file.size))return{value:null,done:!0};const e=new Promise(((e,t)=>{const n=this.offset+this.chunkSize;if(this.file instanceof Uint8Array)e(new Uint8Array(this.file.slice(this.offset,n)));else{const r=new FileReader;r.onload=n=>{let a=r.result;if(a instanceof ArrayBuffer&&(a=new Uint8Array(a)),!(a instanceof Uint8Array))return t(new TypeError("FileReader returned unknown type."));e(a)},r.onabort=e=>t(new Error("Aborted")),r.onerror=e=>t(new Error(e.type));const a=this.file.slice(this.offset,n);r.readAsArrayBuffer(a)}this.offset=n}));return{value:await e,done:!1}}};function rT(e){return"string"==typeof e&&"file://"===e.substr(0,7)}var aT=class extends XN{constructor(e,t={}){super(),this.input=e,this.options=t}async iterator(){if(rT(this.input)&&Ue().get("IS_NODE")){const e=m("fs");this.input=e.readFileSync(this.input.substr(7))}return new nT(this.input,this.options)}},sT=class extends XN{constructor(e,t={}){super(),this.url=e,this.fileOptions=t}async iterator(){return rT(this.url)?new aT(this.url,this.fileOptions).iterator():async function(e,t={}){let n,r;var a;"string"==typeof e?n=e:(n=e.url,r={method:(a=e).method,headers:a.headers,body:a.body,mode:a.mode,credentials:a.credentials,cache:a.cache,redirect:a.redirect,referrer:a.referrer,integrity:a.integrity});const s=await ca.fetch(n,r);if(s.ok){const e=new Uint8Array(await s.arrayBuffer());return new nT(e,t)}throw new Error(s.statusText)}(this.url,this.fileOptions)}};function iT(e,t={}){return new jN(new sT(e),t)}function oT(e){const t=fN(e);return MN((async()=>t))}function uT(e){return MN((async()=>{const t=await e();return fN((()=>t.next()))}))}async function lT(e,t){return KN.create(e,t)}async function cT(e){return qN.create(e)}var hT="3.8.0";function dT(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&ca.assert("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the CPU backend.`))}))}var pT=vf.whereImpl,fT=class extends H{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new G(this,Uo())}nextDataId(){return fT.nextDataId++}write(e,t,n){this.firstUse&&(this.firstUse=!1,Ue().get("IS_NODE")&&Ap.warn("\n============================\nHi there 👋. Looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, which binds to TensorFlow C++, by running npm i @tensorflow/tfjs-node, or npm i @tensorflow/tfjs-node-gpu if you have CUDA. Then call require('@tensorflow/tfjs-node'); (-gpu suffix for CUDA) at the start of your program. Visit https://github.com/tensorflow/tfjs-node for more details.\n============================"));const r={id:this.nextDataId()};return this.data.set(r,{values:e,dtype:n,refCount:1}),r}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&ca.isString(n[0])){const a=n.map((e=>ca.encodeString(e)));r=this.write(a,e,t)}else r=this.write(n,e,t);return{dataId:r,shape:e,dtype:t}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){this.data.get(e).refCount++}decRef(e){this.data.has(e)&&this.data.get(e).refCount--}move(e,t,n,r,a){this.data.set(e,{values:t,dtype:r,refCount:a})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){const{dtype:t,complexTensorInfos:n}=this.data.get(e);if("complex64"===t){const e=this.readSync(n.real.dataId),t=this.readSync(n.imag.dataId);return Ap.mergeRealAndImagArrays(e,t)}return this.data.get(e).values}bufferSync(e){const t=this.readSync(e.dataId);let n=t;if("string"===e.dtype)try{n=t.map((e=>ca.decodeString(e)))}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return xi(e.shape,e.dtype,n)}makeOutput(e,t,n){const r=this.write(e,t,n);return Uo().makeTensorFromDataId(r,t,n,this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;const{complexTensorInfos:n}=this.data.get(e);null!=n&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){const t=ca.now();return e(),{kernelMs:ca.now()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){dT([e],"where");const t=this.readSync(e.dataId);return pT(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}};fT.nextDataId=0;var mT={};function gT(e){const t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}y(mT,{addImpl:()=>ET,bincountImpl:()=>DT,bincountReduceImpl:()=>MT,ceilImpl:()=>PT,concatImpl:()=>VT,equalImpl:()=>UT,expImpl:()=>jT,expm1Impl:()=>XT,floorImpl:()=>JT,gatherNdImpl:()=>tC,gatherV2Impl:()=>nC,greaterEqualImpl:()=>iC,greaterImpl:()=>rC,lessEqualImpl:()=>dC,lessImpl:()=>lC,linSpaceImpl:()=>mC,logImpl:()=>gC,maxImpl:()=>xC,maximumImpl:()=>wC,minimumImpl:()=>IC,multiplyImpl:()=>TC,negImpl:()=>EC,notEqualImpl:()=>FC,prodImpl:()=>zC,rangeImpl:()=>BC,rsqrtImpl:()=>WC,simpleAbsImpl:()=>gT,sliceImpl:()=>GC,sparseFillEmptyRowsImpl:()=>qC,sparseReshapeImpl:()=>KC,sparseSegmentReductionImpl:()=>XC,squaredDifferenceImpl:()=>YC,stridedSliceImpl:()=>QC,stringNGramsImpl:()=>e$,stringSplitImpl:()=>n$,stringToHashBucketFastImpl:()=>r$,subImpl:()=>a$,tileImpl:()=>u$,topKImpl:()=>h$,transposeImpl:()=>MC,uniqueImpl:()=>d$});var yT={kernelName:Ke,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend;dT(t,"abs");let r=new Float32Array(ca.sizeFromShape(t.shape));return r=gT(n.data.get(t.dataId).values),n.makeOutput(r,t.shape,"float32")}};function bT(e){return(t,n,r,a,s)=>{const i=Ap.assertAndGetBroadcastShape(t,n),o=i.length,u=ca.computeStrides(i),l=ca.sizeFromShape(i),c=ca.getTypedArrayFromDType(s,l),h=t.length,d=n.length,p=ca.computeStrides(t),f=ca.computeStrides(n),m=Ap.getBroadcastDims(t,i),g=Ap.getBroadcastDims(n,i);if(m.length+g.length===0)for(let t=0;t<c.length;++t)c[t]=e(r[t%r.length],a[t%a.length]);else for(let t=0;t<c.length;++t){const n=ca.indexToLoc(t,o,u),s=n.slice(-h);m.forEach((e=>s[e]=0));const i=ca.locToIndex(s,h,p),l=n.slice(-d);g.forEach((e=>l[e]=0));const y=ca.locToIndex(l,d,f);c[t]=e(r[i],a[y])}return[c,i]}}function xT(e){const{inputs:t,backend:n}=e,{real:r,imag:a}=t,s=n.data.get(r.dataId).values,i=n.data.get(a.dataId).values,o=n.makeTensorInfo(r.shape,"complex64");return n.data.get(o.dataId).complexTensorInfos={real:n.makeTensorInfo(r.shape,"float32",s),imag:n.makeTensorInfo(a.shape,"float32",i)},o}var wT={kernelName:xt,backendName:"cpu",kernelFunc:xT};function vT(e,t,n="float32"){if("complex64"===n)return xT({inputs:{real:vT(e,t,"float32"),imag:vT(e,t,"float32")},backend:e});const r=ca.makeZerosTypedArray(ca.sizeFromShape(t),n);return e.makeTensorInfo(t,n,r)}function kT(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}var IT={kernelName:on,backendName:"cpu",kernelFunc:kT};function ST(e){const{inputs:t,backend:n}=e,{input:r}=t,a=n.data.get(r.dataId).complexTensorInfos.real,s=n.data.get(a.dataId).values;return n.makeTensorInfo(a.shape,a.dtype,s)}var NT={kernelName:Qn,backendName:"cpu",kernelFunc:ST};function TT(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dtype:s}=r;if("complex64"===s){if("complex64"===a.dtype)return kT({inputs:{x:a},backend:n});const e=vT(n,a.shape,a.dtype),t=TT({inputs:{x:a},backend:n,attrs:{dtype:"float32"}}),r=xT({inputs:{real:t,imag:e},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),r}if("complex64"===a.dtype){const e=ST({inputs:{input:a},backend:n}),t=TT({inputs:{x:e},backend:n,attrs:{dtype:s}});return n.disposeIntermediateTensorInfo(e),t}if(!ca.hasEncodingLoss(a.dtype,s)){const e=kT({inputs:{x:a},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:s}}if("int32"===s){const e=n.data.get(a.dataId).values,t=Int32Array.from(e);return n.makeTensorInfo(a.shape,"int32",t)}if("bool"===s){const e=n.data.get(a.dataId).values,t=ca.toTypedArray([0],a.dtype),[r,s]=bT(((e,t)=>e!==t?1:0))(a.shape,[],e,t,"bool");return n.makeTensorInfo(s,"bool",r)}throw new Error(`Error in Cast: failed to cast ${a.dtype} to ${s}`)}var CT={kernelName:gt,backendName:"cpu",kernelFunc:TT};function $T(e,t,n,r){return null==n?({inputs:n,backend:a})=>{const{a:s,b:i}=n,o=a;dT([s,i],e);const u=o.data.get(s.dataId).values,l=o.data.get(i.dataId).values,c="string"===s.dtype?Ap.fromUint8ToStringArray(u):u,h="string"===s.dtype?Ap.fromUint8ToStringArray(l):l,d=r||s.dtype,[p,f]=t(s.shape,i.shape,c,h,d);return o.makeTensorInfo(f,d,p)}:({inputs:e,backend:a})=>{const{a:s,b:i}=e,o=a;if("complex64"===s.dtype||"complex64"===i.dtype){const e=TT({inputs:{x:s},backend:o,attrs:{dtype:"complex64"}}),t=o.data.get(e.dataId),r=t.complexTensorInfos.real,a=t.complexTensorInfos.imag,u=o.data.get(r.dataId).values,l=o.data.get(a.dataId).values,c=TT({inputs:{x:i},backend:o,attrs:{dtype:"complex64"}}),h=o.data.get(c.dataId),d=h.complexTensorInfos.real,p=h.complexTensorInfos.imag,f=o.data.get(d.dataId).values,m=o.data.get(p.dataId).values,[g,y,b]=n(s.shape,i.shape,u,l,f,m),x=o.makeTensorInfo(b,"float32",g),w=o.makeTensorInfo(b,"float32",y),v=xT({inputs:{real:x,imag:w},backend:o});return o.disposeIntermediateTensorInfo(e),o.disposeIntermediateTensorInfo(c),o.disposeIntermediateTensorInfo(x),o.disposeIntermediateTensorInfo(w),v}{const e=o.data.get(s.dataId).values,n=o.data.get(i.dataId).values,a=r||s.dtype,[u,l]=t(s.shape,i.shape,e,n,a);return o.makeTensorInfo(l,a,u)}}}function _T(e){return(t,n,r,a,s,i)=>{const o=Ap.assertAndGetBroadcastShape(t,n),u=ca.sizeFromShape(o),l=o.length,c=ca.computeStrides(o),h=ca.getTypedArrayFromDType("float32",u),d=ca.getTypedArrayFromDType("float32",u),p=Ap.getBroadcastDims(t,o),f=Ap.getBroadcastDims(n,o),m=Ap.mergeRealAndImagArrays(r,a),g=Ap.mergeRealAndImagArrays(s,i),y=t.length,b=ca.computeStrides(t),x=n.length,w=ca.computeStrides(n);if(p.length+f.length===0)for(let t=0;t<h.length;t++){const n=t%m.length,r=t%g.length,a=e(m[2*n],m[2*n+1],g[2*r],g[2*r+1]);h[t]=a.real,d[t]=a.imag}else for(let t=0;t<h.length;t++){const n=ca.indexToLoc(t,l,c),r=n.slice(-y);p.forEach((e=>r[e]=0));const a=ca.locToIndex(r,y,b),s=n.slice(-x);f.forEach((e=>s[e]=0));const i=ca.locToIndex(s,x,w),o=e(m[2*a],m[2*a+1],g[2*i],g[2*i+1]);h[t]=o.real,d[t]=o.imag}return[h,d,o]}}var ET=bT(((e,t)=>e+t)),AT=_T(((e,t,n,r)=>({real:e+n,imag:t+r}))),FT=$T(Ze,ET,AT),RT={kernelName:Ze,backendName:"cpu",kernelFunc:FT};function DT(e,t,n,r,a){const s=ca.sizeFromShape(r),i=ca.makeZerosTypedArray(a,n);for(let n=0;n<e.length;n++){const r=e[n];if(r<0)throw new Error("Input x must be non-negative!");r>=a||(i[r]+=s>0?t[n]:1)}return i}function MT(e,t,n,r=!1){const a=e.shape[0],s=e.shape[1],i=xi([a,n],t.dtype);for(let o=0;o<a;o++)for(let a=0;a<s;a++){const s=e.get(o,a);if(s<0)throw new Error("Input x must be non-negative!");s>=n||(r?i.set(1,o,s):t.size>0?i.set(i.get(o,s)+t.get(o,a),o,s):i.set(i.get(o,s)+1,o,s))}return i}function OT(e){return(t,n,r)=>{const a=ca.getTypedArrayFromDType(n,t.length);for(let n=0;n<t.length;++n)a[n]=e(t[n],r);return a}}function LT(e,t,n){return({inputs:r,attrs:a,backend:s})=>{const{x:i}=r;if(dT(i,e),"string"===i.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const o=s,u=o.data.get(i.dataId).values,l=ca.sizeFromShape(i.shape),c=n||i.dtype,h=ca.getArrayFromDType(c,l);for(let e=0;e<l;++e)h[e]=t(u[e],a);return o.makeTensorInfo(i.shape,c,h)}}function zT(e,t,n){return({inputs:r,attrs:a,backend:s})=>{const{x:i}=r;if(dT(i,e),"string"===i.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const o=s,u=o.data.get(i.dataId).values,l=n||i.dtype,c=t(u,l,a);return o.makeTensorInfo(i.shape,l,c)}}var PT=OT((e=>Math.ceil(e))),BT=zT(yt,PT),WT={kernelName:yt,backendName:"cpu",kernelFunc:BT};function VT(e,t,n,r){const a=ca.getArrayFromDType(n,ca.sizeFromShape(t));if(r&&"string"!==n){let t=0;e.forEach((e=>{const n=ca.sizeFromShape(e.shape);a.set(e.vals,t),t+=n}))}else{let r=0;e.forEach((e=>{const s="string"===n?Ap.fromUint8ToStringArray(e.vals):e.vals;let i=0;for(let n=0;n<e.shape[0];++n){const o=n*t[1]+r;for(let t=0;t<e.shape[1];++t)a[o+t]=s[i++]}r+=e.shape[1]}))}return a}var UT=bT(((e,t)=>e===t?1:0)),GT=$T(jt,UT,null,"bool"),HT={kernelName:jt,backendName:"cpu",kernelFunc:GT},jT=OT((e=>Math.exp(e))),qT=zT(qt,jT),KT={kernelName:qt,backendName:"cpu",kernelFunc:qT},XT=OT((e=>Math.expm1(e))),YT=zT(Xt,XT),ZT={kernelName:Xt,backendName:"cpu",kernelFunc:YT},JT=OT((e=>Math.floor(e))),QT=zT(Qt,JT),eC={kernelName:Qt,backendName:"cpu",kernelFunc:QT};function tC(e,t,n,r,a,s,i,o,u){const l=xi([r,s],n);for(let n=0;n<r;n++){const r=[];let c=0;for(let t=0;t<a;t++){const s=e[n*a+t];c+=s*i[t],r.push(s)}if(c<0||c>=u/s)throw new Error(`Invalid indices: ${r} does not index into ${o}`);for(let e=0;e<s;e++)l.values[n*s+e]=t.get(...t.indexToLoc(c*s+e))}return l}function nC(e,t,n){const r=xi(n,e.dtype);for(let n=0;n<r.size;++n){const a=r.indexToLoc(n).slice(),s=a[0],i=a[2],o=t.locToIndex([s,i]);a[2]=t.values[o];const u=e.locToIndex(a);r.values[n]=e.values[u]}return r}var rC=bT(((e,t)=>e>t?1:0)),aC=$T(an,rC,null,"bool"),sC={kernelName:an,backendName:"cpu",kernelFunc:aC},iC=bT(((e,t)=>e>=t?1:0)),oC=$T(sn,iC,null,"bool"),uC={kernelName:sn,backendName:"cpu",kernelFunc:oC},lC=bT(((e,t)=>e<t?1:0)),cC=$T(fn,lC,null,"bool"),hC={kernelName:fn,backendName:"cpu",kernelFunc:cC},dC=bT(((e,t)=>e<=t?1:0)),pC=$T(mn,dC,null,"bool"),fC={kernelName:mn,backendName:"cpu",kernelFunc:pC};function mC(e,t,n){const r=(t-e)/(n-1),a=ca.makeZerosTypedArray(n,"float32");a[0]=e;for(let e=1;e<a.length;e++)a[e]=a[e-1]+r;return a}var gC=OT((e=>Math.log(e))),yC=zT(yn,gC),bC={kernelName:yn,backendName:"cpu",kernelFunc:yC};function xC(e,t,n,r){const a=ca.getTypedArrayFromDType(r,ca.sizeFromShape(n));for(let n=0;n<a.length;++n){const r=n*t;let s=e[r];for(let n=0;n<t;++n){const t=e[r+n];(Number.isNaN(t)||t>s)&&(s=t)}a[n]=s}return a}var wC=bT(((e,t)=>Math.max(e,t))),vC=$T(Tn,wC),kC={kernelName:Tn,backendName:"cpu",kernelFunc:vC},IC=bT(((e,t)=>Math.min(e,t))),SC=$T(Dn,IC),NC={kernelName:Dn,backendName:"cpu",kernelFunc:SC},TC=bT(((e,t)=>e*t)),CC=_T(((e,t,n,r)=>({real:e*n-t*r,imag:e*r+t*n}))),$C=$T(zn,TC,CC),_C={kernelName:zn,backendName:"cpu",kernelFunc:$C};function EC(e,t,n){const r=ca.createScalarValue(-1,n);return TC([],t,r,e,n)}var AC={kernelName:Pn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;dT(r,"neg");const a=n.data.get(r.dataId).values,[s,i]=EC(a,r.shape,r.dtype);return n.makeTensorInfo(i,r.dtype,s)}},FC=bT(((e,t)=>e!==t?1:0)),RC=$T(Bn,FC,null,"bool"),DC={kernelName:Bn,backendName:"cpu",kernelFunc:RC};function MC(e,t,n,r,a){const s=t.length,i=ca.sizeFromShape(t),o=ca.computeStrides(t),u=ca.computeStrides(a),l=ca.getTypedArrayFromDType(n,ca.sizeFromShape(a));for(let t=0;t<i;++t){const n=ca.indexToLoc(t,s,o),a=new Array(n.length);for(let e=0;e<a.length;e++)a[e]=n[r[e]];l[ca.locToIndex(a,s,u)]=e[t]}return l}function OC(e){const{inputs:t,attrs:n,backend:r}=e,{x:a}=t,{perm:s}=n;dT(a,"transpose");const i=a.shape.length,o=new Array(i);for(let e=0;e<o.length;e++)o[e]=a.shape[s[e]];const u=MC(r.data.get(a.dataId).values,a.shape,a.dtype,s,o);return{dataId:r.write(u,o,a.dtype),shape:o,dtype:a.dtype}}var LC={kernelName:Vr,backendName:"cpu",kernelFunc:OC};function zC(e,t,n,r){const[a,s]=Ap.computeOutAndReduceShapes(e,r),i=ts(t,"int32"),o=ca.makeZerosTypedArray(ca.sizeFromShape(a),i),u=ca.sizeFromShape(s);for(let e=0;e<o.length;++e){const t=e*u;let r=1;for(let e=0;e<u;++e)r*=n[t+e];o[e]=r}return{outVals:o,outShape:a,outDtype:i}}var PC={kernelName:Zn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;dT(a,"prod");const o=a.shape.length,u=ca.parseAxisParam(s,a.shape),l=Ap.getAxesPermutation(u,o);let c=u,h=a;const d=[];null!=l&&(h=OC({inputs:{x:a},backend:n,attrs:{perm:l}}),d.push(h),c=Ap.getInnerMostAxes(c.length,o));const p=n.data.get(h.dataId).values,{outVals:f,outShape:m,outDtype:g}=zC(h.shape,h.dtype,p,c);let y=m;return i&&(y=Ap.expandShapeToKeepDim(m,u)),d.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(y,g,f)}};function BC(e,t,n,r){if(e===t||e<t&&n<0||t<e&&n>1)return ca.makeZerosTypedArray(0,r);const a=Math.abs(Math.ceil((t-e)/n)),s=ca.makeZerosTypedArray(a,r);t<e&&1===n&&(n=-1),s[0]=e;for(let e=1;e<s.length;e++)s[e]=s[e-1]+n;return s}var WC=OT((e=>1/Math.sqrt(e))),VC=zT(cr,WC),UC={kernelName:cr,backendName:"cpu",kernelFunc:VC};function GC(e,t,n,r,a){const s=ro.isSliceContinous(r,t,n),i=ca.sizeFromShape(n),o=ca.computeStrides(r);if(s){const n=ro.computeFlatOffset(t,o);return"string"===a?e.slice(n,n+i):e.subarray(n,n+i)}const u=xi(r,a,"string"===a?Ap.fromUint8ToStringArray(e):e),l=xi(n,a);for(let e=0;e<l.size;++e){const n=l.indexToLoc(e),r=n.map(((e,n)=>e+t[n]));l.set(u.get(...r),...n)}return"string"===a?Ap.fromStringArrayToUint8(l.values):l.values}function HC(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:s,size:i}=r;dT(a,"slice");const[o,u]=ro.parseSliceParams(a,s,i);ro.assertParamsValid(a,o,u);const l=GC(n.data.get(a.dataId).values,o,u,a.shape,a.dtype);return n.makeTensorInfo(u,a.dtype,l)}var jC={kernelName:fr,backendName:"cpu",kernelFunc:HC};function qC(e,t,n,r,a,s,i){const o=t[0],u=s[0],l=new Array(u),c=new Array(o),h=t[1];if(0===u){if(0!==o)throw new Error(`Received SparseTensor with denseShape[0] = 0 but\n         indices.shape[0] = ${o}`);return[ca.getArrayFromDType(n,0),[0,h],ca.getArrayFromDType(a,0),l,c]}let d=!0,p=0;const f=new Array(u).fill(0);for(let t=0;t<o;++t){const n=e[t*h];if(n<0)throw new Error(`indices(${t}, 0) is invalid: ${n} < 0`);if(n>=u)throw new Error(`indices(${t}, 0) is invalid: ${n} >= ${u}`);++f[n],d=d&&n>=p,p=n}let m=!0;for(let e=0;e<u;++e){const t=0===f[e];l[e]=t,m=m&&!t,f[e]=Math.max(f[e],1),e>0&&(f[e]+=f[e-1])}if(m&&d){const t=e,n=r;for(let e=0;e<o;++e)c[e]=e;return[t,[o,h],n,l,c]}{const t=f[u-1],s=ca.getArrayFromDType(n,t*h),d=ca.getArrayFromDType(a,t),p=new Array(u).fill(0);for(let t=0;t<o;++t){const n=e[t*h],a=p[n],i=(0===n?0:f[n-1])+a;p[n]++;for(let n=0;n<h;++n)s[i*h+n]=e[t*h+n];d[i]=r[t],c[t]=i}for(let e=0;e<u;++e)if(0===p[e]){const t=0===e?0:f[e-1];s[t*h+0]=e;for(let e=1;e<h;++e)s[t*h+e]=0;d[t]=i}return[s,[t,h],d,l,c]}}function KC(e,t,n,r,a){const s=ca.sizeFromShape(r),i=t[0],o=a.length,u=[];let l=1,c=-1;for(let e=0;e<o;++e){const t=a[e];if(-1===t){if(-1!==c)throw new Error(`only one output dimension may be -1, not both ${c} and ${e}`);c=e,u.push(1)}else{if(t<0)throw new Error(`size ${e} must be non-negative, not ${t}`);l*=t,u.push(t)}}if(-1!==c){if(l<=0)throw new Error("reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero");const e=Math.trunc(s/l);if(l*e!==s)throw new Error(`Input to reshape is a SparseTensor with ${s}\n          dense values, but the requested shape requires a multiple of ${l}. inputShape=${r} outputShape= ${u}`);u[c]=e}const h=ca.sizeFromShape(u);if(h!==s)throw new Error(`Input to reshape is a tensor with ${s} dense values, but the requested shape has ${h}. inputShape=${r} outputShape=${u}`);const d=r.length,p=[];if(d>0){p[d-1]=1;for(let e=d-2;e>=0;--e)p[e]=p[e+1]*r[e+1]}const f=[];if(o>0){f[o-1]=1;for(let e=o-2;e>=0;--e)f[e]=f[e+1]*u[e+1]}const m=ca.getArrayFromDType(n,i*o);for(let t=0;t<i;++t){let n=0;for(let r=0;r<d;++r)n+=e[t*d+r]*p[r];for(let e=0;e<o;++e)m[t*o+e]=Math.trunc(n/f[e]),n%=f[e]}return[m,[i,o],u]}function XC(e,t,n,r,a,s=!1,i=0){const o=r.length;if(o!==a.length)throw new Error("segmentIds and indices should have same size.");const u=[t[0],e.length/t[0]],l=u[1],c=o>0?a[o-1]+1:0;if(c<0)throw new Error("segment ids must be >= 0");const h=t.slice();h[0]=c;const d=h.reduce(((e,t)=>e*t),1),p=ca.getArrayFromDType(n,d);if(0===o)return c>0&&p.fill(i),[p,h];if(c<=0)throw new Error("segment ids must be >= 0");let f=0,m=1,g=0,y=a[f];for(;;){let t=0;if(m<o){if(t=a[m],y===t){++m;continue}if(y>=t)throw new Error("segment ids are not increasing")}if(y<0||y>=c)throw new Error(`Segment id ${y} out of range [0, ${c}), possibly because segmentIds input is not sorted.`);y>g&&p.fill(i,g*l,y*l);for(let t=f;t<m;++t){const n=r[t];if(n<0||n>=u[0])throw new Error(`Bad: indices[${t}] == ${r[t]} out of range [0, ${u[0]})`);for(let t=0;t<l;t++)p[y*l+t]+=e[n*l+t]}if(s)for(let e=0;e<l;e++)p[y*l+e]/=m-f;if(f=m,++m,g=y+1,y=t,m>o)break}return g<c&&p.fill(i,g*l,c*l),[p,h]}var YC=bT(((e,t)=>{const n=e-t;return n*n})),ZC=$T(Er,YC),JC={kernelName:Er,backendName:"cpu",kernelFunc:ZC};function QC(e,t,n,r){const a=xi(e,t.dtype);for(let e=0;e<a.size;e++){const s=a.indexToLoc(e),i=new Array(s.length);for(let e=0;e<i.length;e++)i[e]=s[e]*n[e]+r[e];a.set(t.get(...i),...s)}return a}function e$(e,t,n,r,a,s,i,o){return new class{constructor(e,t,n,r,a,s){this.separator=ca.encodeString(e),this.nGramWidths=t,this.leftPad=ca.encodeString(n),this.rightPad=ca.encodeString(r),this.padWidth=a,this.preserveShort=s}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){const n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,r,a,s){for(let i=0;i<a;++i){const o=this.getPadWidth(s),u=Math.max(0,o-i),l=Math.max(0,o-(a-(i+1))),c=s-(u+l),h=t+(u>0?0:i-o);let d=0;d+=u*this.leftPad.length;for(let t=0;t<c;++t)d+=e[h+t].length;d+=l*this.rightPad.length,d+=(u+l+c-1)*this.separator.length,n[r+i]=new Uint8Array(d);const p=n[r+i];let f=0;const m=e=>e.forEach((e=>p[f++]=e));for(let e=0;e<u;++e)m(this.leftPad),m(this.separator);for(let t=0;t<c-1;++t)m(e[h+t]),m(this.separator);if(c>0){m(e[h+c-1]);for(let e=0;e<l;++e)m(this.separator),m(this.rightPad)}else{for(let e=0;e<l-1;++e)m(this.rightPad),m(this.separator);m(this.rightPad)}}}compute(e,t){const n=e.length,r=t.length;if(r>0){let e=t[0];if(0!==e)throw new Error(`First split value must be 0, got ${e}`);for(let a=1;a<r;++a){let r=t[a]>=e;if(r=r&&t[a]<=n,!r)throw new Error(`Invalid split value ${t[a]}, must be in [${e}, ${n}]`);e=t[a]}if(e!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${e}`)}const a=r-1,s=ca.getArrayFromDType("int32",r);if(0===n||0===r){const e=new Array(n);for(let e=0;e<=a;++e)s[e]=0;return[e,s]}s[0]=0;for(let e=1;e<=a;++e){const n=t[e]-t[e-1];let r=0;this.nGramWidths.forEach((e=>{r+=this.getNumNGrams(n,e)})),this.preserveShort&&n>0&&0===r&&(r=1),s[e]=s[e-1]+r}const i=new Array(s[a]);for(let n=0;n<a;++n){const r=t[n];let a=s[n];if(this.nGramWidths.forEach((s=>{const o=t[n+1]-t[n],u=this.getNumNGrams(o,s);this.createNGrams(e,r,i,a,u,s),a+=u})),this.preserveShort&&a===s[n]){const s=t[n+1]-t[n];if(0===s)continue;const o=s+2*this.padWidth,u=1;this.createNGrams(e,r,i,a,u,o)}}return[i,s]}}(n,r,a,s,i,o).compute(e,t)}function t$(e,t,n){if(!e.length)return[];if(0===t.length){const t=new Array(e.length);for(let n=0;n<e.length;++n)t[n]=e.subarray(n,n+1);return t}if(1===t.length){const r=t[0],a=[];let s=e.indexOf(r);for(;-1!==s;){const t=e.subarray(0,s);n&&0===t.length||a.push(t),s=(e=e.subarray(s+1)).indexOf(r)}return n&&0===e.length||a.push(e),a}const r=[];let a=0;for(let s=0;s<e.length+1;s++)if(s===e.length||-1!==t.indexOf(e[s])){const t=e.subarray(a,s);n&&0===t.length||r.push(t),a=s+1}return r}function n$(e,t,n){const r=e.length,a=[];let s=0,i=0;const o=new Array(r);for(let u=0;u<r;++u){const r=t$(e[u],t,n),l=r.length;o[u]=l,s+=l,i=Math.max(i,l),a.push(...r)}const u=ca.getArrayFromDType("int32",2*s),l=new Array(s),c=[r,i];let h=0;for(let e=0;e<r;++e)for(let t=0;t<o[e];++t)u[2*h]=e,u[2*h+1]=t,l[h]=a[h],++h;return[u,l,c]}function r$(e,t){const n=ca.getArrayFromDType("int32",e.length);for(let r=0;r<e.length;++r)n[r]=ca.fingerPrint64(e[r]).modulo(t).getLowBitsUnsigned();return n}var a$=bT(((e,t)=>e-t)),s$=_T(((e,t,n,r)=>({real:e-n,imag:t-r}))),i$=$T(Or,a$,s$),o$={kernelName:Or,backendName:"cpu",kernelFunc:i$};function u$(e,t){const n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=e.shape[r]*t[r];const r=xi(n,e.dtype);for(let t=0;t<r.values.length;++t){const n=r.indexToLoc(t),a=new Array(e.rank);for(let t=0;t<a.length;t++)a[t]=n[t]%e.shape[t];const s=e.locToIndex(a);r.values[t]=e.values[s]}return r}var l$=(e,t)=>{const n=t.value-e.value;return 0===n?e.index-t.index:n};function c$(e,t,n=0,r=e.length-1){for(;r>n;){if(r-n>600){const a=r-n+1,s=t-n+1,i=Math.log(a),o=.5*Math.exp(2*i/3),u=.5*Math.sqrt(i*o*(a-o)/a)*Math.sign(s-a/2);c$(e,t,Math.max(n,Math.floor(t-s*o/a+u)),Math.min(r,Math.floor(t+(a-s)*o/a+u)))}const a=e[t];let s=n,i=r;for(ca.swap(e,n,t),l$(e[r],a)>0&&ca.swap(e,n,r);s<i;){for(ca.swap(e,s,i),s++,i--;l$(e[s],a)<0;)s+=1;for(;l$(e[i],a)>0;)i-=1}0===l$(e[n],a)?ca.swap(e,n,i):(i+=1,ca.swap(e,i,r)),i<=t&&(n=i+1),t<=i&&(r=i-1)}}function h$(e,t,n,r,a){const s=t[t.length-1],[i,o]=[e.length/s,s],u=ca.getTypedArrayFromDType(n,i*r),l=ca.getTypedArrayFromDType("int32",i*r);for(let t=0;t<i;t++){const n=t*o,s=e.subarray(n,n+o);let i=new Array(s.length);s.forEach(((e,t)=>i[t]={value:e,index:t})),r<i.length&&(c$(i,r),i=i.slice(0,r)),a&&i.sort(l$);const c=t*r,h=u.subarray(c,c+r),d=l.subarray(c,c+r);for(let e=0;e<r;e++)h[e]=i[e].value,d[e]=i[e].index}const c=t.slice();return c[c.length-1]=r,[xi(c,n,u),xi(c,"int32",l)]}function d$(e,t,n,r){const a=ca.parseAxisParam(t,n)[0],s=[1,n[0],1];for(let e=0;e<a;e++)s[0]*=n[e];s[1]=n[a];for(let e=a+1;e<n.length;e++)s[2]*=n[e];const i={},o=new Int32Array(n[a]),u=new La(s,r,e),l=[],c=1===s[0]&&1===s[2];for(let t=0;t<n[a];t++){let n;if(c)n=e[t].toString();else{const e=[];for(let n=0;n<s[0];n++)for(let r=0;r<s[2];r++)e.push(u.get(n,t,r));n=e.join(",")}if(void 0!==i[n])o[t]=i[n];else{const e=Object.keys(i).length;i[n]=e,o[t]=e,l.push(t)}}const h=s.slice();h[1]=Object.keys(i).length;const d=new La(h,r);l.forEach(((e,t)=>{for(let n=0;n<s[0];n++)for(let r=0;r<s[2];r++)d.set(u.get(n,e,r),n,t,r)}));const p=n.slice();return p[a]=h[1],{outputValues:d.values,outputShape:p,indices:o}}nu("cpu",(()=>new fT),1);var p$=LT(Ut,(e=>e>=0?e:Math.exp(e)-1)),f$={kernelName:Ut,backendName:"cpu",kernelFunc:p$};function m$(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{alpha:s}=r;dT([a],"leakyRelu");const i=ca.sizeFromShape(a.shape),o=n.data.get(a.dataId).values,u=ca.getTypedArrayFromDType("float32",i);for(let e=0;e<o.length;e++)u[e]=o[e]<0?s*o[e]:o[e];return n.makeTensorInfo(a.shape,"float32",u)}var g$={kernelName:pn,backendName:"cpu",kernelFunc:m$},y$=bT(((e,t)=>e<0?t*e:e));function b$(e){const{inputs:t,backend:n}=e,{x:r,alpha:a}=t;dT([r,a],"prelu");const s=n.data.get(r.dataId).values,i=n.data.get(a.dataId).values,[o,u]=y$(r.shape,a.shape,s,i,r.dtype);return n.makeTensorInfo(u,r.dtype,o)}var x$={kernelName:Yn,backendName:"cpu",kernelFunc:b$},w$=LT(tr,(e=>Math.max(0,e))),v$={kernelName:tr,backendName:"cpu",kernelFunc:w$},k$=LT(or,(e=>Math.min(Math.max(0,e),6))),I$={kernelName:or,backendName:"cpu",kernelFunc:k$},S$=LT(br,(e=>1/(1+Math.exp(-e)))),N$={kernelName:br,backendName:"cpu",kernelFunc:S$};function T$(e,t,n,r,a){if("linear"===n)return kT({inputs:{x:t},backend:e});if("relu"===n)return w$({inputs:{x:t},backend:e});if("elu"===n)return p$({inputs:{x:t},backend:e});if("relu6"===n)return k$({inputs:{x:t},backend:e});if("prelu"===n)return b$({inputs:{x:t,alpha:r},backend:e});if("leakyrelu"===n)return m$({inputs:{x:t},backend:e,attrs:{alpha:a}});if("sigmoid"===n)return S$({inputs:{x:t},backend:e});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}function C$(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{shape:s}=r,i=ca.sizeFromShape(a.shape),o=ca.inferFromImplicitShape(s,i),u=ca.sizeFromShape(o);ca.assert(i===u,(()=>`The new shape (${o}) has ${u} elements and the old shape (${a.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`)),n.incRef(a.dataId);const l=n.data.get(a.dataId);if(null!=l.complexTensorInfos){const e=l.complexTensorInfos.real,t=l.complexTensorInfos.imag;e.shape=o,t.shape=o}return{dataId:a.dataId,shape:o,dtype:a.dtype}}var $$={kernelName:nr,backendName:"cpu",kernelFunc:C$};function _$(e){const{inputs:t,backend:n,attrs:r}=e,{a,b:s}=t,{transposeA:i,transposeB:o}=r;dT([a,s],"matMul");const u=a.shape.length,l=s.shape.length,c=i?a.shape[u-2]:a.shape[u-1],h=o?s.shape[l-1]:s.shape[l-2],d=i?a.shape[u-1]:a.shape[u-2],p=o?s.shape[l-2]:s.shape[l-1],f=a.shape.slice(0,-2),m=s.shape.slice(0,-2),g=ca.sizeFromShape(f),y=ca.sizeFromShape(m),b=g===y||1===g||1===y;ca.assert(u>=2&&l>=2&&b,(()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${f}) and (${m}).`));const x=(g>y?a.shape.slice(0,-2):s.shape.slice(0,-2)).concat([d,p]);ca.assert(c===h,(()=>`Error in matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${a.shape} and ${s.shape} and transposeA=${i} and transposeB=${o} must match.`));const w=o?[y,p,h]:[y,h,p],v=C$({inputs:{x:a},backend:n,attrs:{shape:i?[g,c,d]:[g,d,c]}}),k=C$({inputs:{x:s},backend:n,attrs:{shape:w}}),I=i?v.shape[1]:v.shape[2],S=i?v.shape[2]:v.shape[1],N=o?k.shape[1]:k.shape[2],T=Math.max(g,y),C=n.data.get(v.dataId).values,$=n.data.get(k.dataId).values,_=ca.computeStrides(v.shape),E=ca.computeStrides(k.shape),[A,F,R]=i?[_[0],1,_[1]]:[_[0],_[1],1],[D,M,O]=o?[1,E[1],E[0]]:[E[1],1,E[0]],L=S*N,z=xi([T,S,N],v.dtype),P=z.values,B=n.blockSize;for(let e=0;e<T;e++)for(let t=0;t<S;t+=B)for(let n=0;n<N;n+=B)for(let r=0;r<I;r+=B){const a=Math.min(t+B,S),s=Math.min(n+B,N),i=Math.min(r+B,I);for(let o=t;o<a;o++)for(let t=n;t<s;t++){let n=0;for(let a=r;a<i;a++){const r=Math.min(e,g-1)*A,s=Math.min(e,y-1)*O;n+=C[r+o*F+a*R]*$[a*D+t*M+s]}P[e*L+(o*N+t)]+=n}}return n.disposeIntermediateTensorInfo(v),n.disposeIntermediateTensorInfo(k),n.makeTensorInfo(x,z.dtype,z.values)}var E$={kernelName:dt,backendName:"cpu",kernelFunc:_$},A$={kernelName:Yr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a,b:s,bias:i,preluActivationWeights:o}=t,{transposeA:u,transposeB:l,activation:c,leakyreluAlpha:h}=r;let d,p,f;const m=[];d=_$({inputs:{a,b:s},attrs:{transposeA:u,transposeB:l},backend:n}),i&&(p=FT({inputs:{a:d,b:i},backend:n}),m.push(d),d=p),c&&(f=T$(n,d,c,o,h),m.push(d),d=f);for(const e of m)n.disposeIntermediateTensorInfo(e);return d}},F$=LT(Xe,(e=>Math.acos(e))),R$={kernelName:Xe,backendName:"cpu",kernelFunc:F$},D$=LT(Ye,(e=>Math.acosh(e))),M$={kernelName:Ye,backendName:"cpu",kernelFunc:D$},O$={kernelName:Je,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,r=t;dT(t,"addN");const a=r.map((e=>n.data.get(e.dataId).values)),s=xi(r[0].shape,r[0].dtype),i=s.values;for(let e=0;e<r.length;e++){const t=a[e];for(let e=0;e<i.length;e++)i[e]+=t[e]}return n.makeTensorInfo(s.shape,s.dtype,s.values)}},L$={kernelName:Qe,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;dT(a,"all");const o=ca.parseAxisParam(s,a.shape);let u=o;const l=Ap.getAxesPermutation(u,a.shape.length);let c=a;null!=l&&(c=OC({inputs:{x:a},backend:n,attrs:{perm:l}}),u=Ap.getInnerMostAxes(u.length,a.shape.length)),Ap.assertAxesAreInnerMostDims("all",u,c.shape.length);const[h,d]=Ap.computeOutAndReduceShapes(c.shape,u),p=ca.sizeFromShape(d),f=ca.makeZerosTypedArray(ca.sizeFromShape(h),c.dtype),m=n.data.get(c.dataId).values;for(let e=0;e<f.length;++e){const t=e*p;let n=m[t];for(let e=0;e<p;++e){const r=m[t+e];n=n&&r}f[e]=n}null!=l&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(h,c.dtype,f);if(i){const e=C$({inputs:{x:g},backend:n,attrs:{shape:Ap.expandShapeToKeepDim(h,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}},z$={kernelName:et,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;dT(a,"any");const o=ca.parseAxisParam(s,a.shape);let u=o;const l=Ap.getAxesPermutation(u,a.shape.length);let c=a;null!=l&&(c=OC({inputs:{x:a},backend:n,attrs:{perm:l}}),u=Ap.getInnerMostAxes(u.length,a.shape.length)),Ap.assertAxesAreInnerMostDims("any",u,c.shape.length);const[h,d]=Ap.computeOutAndReduceShapes(c.shape,u),p=ca.sizeFromShape(d),f=ca.makeZerosTypedArray(ca.sizeFromShape(h),c.dtype),m=n.data.get(c.dataId).values;for(let e=0;e<f.length;++e){const t=e*p;let n=m[t];for(let e=0;e<p;++e){const r=m[t+e];n=n||r}f[e]=n}null!=l&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(h,c.dtype,f);if(i){const e=C$({inputs:{x:g},backend:n,attrs:{shape:Ap.expandShapeToKeepDim(h,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}},P$={kernelName:tt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r;dT(a,"argMax");let i=ca.parseAxisParam(s,a.shape);const o=Ap.getAxesPermutation(i,a.shape.length);let u=a;const l=[];null!=o&&(u=OC({inputs:{x:a},backend:n,attrs:{perm:o}}),l.push(u),i=Ap.getInnerMostAxes(i.length,u.shape.length)),i=[i[0]],Ap.assertAxesAreInnerMostDims("argMax",i,u.shape.length);const[c,h]=Ap.computeOutAndReduceShapes(u.shape,i),d=ca.sizeFromShape(c),p=ca.makeZerosTypedArray(d,"int32"),f=ca.sizeFromShape(h),m=n.data.get(u.dataId).values;for(let e=0;e<p.length;++e){const t=e*f;let n=m[t],r=0;for(let e=0;e<f;++e){const a=m[t+e];a>n&&(n=a,r=e)}p[e]=r}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(c,"int32",p)}},B$={kernelName:nt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r;dT(a,"argMin");let i=ca.parseAxisParam(s,a.shape);const o=Ap.getAxesPermutation(i,a.shape.length);let u=a;const l=[];null!=o&&(u=OC({inputs:{x:a},backend:n,attrs:{perm:o}}),l.push(u),i=Ap.getInnerMostAxes(i.length,u.shape.length)),i=[i[0]],Ap.assertAxesAreInnerMostDims("argMin",i,u.shape.length);const[c,h]=Ap.computeOutAndReduceShapes(u.shape,i),d=ca.sizeFromShape(c),p=ca.makeZerosTypedArray(d,"int32"),f=ca.sizeFromShape(h),m=n.data.get(u.dataId).values;for(let e=0;e<p.length;++e){const t=e*f;let n=m[t],r=0;for(let e=0;e<f;++e){const a=m[t+e];a<n&&(n=a,r=e)}p[e]=r}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(c,"int32",p)}},W$=LT(rt,(e=>Math.asin(e))),V$={kernelName:rt,backendName:"cpu",kernelFunc:W$},U$=LT(at,(e=>Math.asinh(e))),G$={kernelName:at,backendName:"cpu",kernelFunc:U$},H$=LT(st,(e=>Math.atan(e))),j$={kernelName:st,backendName:"cpu",kernelFunc:H$},q$=bT(((e,t)=>Math.atan2(e,t))),K$=$T(ot,q$),X$={kernelName:ot,backendName:"cpu",kernelFunc:K$},Y$=LT(it,(e=>Math.atanh(e))),Z$={kernelName:it,backendName:"cpu",kernelFunc:Y$};function J$(e,t,n,r,a,s){const i=a.strideHeight,o=a.strideWidth,u=a.dilationHeight,l=a.dilationWidth,c=a.effectiveFilterHeight,h=a.effectiveFilterWidth,d=a.padInfo.top,p=a.padInfo.left,f="max"===s?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=xi(a.outShape,n),g=m.values,y=a.outShape[1]*a.outShape[2]*a.outShape[3],b=a.outShape[2]*a.outShape[3],x=a.outShape[3];for(let t=0;t<a.batchSize;++t){const n=t*y,m=t*r[0];for(let t=0;t<a.inChannels;++t)for(let y=0;y<a.outHeight;++y){const w=y*i-d,v=Math.max(0,w),k=Math.min(a.inHeight,c+w),I=n+y*b;for(let n=0;n<a.outWidth;++n){const i=n*o-p,c=Math.max(0,i),d=Math.min(a.inWidth,h+i);let y=f,b=0,w=0;for(let n=v;n<k;n+=u){const a=m+n*r[1];for(let n=c;n<d;n+=l){const i=e[a+n*r[2]+t];"max"===s&&i>y?y=i:"avg"===s&&(b+=i,w++)}if(isNaN(y))break}g[I+n*x+t]="avg"===s?b/w:y}}}return m}function Q$(e,t,n,r,a=!1,s=!1){const i=xi(r.outShape,"int32"),o=r.strideHeight,u=r.strideWidth,l=r.dilationHeight,c=r.dilationWidth,h=r.effectiveFilterHeight,d=r.effectiveFilterWidth,p=r.padInfo.top,f=r.padInfo.left,m=xi(t,n,e);for(let e=0;e<r.batchSize;++e)for(let t=0;t<r.inChannels;++t)for(let n=0;n<r.outHeight;++n){const g=n*o-p;let y=g;for(;y<0;)y+=l;const b=Math.min(r.inHeight,h+g);for(let o=0;o<r.outWidth;++o){const h=o*u-f;let p=h;for(;p<0;)p+=c;const x=Math.min(r.inWidth,d+h);let w=Number.NEGATIVE_INFINITY,v=-1;for(let n=y;n<b;n+=l){const i=n-g;for(let o=p;o<x;o+=c){const u=o-h,l=m.get(e,n,o,t);l>w&&(w=l,v=a?s?((e*r.inHeight+n)*r.inWidth+o)*r.inChannels+t:(n*r.inWidth+o)*r.inChannels+t:i*d+u)}}i.set(v,e,n,o,t)}}return i}function e_(e,t,n,r,a,s){const i=a.strideDepth,o=a.strideHeight,u=a.strideWidth,l=a.dilationDepth,c=a.dilationHeight,h=a.dilationWidth,d=a.effectiveFilterDepth,p=a.effectiveFilterHeight,f=a.effectiveFilterWidth,m=a.padInfo.front,g=a.padInfo.top,y=a.padInfo.left,b="max"===s?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,x=xi(a.outShape,n),w=x.values,v=a.outShape[1]*a.outShape[2]*a.outShape[3]*a.outShape[4],k=a.outShape[2]*a.outShape[3]*a.outShape[4],I=a.outShape[3]*a.outShape[4],S=a.outShape[4];for(let t=0;t<a.batchSize;++t){const n=t*v,x=t*r[0];for(let t=0;t<a.inChannels;++t)for(let v=0;v<a.outDepth;++v){const N=v*i-m;let T=N;for(;T<0;)T+=l;const C=Math.min(a.inDepth,d+N),$=n+v*k;for(let n=0;n<a.outHeight;++n){const i=n*o-g;let d=i;for(;d<0;)d+=c;const m=Math.min(a.inHeight,p+i),v=$+n*I;for(let n=0;n<a.outWidth;++n){const i=n*u-y;let o=i;for(;o<0;)o+=h;const p=Math.min(a.inWidth,f+i),g=v+n*S;let k=b,I=0,N=0;for(let n=T;n<C;n+=l){const a=x+n*r[1];for(let n=d;n<m;n+=c){const i=a+n*r[2];for(let n=o;n<p;n+=h){const a=e[i+n*r[3]+t];if("max"===s&&a>k?k=a:"avg"===s&&(I+=a,N++),isNaN(k))break}if(isNaN(k))break}if(isNaN(k))break}w[g+t]="avg"===s?I/N:k}}}}return x}var t_={kernelName:ut,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t;dT(a,"avgPool");const{filterSize:s,strides:i,pad:o,dimRoundingMode:u}=r;ca.assert(Ap.eitherStridesOrDilationsAreOne(i,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const l=Ap.computePool2DInfo(a.shape,s,i,1,o,u);let c;if(1===l.filterWidth&&1===l.filterHeight&&ca.arraysEqual(l.inShape,l.outShape))c=kT({inputs:{x:a},backend:n});else{const e=n.data.get(a.dataId).values,t=ca.computeStrides(a.shape),r=J$(e,a.shape,a.dtype,t,l,"avg");c=n.makeTensorInfo(l.outShape,a.dtype,r.values)}return c}},n_={kernelName:ct,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:u,dataFormat:l}=r;dT(a,"avgPool3d");const c=Ap.computePool3DInfo(a.shape,s,i,1,o,u,l),h=e_(n.data.get(a.dataId).values,a.shape,a.dtype,ca.computeStrides(a.shape),c,"avg");return n.makeTensorInfo(h.shape,"float32",h.values)}},r_={kernelName:ht,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,{filterSize:i,strides:o,pad:u,dimRoundingMode:l}=r;dT([a,s],"avgPool3DGrad");const c=Ap.computePool3DInfo(s.shape,i,o,1,u,l),h=c.strideDepth,d=c.strideHeight,p=c.strideWidth,f=c.filterDepth,m=c.filterHeight,g=c.filterWidth,y=c.dilationDepth,b=c.dilationHeight,x=c.dilationWidth,w=c.effectiveFilterDepth,v=c.effectiveFilterHeight,k=c.effectiveFilterWidth,I=w-1-c.padInfo.front,S=k-1-c.padInfo.left,N=v-1-c.padInfo.top,T=xi(s.shape,"float32"),C=1/(f*m*g),$=n.bufferSync(a);for(let e=0;e<c.batchSize;++e)for(let t=0;t<c.inChannels;++t)for(let n=0;n<c.inDepth;++n)for(let r=0;r<c.inHeight;++r)for(let a=0;a<c.inWidth;++a){const s=n-I,i=r-N,o=a-S;let u=0;for(let n=0;n<w;n+=y){const r=(s+n)/h;if(!(r<0||r>=c.outDepth||Math.floor(r)!==r))for(let n=0;n<v;n+=b){const a=(i+n)/d;if(!(a<0||a>=c.outHeight||Math.floor(a)!==a))for(let n=0;n<k;n+=x){const s=(o+n)/p;s<0||s>=c.outWidth||Math.floor(s)!==s||(u+=$.get(e,r,a,s,t))}}}T.set(u*C,e,n,r,a,t)}return n.makeTensorInfo(T.shape,T.dtype,T.values)}},a_={kernelName:lt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,i=s;dT([a,s],"avgPoolGrad");const{filterSize:o,strides:u,pad:l}=r,c=Ap.computePool2DInfo(i.shape,o,u,1,l),h=c.strideHeight,d=c.strideWidth,p=c.filterHeight,f=c.filterWidth,m=c.dilationHeight,g=c.dilationWidth,y=c.effectiveFilterHeight,b=c.effectiveFilterWidth,x=b-1-c.padInfo.left,w=y-1-c.padInfo.top,v=xi(i.shape,"float32"),k=1/(p*f),I=n.data.get(a.dataId).values,S=xi(a.shape,"float32",I);for(let e=0;e<c.batchSize;++e)for(let t=0;t<c.inChannels;++t)for(let n=0;n<c.inHeight;++n)for(let r=0;r<c.inWidth;++r){const a=n-w,s=r-x;let i=0;for(let n=0;n<y;n+=m){const r=(a+n)/h;if(!(r<0||r>=c.outHeight||Math.floor(r)!==r))for(let n=0;n<b;n+=g){const a=(s+n)/d;a<0||a>=c.outWidth||Math.floor(a)!==a||(i+=S.get(e,r,a,t))}}v.set(i*k,e,n,r,t)}return n.makeTensorInfo(v.shape,v.dtype,v.values)}},s_={kernelName:tn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,scale:s,offset:i,mean:o,variance:u}=t;ca.assert(o.shape.length===u.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),ca.assert(null==i||o.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),ca.assert(null==s||o.shape.length===s.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks.")),dT([a,o,u,s,i],"batchNorm");let{varianceEpsilon:l}=r;null==l&&(l=.001);const c=n.data.get(a.dataId).values,h=n.data.get(o.dataId).values,d=n.data.get(u.dataId).values,p=s?n.data.get(s.dataId).values:new Float32Array([1]),f=i?n.data.get(i.dataId).values:new Float32Array([0]),m=new Float32Array(c.length),g=f.length,y=p.length,b=d.length,x=h.length;let w=0,v=0,k=0,I=0;for(let e=0;e<c.length;++e)m[e]=f[w++]+(c[e]-h[v++])*p[k++]/Math.sqrt(d[I++]+l),w>=g&&(w=0),v>=x&&(v=0),k>=y&&(k=0),I>=b&&(I=0);return n.makeTensorInfo(a.shape,a.dtype,m)}},i_={kernelName:pt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,crops:i}=r;dT([a],"batchToSpaceND");const o=s.reduce(((e,t)=>e*t)),u=Ap.getReshaped(a.shape,s,o),l=Ap.getPermuted(u.length,s.length),c=Ap.getReshapedPermuted(a.shape,s,o),h=Ap.getSliceBeginCoords(i,s.length),d=Ap.getSliceSize(c,i,s.length),p=C$({inputs:{x:a},backend:n,attrs:{shape:u}}),f=OC({inputs:{x:p},backend:n,attrs:{perm:l}}),m=C$({inputs:{x:f},backend:n,attrs:{shape:c}}),g=HC({inputs:{x:m},backend:n,attrs:{begin:h,size:d}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}},o_={kernelName:ft,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i}=r,o=DT(n.data.get(a.dataId).values,n.data.get(s.dataId).values,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,o)}},u_=LT(bt,((e,t)=>{const n=t;return e>n.clipValueMax?n.clipValueMax:e<n.clipValueMin?n.clipValueMin:e})),l_={kernelName:bt,backendName:"cpu",kernelFunc:u_},c_={kernelName:wt,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend,r=new Float32Array(ca.sizeFromShape(t.shape)),a=n.data.get(t.dataId),s=a.complexTensorInfos.real,i=a.complexTensorInfos.imag,o=n.data.get(s.dataId).values,u=n.data.get(i.dataId).values;for(let e=0;e<o.length;e++){const t=o[e],n=u[e];r[e]=Math.hypot(t,n)}return n.makeOutput(r,t.shape,"float32")}};function h_(e){const{inputs:t,backend:n}=e,{input:r}=t,a=n.data.get(r.dataId).complexTensorInfos.imag,s=n.data.get(a.dataId).values;return n.makeTensorInfo(a.shape,a.dtype,s)}var d_={kernelName:ln,backendName:"cpu",kernelFunc:h_};function p_(e){const{inputs:t,backend:n,attrs:r}=e,{axis:a}=r,s=ca.parseAxisParam(a,t[0].shape)[0];let i=Ap.computeOutShape(t.map((e=>e.shape)),s);if(0===ca.sizeFromShape(i))return n.makeTensorInfo(i,t[0].dtype,[]);const o=t.filter((e=>ca.sizeFromShape(e.shape)>0));if(1===o.length)return kT({inputs:{x:o[0]},backend:n});const u=o.map((e=>e.shape));if(Ap.assertParamsConsistent(u,s),"complex64"===o[0].dtype){const e=o.map((e=>ST({inputs:{input:e},backend:n}))),t=o.map((e=>h_({inputs:{input:e},backend:n}))),r=p_({inputs:e,backend:n,attrs:{axis:s}}),a=p_({inputs:t,backend:n,attrs:{axis:s}}),i=xT({inputs:{real:r,imag:a},backend:n});return e.forEach((e=>n.disposeIntermediateTensorInfo(e))),t.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),i}const l=o.map((e=>{const t=ca.sizeFromShape(e.shape.slice(s));return C$({inputs:{x:e},backend:n,attrs:{shape:[-1,t]}})})),c=l.map((e=>({vals:n.data.get(e.dataId).values,shape:e.shape})));i=Ap.computeOutShape(l.map((e=>e.shape)),1);const h=1===l[0].shape[0],d=VT(c,i,t[0].dtype,h),p=Ap.computeOutShape(o.map((e=>e.shape)),s),f=n.makeTensorInfo(p,t[0].dtype,d);return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}var f_={kernelName:vt,backendName:"cpu",kernelFunc:p_};function m_(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dataFormat:u,dilations:l,dimRoundingMode:c}=r;dT([a,s],"conv2d");const h=Ap.convertConv2DDataFormat(u),d=Ap.computeConv2DInfo(a.shape,s.shape,i,l,o,c,!1,h),p=d.filterHeight,f=d.filterWidth,m=d.dilationHeight,g=d.dilationWidth,y=d.padInfo.left,b=d.padInfo.top,x="channelsLast"===d.dataFormat,w=new La(d.outShape,a.dtype),v=ca.computeStrides(a.shape),k=ca.computeStrides(s.shape),I=v[0],S=x?v[1]:v[2],N=x?v[2]:1,T=x?1:v[1],C=w.strides[0],$=x?w.strides[1]:w.strides[2],_=x?w.strides[2]:1,E=x?1:w.strides[1],A=n.data.get(a.dataId).values,F=n.data.get(s.dataId).values,R=w.values;for(let e=0;e<d.batchSize;++e){const t=e*I,n=e*C;for(let e=0;e<d.outHeight;++e){const r=n+e*$,a=e*d.strideHeight-b;for(let e=0;e<p;++e){const n=a+e*m;if(n<0||n>=d.inHeight)continue;const s=e*k[0],i=t+n*S;for(let e=0;e<d.outWidth;++e){const t=r+e*_,n=e*d.strideWidth-y;for(let e=0;e<f;++e){const r=n+e*g;if(r<0||r>=d.inWidth)continue;const a=i+r*N;let o=s+e*k[1];for(let e=0;e<d.inChannels;++e){const n=A[a+e*T];for(let e=0;e<d.outChannels;++e)R[t+e*E]+=n*F[o+e];o+=d.outChannels}}}}}}return n.makeTensorInfo(w.shape,w.dtype,R)}var g_={kernelName:kt,backendName:"cpu",kernelFunc:m_},y_={kernelName:It,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,dataFormat:u,dimRoundingMode:l,filterShape:c}=r;dT([a,s],"conv2dBackpropFilter");const h=Ap.convertConv2DDataFormat(u),d=Ap.computeConv2DInfo(a.shape,c,i,1,o,l,!1,h),{strideHeight:p,strideWidth:f,filterHeight:m,filterWidth:g}=d,y="channelsLast"===d.dataFormat,b=new La(d.filterShape,"float32"),x=d.padInfo.left,w=d.padInfo.top,v=n.data.get(a.dataId).values,k=n.data.get(s.dataId).values,I=new La(a.shape,a.dtype,v),S=new La(s.shape,s.dtype,k);for(let e=0;e<m;++e){const t=Math.max(0,Math.ceil((w-e)/p)),n=Math.min(d.outHeight,(d.inHeight+w-e)/p);for(let r=0;r<g;++r){const a=Math.max(0,Math.ceil((x-r)/f)),s=Math.min(d.outWidth,(d.inWidth+x-r)/f);for(let i=0;i<d.inChannels;++i)for(let o=0;o<d.outChannels;++o){let u=0;for(let l=0;l<d.batchSize;++l)for(let c=t;c<n;++c){const t=e+c*p-w;for(let e=a;e<s;++e){const n=r+e*f-x;u+=y?I.get(l,t,n,i)*S.get(l,c,e,o):I.get(l,i,t,n)*S.get(l,o,c,e)}}b.set(u,e,r,i,o)}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}},b_={kernelName:St,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{inputShape:i,strides:o,pad:u,dataFormat:l,dimRoundingMode:c}=r;dT([a,s],"conv2dBackpropInput");const h=ca.computeStrides(s.shape),d=ca.computeStrides(a.shape);let p=Ap.convertConv2DDataFormat(l);const f=Ap.computeConv2DInfo(i,s.shape,o,1,u,c,!1,p),m=new La(f.inShape,"float32"),g=m.values,y=n.data.get(a.dataId).values,b=n.data.get(s.dataId).values,[x,w,v]=h,{batchSize:k,filterHeight:I,filterWidth:S,inChannels:N,inHeight:T,inWidth:C,outChannels:$,outHeight:_,outWidth:E,strideHeight:A,strideWidth:F}=f;p=f.dataFormat;const R=I-1-f.padInfo.top,D=S-1-f.padInfo.left,M="channelsLast"===p,O=m.strides[0],L=M?m.strides[1]:m.strides[2],z=M?m.strides[2]:1,P=M?1:m.strides[1],B=d[0],W=M?d[1]:d[2],V=M?d[2]:1,U=M?1:d[1];for(let e=0;e<k;++e)for(let t=0;t<N;++t)for(let n=0;n<T;++n){const r=n-R,a=Math.max(0,Math.ceil(r/A)),s=Math.min(_,(I+r)/A);for(let i=0;i<C;++i){const o=i-D,u=Math.max(0,Math.ceil(o/F)),l=Math.min(E,(S+o)/F);let c=0;for(let n=a;n<s;++n){const a=n*A-r;for(let r=u;r<l;++r){const s=B*e+W*n+V*r,i=x*(I-1-a)+w*(S-1-(r*F-o))+v*t;for(let e=0;e<$;++e)c+=y[s+U*e]*b[i+e]}}g[O*e+L*n+z*i+P*t]=c}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}},x_={kernelName:Nt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:u}=r;dT([a,s],"conv3d");const l=Ap.computeConv3DInfo(a.shape,s.shape,i,u,o),{filterDepth:c,filterHeight:h,filterWidth:d,dilationDepth:p,dilationHeight:f,dilationWidth:m,padInfo:g}=l,y=g.front,b=g.left,x=g.top,w=new La(l.outShape,a.dtype),v=n.data.get(a.dataId).values,k=n.data.get(s.dataId).values,I=w.values,S=ca.computeStrides(a.shape),N=ca.computeStrides(s.shape);for(let e=0;e<l.batchSize;++e){const t=e*S[0],n=e*w.strides[0];for(let e=0;e<l.outDepth;++e){const r=n+e*w.strides[1],a=e*l.strideDepth-y;for(let e=0;e<c;++e){const n=a+e*p;if(n<0||n>=l.inDepth)continue;const s=e*N[0],i=t+n*S[1];for(let e=0;e<l.outHeight;++e){const t=r+e*w.strides[2],n=e*l.strideHeight-x;for(let e=0;e<h;++e){const r=n+e*f;if(r<0||r>=l.inHeight)continue;const a=s+e*N[1],o=i+r*S[2];for(let e=0;e<l.outWidth;++e){const n=t+e*l.outChannels,r=e*l.strideWidth-b;for(let e=0;e<d;++e){const t=r+e*m;if(t<0||t>=l.inWidth)continue;const s=a+e*N[2],i=o+t*l.inChannels;let u=s;for(let e=0;e<l.inChannels;++e){const t=v[i+e];for(let e=0;e<l.outChannels;++e)I[n+e]+=t*k[u+e];u+=l.outChannels}}}}}}}}return n.makeTensorInfo(w.shape,w.dtype,w.values)}},w_={kernelName:Tt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,filterShape:u}=r;dT([a,s],"conv3dBackpropFilterV2");const l=ca.computeStrides(a.shape),c=ca.computeStrides(s.shape),h=Ap.computeConv3DInfo(a.shape,u,i,1,o),d=h.strideDepth,p=h.strideHeight,f=h.strideWidth,m=h.filterDepth,g=h.filterHeight,y=h.filterWidth,b=new La(h.filterShape,"float32"),x=b.values,[w,v,k,I]=b.strides,S=n.data.get(s.dataId).values,[N,T,C,$]=c,_=n.data.get(a.dataId).values,[E,A,F,R]=l,D=h.padInfo.front,M=h.padInfo.left,O=h.padInfo.top;for(let e=0;e<m;++e){const t=Math.max(0,Math.ceil((D-e)/d)),n=Math.min(h.outDepth,(h.inDepth+D-e)/d),r=e*w;for(let a=0;a<g;++a){const s=Math.max(0,Math.ceil((O-a)/p)),i=Math.min(h.outHeight,(h.inHeight+O-a)/p),o=a*v+r;for(let r=0;r<y;++r){const u=Math.max(0,Math.ceil((M-r)/f)),l=Math.min(h.outWidth,(h.inWidth+M-r)/f),c=r*k+o;for(let o=0;o<h.inChannels;++o){const m=o*I+c;for(let c=0;c<h.outChannels;++c){let g=0;for(let m=0;m<h.batchSize;++m){const h=m*E,y=m*N;for(let m=t;m<n;++m){const t=(e+m*d-D)*A+h,n=m*T+y;for(let e=s;e<i;++e){const s=(a+e*p-O)*F+t,i=e*C+n;for(let e=u;e<l;++e){const t=e*$+i;g+=_[(r+e*f-M)*R+s+o]*S[t+c]}}}}x[m+c]=g}}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}},v_={kernelName:Ct,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{pad:i,strides:o,inputShape:u}=r;dT([a],"conv3dBackpropInputV2");const l=ca.computeStrides(a.shape),c=ca.computeStrides(s.shape),h=Ap.computeConv3DInfo(u,s.shape,o,1,i),d=new La(h.inShape,"float32"),p=d.values,[f,m,g,y]=d.strides,b=n.data.get(a.dataId).values,[x,w,v,k]=l,I=n.data.get(s.dataId).values,[S,N,T,C]=c,{batchSize:$,filterDepth:_,filterHeight:E,filterWidth:A,inChannels:F,inDepth:R,inHeight:D,inWidth:M,outChannels:O,outDepth:L,outHeight:z,outWidth:P,strideDepth:B,strideHeight:W,strideWidth:V}=h,U=_-1-h.padInfo.front,G=E-1-h.padInfo.top,H=A-1-h.padInfo.left;for(let e=0;e<$;++e)for(let t=0;t<F;++t)for(let n=0;n<R;++n){const r=n-U,a=Math.max(0,Math.ceil(r/B)),s=Math.min(L,(_+r)/B);for(let i=0;i<D;++i){const o=i-G,u=Math.max(0,Math.ceil(o/W)),l=Math.min(z,(E+o)/W);for(let c=0;c<M;++c){const h=c-H,d=Math.max(0,Math.ceil(h/V)),$=Math.min(P,(A+h)/V);let F=0;for(let n=a;n<s;++n){const a=n*B-r;for(let r=u;r<l;++r){const s=r*W-o;for(let i=d;i<$;++i){const o=x*e+w*n+v*r+k*i,u=S*(_-1-a)+N*(E-1-s)+T*(A-1-(i*V-h))+C*t;for(let e=0;e<O;++e)F+=b[o+e]*I[u+e]}}}p[f*e+m*n+g*i+y*c+t]=F}}}return n.makeTensorInfo(d.shape,d.dtype,d.values)}},k_=LT($t,(e=>Math.cos(e))),I_={kernelName:$t,backendName:"cpu",kernelFunc:k_},S_=LT(_t,(e=>Math.cosh(e))),N_={kernelName:_t,backendName:"cpu",kernelFunc:S_},T_={kernelName:At,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:a,boxes:s,boxInd:i}=t,{cropSize:o,method:u,extrapolationValue:l}=r,[c,h,d,p]=a.shape,f=s.shape[0],[m,g]=o,y=xi([f,m,g,p],"float32"),b=n.data.get(s.dataId).values,x=n.data.get(i.dataId).values,w=n.data.get(a.dataId).values,v=ca.computeStrides(a.shape),k=ca.computeStrides(y.shape);for(let e=0;e<f;e++){const t=4*e,n=b[t],r=b[t+1],a=b[t+2],s=b[t+3],i=x[e];if(i>=c)continue;const o=m>1?(a-n)*(h-1)/(m-1):0,f=g>1?(s-r)*(d-1)/(g-1):0;for(let t=0;t<m;t++){const c=m>1?n*(h-1)+t*o:.5*(n+a)*(h-1);if(c<0||c>h-1)for(let n=0;n<g;n++)for(let r=0;r<p;r++){const a=r+n*k[2]+t*k[1]+e*k[0];y.values[a]=l}else if("bilinear"===u){const n=Math.floor(c),a=Math.ceil(c),o=c-n;for(let u=0;u<g;u++){const c=g>1?r*(d-1)+u*f:.5*(r+s)*(d-1);if(c<0||c>d-1){for(let n=0;n<p;n++){const r=n+u*k[2]+t*k[1]+e*k[0];y.values[r]=l}continue}const h=Math.floor(c),m=Math.ceil(c),b=c-h;for(let r=0;r<p;r++){let s=r+h*v[2]+n*v[1]+i*v[0];const l=w[s];s=r+m*v[2]+n*v[1]+i*v[0];const c=w[s];s=r+h*v[2]+a*v[1]+i*v[0];const d=w[s];s=r+m*v[2]+a*v[1]+i*v[0];const p=l+(c-l)*b,f=d+(w[s]-d)*b;s=r+u*k[2]+t*k[1]+e*k[0],y.values[s]=p+(f-p)*o}}}else for(let n=0;n<g;++n){const a=g>1?r*(d-1)+n*f:.5*(r+s)*(d-1);if(a<0||a>d-1){for(let r=0;r<p;r++){const a=r+n*k[2]+t*k[1]+e*k[0];y.values[a]=l}continue}const o=Math.round(a),u=Math.round(c);for(let r=0;r<p;r++){const a=r+o*v[2]+u*v[1]+i*v[0],s=r+n*k[2]+t*k[1]+e*k[0];y.values[s]=w[a]}}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}},C_={kernelName:Et,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r;dT(a,"cumsum");const u=Ap.getAxesPermutation([s],a.shape.length);let l=a;null!=u&&(l=OC({inputs:{x:a},backend:n,attrs:{perm:u}}));const c=Ap.getInnerMostAxes(1,a.shape.length)[0];if(c!==l.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${l.shape.length-1} but got axis=${c}`);const h=ts(l.dtype,"int32"),d=ca.makeZerosTypedArray(ca.sizeFromShape(l.shape),h),p=n.data.get(l.dataId).values,f=l.shape[l.shape.length-1],m=o?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let e=0;e<p.length;e+=f)for(let t=0;t<f;t++){const n=m(e,t);if(0===t)d[n]=i?0:p[n];else{const r=m(e,t-1);d[n]=i?p[r]+d[r]:p[n]+d[r]}}const g=n.makeTensorInfo(l.shape,h,d);if(null!=u){const e=OC({inputs:{x:g},backend:n,attrs:{perm:Ap.getUndoAxesPermutation(u)}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(l),e}return g}},$_={kernelName:Ft,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i,binaryOutput:o}=r;if(1===a.shape.length){const e=DT(n.data.get(a.dataId).values,n.data.get(s.dataId).values,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,e)}if(2===a.shape.length){const e=MT(n.bufferSync(a),n.bufferSync(s),i,o);return n.makeTensorInfo(e.shape,s.dtype,e.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${a.shape.length}.`)}},__={kernelName:Rt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockSize:s,dataFormat:i}=r;ca.assert("NHWC"===i,(()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${i}`)),ca.assert(s>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${s}`));const o=a.shape[0],u=a.shape[1],l=a.shape[2],c=a.shape[3],h=u*s,d=l*s,p=c/(s*s),f=n.data.get(a.dataId).values,m=new Float32Array(o*h*d*p);let g=0;for(let e=0;e<o;++e)for(let t=0;t<h;++t){const n=Math.floor(t/s),r=t%s;for(let t=0;t<d;++t){const a=Math.floor(t/s),i=(r*s+t%s)*p;for(let t=0;t<p;++t){const r=t+i+c*(a+l*(n+u*e));m[g++]=f[r]}}}return n.makeTensorInfo([o,h,d,p],a.dtype,m)}};function E_(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:u,dimRoundingMode:l}=r;dT([a,s],"depthwiseConv2DNative");const c=ca.computeStrides(a.shape),h=ca.computeStrides(s.shape);let d=u;null==d&&(d=[1,1]),ca.assert(Ap.eitherStridesOrDilationsAreOne(i,d),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${d}'`));const p=Ap.computeConv2DInfo(a.shape,s.shape,i,d,o,l,!0),{filterHeight:f,filterWidth:m,dilationHeight:g,dilationWidth:y,padInfo:b}=p,x=b.left,w=b.top,v=p.outChannels/p.inChannels,k=new La(p.outShape,a.dtype),I=n.data.get(a.dataId).values,S=n.data.get(s.dataId).values,N=k.values;for(let e=0;e<p.batchSize;++e){const t=e*c[0],n=e*k.strides[0];for(let e=0;e<p.outHeight;++e){const r=n+e*k.strides[1],a=e*p.strideHeight-w;for(let e=0;e<f;++e){const n=a+e*g;if(n<0||n>=p.inHeight)continue;const s=e*h[0],i=t+n*c[1];for(let e=0;e<p.outWidth;++e){const t=r+e*k.strides[2],n=e*p.strideWidth-x;for(let e=0;e<m;++e){const r=n+e*y;if(r<0||r>=p.inWidth)continue;const a=s+e*h[1],o=i+r*p.inChannels;let u=t,l=a;for(let e=0;e<p.inChannels;++e){const t=I[o+e];for(let e=0;e<v;++e)N[u+e]+=t*S[l+e];u+=v,l+=v}}}}}}return n.makeTensorInfo(k.shape,k.dtype,k.values)}var A_={kernelName:Dt,backendName:"cpu",kernelFunc:E_},F_={kernelName:Mt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,dilations:o,pad:u,dimRoundingMode:l,filterShape:c}=r;dT([a,s],"depthwiseConv2dNativeBackpropFilter");const h=Ap.computeConv2DInfo(a.shape,c,i,o,u,l,!0),{strideHeight:d,strideWidth:p,filterHeight:f,filterWidth:m}=h,g=new La(h.filterShape,"float32"),y=h.padInfo.left,b=h.padInfo.top,x=h.outChannels/h.inChannels,w=n.data.get(a.dataId).values,v=new La(a.shape,a.dtype,w),k=n.data.get(s.dataId).values,I=new La(s.shape,s.dtype,k);for(let e=0;e<f;++e){const t=Math.max(0,Math.ceil((b-e)/d)),n=Math.min(h.outHeight,(h.inHeight+b-e)/d);for(let r=0;r<m;++r){const a=Math.max(0,Math.ceil((y-r)/p)),s=Math.min(h.outWidth,(h.inWidth+y-r)/p);for(let i=0;i<h.outChannels;++i){const o=Math.trunc(i/x),u=i%x;let l=0;for(let u=0;u<h.batchSize;++u)for(let c=t;c<n;++c){const t=e+c*d-b;for(let e=a;e<s;++e){const n=r+e*p-y;l+=v.get(u,t,n,o)*I.get(u,c,e,i)}}g.set(l,e,r,o,u)}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}},R_={kernelName:Ot,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{strides:i,dilations:o,pad:u,dimRoundingMode:l,inputShape:c}=r;dT([a,s],"depthwiseConv2DNativeBackpropInput");const h=ca.computeStrides(a.shape),d=ca.computeStrides(s.shape),p=Ap.computeConv2DInfo(c,s.shape,i,o,u,l,!0),f=new La(p.inShape,"float32"),m=f.values,[g,y,b]=f.strides,x=n.data.get(a.dataId).values,[w,v,k]=h,I=n.data.get(s.dataId).values,[S,N,T]=d,{batchSize:C,filterHeight:$,filterWidth:_,inChannels:E,inHeight:A,inWidth:F,outChannels:R,outHeight:D,outWidth:M,strideHeight:O,strideWidth:L}=p,z=$-1-p.padInfo.top,P=_-1-p.padInfo.left,B=R/E;for(let e=0;e<C;++e)for(let t=0;t<E;++t)for(let n=0;n<A;++n){const r=n-z,a=Math.max(0,Math.ceil(r/O)),s=Math.min(D,($+r)/O);for(let i=0;i<F;++i){const o=i-P,u=Math.max(0,Math.ceil(o/L)),l=Math.min(M,(_+o)/L);let c=0;for(let n=a;n<s;++n){const a=n*O-r;for(let r=u;r<l;++r){const s=w*e+v*n+k*r,i=S*($-1-a)+N*(_-1-(r*L-o))+T*t;for(let e=0;e<B;++e)c+=x[s+(t*B+e)]*I[i+e]}}m[g*e+y*n+b*i+t]=c}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}},D_={kernelName:Lt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,a=ca.sizeFromShape(r.shape),s=n.data.get(r.dataId).values,i=xi([a,a],r.dtype),o=i.values;for(let e=0;e<s.length;e++)o[e*a+e]=s[e];const u=[...r.shape,...r.shape];return n.makeTensorInfo(u,i.dtype,i.values)}},M_={kernelName:zt,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:a}=e,{strides:s,pad:i,dilations:o}=n,u=t,l=u.data.get(r.dataId).values,c=r.shape.length,h=u.data.get(a.dataId).values,d=a.shape.length,{batchSize:p,inHeight:f,inWidth:m,inChannels:g,outHeight:y,outWidth:b,padInfo:x,strideHeight:w,strideWidth:v,filterHeight:k,filterWidth:I,dilationHeight:S,dilationWidth:N,outShape:T}=Ap.computeDilation2DInfo(r.shape,a.shape,s,i,"NHWC",o),C=ca.sizeFromShape(T),$=T.length,_=ca.getArrayFromDType(r.dtype,C);for(let e=0;e<p;++e)for(let t=0;t<y;++t){const n=t*w-x.top;for(let s=0;s<b;++s){const i=s*v-x.left;for(let o=0;o<g;++o){let u=Number.MIN_SAFE_INTEGER;for(let t=0;t<k;++t){const s=n+t*S;if(s>=0&&s<f)for(let n=0;n<I;++n){const p=i+n*N;if(p>=0&&p<m){const i=ca.locToIndex([e,s,p,o],c,ca.computeStrides(r.shape)),f=ca.locToIndex([t,n,o],d,ca.computeStrides(a.shape)),m=l[i]+h[f];m>u&&(u=m)}}}_[ca.locToIndex([e,t,s,o],$,ca.computeStrides(T))]=u}}}return{dataId:u.write(ca.toTypedArray(_,r.dtype),T,r.dtype),shape:T,dtype:r.dtype}}},O_={kernelName:Bt,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:a,dy:s}=e,{strides:i,pad:o,dilations:u}=n,l=t,c=ca.toNestedArray(r.shape,l.data.get(r.dataId).values),h=ca.toNestedArray(a.shape,l.data.get(a.dataId).values),{batchSize:d,inHeight:p,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:b,strideHeight:x,strideWidth:w,filterHeight:v,filterWidth:k,dilationHeight:I,dilationWidth:S,outShape:N}=Ap.computeDilation2DInfo(r.shape,a.shape,i,o,"NHWC",u);ca.assert(s.rank===N.length,(()=>`Error in ${Bt}, dy must have the same rank as output ${N.length}, but got ${s.rank}`));const T=ca.toNestedArray(N,l.data.get(s.dataId).values),C=ca.makeZerosNestedTypedArray(a.shape,a.dtype);for(let e=0;e<d;++e)for(let t=0;t<g;++t){const n=t*x-b.top;for(let r=0;r<y;++r){const a=r*w-b.left;for(let s=0;s<m;++s){let i=Number.MIN_SAFE_INTEGER,o=0,u=0;for(let t=0;t<v;++t){const r=n+t*I;if(r>=0&&r<p)for(let n=0;n<k;++n){const l=a+n*S;if(l>=0&&l<f){const a=c[e][r][l][s]+h[t][n][s];a>i&&(i=a,o=t,u=n)}}}C[o][u][s]+=T[e][t][r][s]}}}return{dataId:l.write(ca.toTypedArray(C,r.dtype),a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}},L_={kernelName:Pt,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:a,dy:s}=e,{strides:i,pad:o,dilations:u}=n,l=t,c=ca.toNestedArray(r.shape,l.data.get(r.dataId).values),h=ca.toNestedArray(a.shape,l.data.get(a.dataId).values),{batchSize:d,inHeight:p,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:b,strideHeight:x,strideWidth:w,filterHeight:v,filterWidth:k,dilationHeight:I,dilationWidth:S,outShape:N}=Ap.computeDilation2DInfo(r.shape,a.shape,i,o,"NHWC",u);ca.assert(s.rank===N.length,(()=>`Error in ${Pt}, dy must have the same rank as output ${N.length}, but got ${s.rank}`));const T=ca.toNestedArray(N,l.data.get(s.dataId).values),C=ca.makeZerosNestedTypedArray(r.shape,r.dtype);for(let e=0;e<d;++e)for(let t=0;t<g;++t){const n=t*x-b.top;for(let r=0;r<y;++r){const a=r*w-b.left;for(let s=0;s<m;++s){let i=Number.MIN_SAFE_INTEGER,o=n<0?0:n,u=a<0?0:a;for(let t=0;t<v;++t){const r=n+t*I;if(r>=0&&r<p)for(let n=0;n<k;++n){const l=a+n*S;if(l>=0&&l<f){const a=c[e][r][l][s]+h[t][n][s];a>i&&(i=a,o=r,u=l)}}}C[e][o][u][s]+=T[e][t][r][s]}}}return{dataId:l.write(ca.toTypedArray(C,r.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}};function z_(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;let o;dT(a,"sum"),o="bool"===a.dtype?TT({inputs:{x:a},backend:n,attrs:{dtype:"int32"}}):kT({inputs:{x:a},backend:n});const u=o.shape.length,l=ca.parseAxisParam(s,o.shape),c=Ap.getAxesPermutation(l,u);let h=l,d=o;null!=c&&(d=OC({inputs:{x:o},backend:n,attrs:{perm:c}}),h=Ap.getInnerMostAxes(h.length,u)),Ap.assertAxesAreInnerMostDims("sum",h,d.shape.length);const[p,f]=Ap.computeOutAndReduceShapes(d.shape,h);let m=vT(n,p,Ap.upcastType(d.dtype,"int32"));const g=ca.sizeFromShape(f),y=n.data.get(m.dataId).values,b=n.data.get(d.dataId).values;for(let e=0;e<y.length;++e){const t=e*g;let n=0;for(let e=0;e<g;++e)n+=b[t+e];y[e]=n}if(i){const e=m;m=C$({inputs:{x:m},backend:n,attrs:{shape:Ap.expandShapeToKeepDim(m.shape,l)}}),n.disposeIntermediateTensorInfo(e)}return n.disposeIntermediateTensorInfo(o),null!=c&&n.disposeIntermediateTensorInfo(d),m}var P_={kernelName:vr,backendName:"cpu",kernelFunc:z_},B_={kernelName:Vt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{equation:a}=r,s=t,{allDims:i,summedDims:o,idDims:u}=Ap.decodeEinsumEquation(a,s.length);Ap.checkEinsumDimSizes(i.length,u,s);const{path:l,steps:c}=Ap.getEinsumComputePath(o,u),h=c.length;let d=null,p=i.length;const f=[];for(let e=0;e<h;++e){for(const t of c[e]){const{permutationIndices:e,expandDims:r}=Ap.getEinsumPermutation(p,u[t]);let a;Ap.isIdentityPermutation(e)?a=s[t]:(a=OC({inputs:{x:s[t]},backend:n,attrs:{perm:e}}),f.push(a));const i=a.shape.slice();for(let e=0;e<r.length;++e)i.splice(r[e],0,1);ca.arraysEqual(a.shape,i)||(a=C$({inputs:{x:a},backend:n,attrs:{shape:i}}),f.push(a)),null===d?d=a:(d=$C({inputs:{a,b:d},backend:n}),f.push(d))}e<h-1&&(l[e]>=0&&(d=z_({inputs:{x:d},backend:n,attrs:{axis:l[e]-(i.length-p),keepDims:!1}}),f.push(d)),p--)}for(const e of f)e!==d&&n.disposeIntermediateTensorInfo(e);return d}},W_={kernelName:Gt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{dy:r,y:a}=t;dT([r,a],"eluGrad");const s=new Float32Array(ca.sizeFromShape(a.shape)),i=n.data.get(a.dataId).values,o=n.data.get(r.dataId).values;for(let e=0;e<i.length;++e){const t=i[e];s[e]=t>=1?o[e]:o[e]*(t+1)}return n.makeTensorInfo(a.shape,"float32",s)}},V_=Ap.ERF_P,U_=Ap.ERF_A1,G_=Ap.ERF_A2,H_=Ap.ERF_A3,j_=Ap.ERF_A4,q_=Ap.ERF_A5,K_=LT(Ht,(e=>{const t=Math.sign(e),n=Math.abs(e),r=1/(1+V_*n);return t*(1-((((q_*r+j_)*r+H_)*r+G_)*r+U_)*r*Math.exp(-n*n))})),X_={kernelName:Ht,backendName:"cpu",kernelFunc:K_};function Y_(e){const{inputs:t,backend:n,attrs:r}=e,{input:a}=t,{dim:s}=r,i=a.shape.length,o=a.shape.slice();let u=s;return s<0&&(ca.assert(-(i+1)<=s,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),u=i+s+1),o.splice(u,0,1),C$({inputs:{x:a},backend:n,attrs:{shape:o}})}var Z_={kernelName:Kt,backendName:"cpu",kernelFunc:Y_},J_=bT(((e,t)=>e/t)),Q_=$T(Wt,J_),eE={kernelName:Wt,backendName:"cpu",kernelFunc:Q_};function tE(e,t,n){const r=e.shape,a=r[0],s=r[1],i=n.data.get(e.dataId),o=i.complexTensorInfos.real,u=i.complexTensorInfos.imag,l=[a,s],c=ca.sizeFromShape(l),h=ca.getTypedArrayFromDType("float32",c),d=ca.getTypedArrayFromDType("float32",c);for(let e=0;e<a;e++){const r=HC({inputs:{x:o},backend:n,attrs:{begin:[e,0],size:[1,s]}}),a=HC({inputs:{x:u},backend:n,attrs:{begin:[e,0],size:[1,s]}}),i=xT({inputs:{real:r,imag:a},backend:n}),{real:l,imag:c}=nE(i,t,n),p=Ap.mergeRealAndImagArrays(l,c);for(let t=0;t<s;t++){const n=Ap.getComplexWithIndex(p,t);h[e*s+t]=n.real,d[e*s+t]=n.imag}n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i)}const p=n.makeTensorInfo(l,"float32",h),f=n.makeTensorInfo(l,"float32",d),m=xT({inputs:{real:p,imag:f},backend:n});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),m}function nE(e,t,n){const r=ca.sizeFromShape(e.shape),a=n.data.get(e.dataId),s=n.data.get(a.complexTensorInfos.real.dataId).values,i=n.data.get(a.complexTensorInfos.imag.dataId).values;if(0==((o=r)&o-1)){const a=rE(s,i,r,t,n),o=[e.shape[0],e.shape[1]];if(t){const e=n.makeTensorInfo(o,"float32",a.real),t=n.makeTensorInfo(o,"float32",a.imag),s=n.makeTensorInfo([],"float32",ca.createScalarValue(r,"float32")),i=kT({inputs:{x:s},backend:n}),u=eE.kernelFunc({inputs:{a:e,b:s},backend:n}),l=eE.kernelFunc({inputs:{a:t,b:i},backend:n}),c=n.data.get(u.dataId).values,h=n.data.get(l.dataId).values;return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(l),{real:c,imag:h}}return a}{const e=function(e,t,n){const r=new Float32Array(2*t);for(let a=0;a<t;a++){let s=0,i=0;for(let r=0;r<t;r++){const o=Ap.exponent(a*r,t,n),u=Ap.getComplexWithIndex(e,r);s+=u.real*o.real-u.imag*o.imag,i+=u.real*o.imag+u.imag*o.real}n&&(s/=t,i/=t),Ap.assignToTypedArray(r,s,i,a)}return r}(Ap.mergeRealAndImagArrays(s,i),r,t);return Ap.splitRealAndImagArrays(e)}var o}function rE(e,t,n,r,a){if(1===n)return{real:e,imag:t};const s=Ap.mergeRealAndImagArrays(e,t),i=n/2,o=Ap.complexWithEvenIndex(s),u=o.real,l=o.imag,c=[u.length],h=a.makeTensorInfo(c,"float32",u),d=a.makeTensorInfo(c,"float32",l),p=xT({inputs:{real:h,imag:d},backend:a}),f=Ap.complexWithOddIndex(s),m=f.real,g=f.imag,y=[m.length],b=a.makeTensorInfo(y,"float32",m),x=a.makeTensorInfo(y,"float32",g),w=xT({inputs:{real:b,imag:x},backend:a}),v=rE(u,l,i,r,a),k=v.real,I=v.imag,S=[k.length],N=a.makeTensorInfo(S,"float32",k),T=a.makeTensorInfo(S,"float32",I),C=xT({inputs:{real:N,imag:T},backend:a}),$=rE(m,g,i,r,a),_=$.real,E=$.imag,A=[_.length],F=a.makeTensorInfo(A,"float32",_),R=a.makeTensorInfo(A,"float32",E),D=xT({inputs:{real:F,imag:R},backend:a}),M=Ap.exponents(n,r),O=[M.real.length],L=a.makeTensorInfo(O,"float32",M.real),z=a.makeTensorInfo(O,"float32",M.imag),P=xT({inputs:{real:L,imag:z},backend:a}),B=$C({inputs:{a:P,b:D},backend:a}),W=FT({inputs:{a:C,b:B},backend:a}),V=i$({inputs:{a:C,b:B},backend:a}),U=ST({inputs:{input:W},backend:a}),G=ST({inputs:{input:V},backend:a}),H=h_({inputs:{input:W},backend:a}),j=h_({inputs:{input:V},backend:a}),q=p_({inputs:[U,G],backend:a,attrs:{axis:0}}),K=p_({inputs:[H,j],backend:a,attrs:{axis:0}}),X=a.data.get(q.dataId).values,Y=a.data.get(K.dataId).values;return a.disposeIntermediateTensorInfo(h),a.disposeIntermediateTensorInfo(d),a.disposeIntermediateTensorInfo(p),a.disposeIntermediateTensorInfo(b),a.disposeIntermediateTensorInfo(x),a.disposeIntermediateTensorInfo(w),a.disposeIntermediateTensorInfo(N),a.disposeIntermediateTensorInfo(T),a.disposeIntermediateTensorInfo(C),a.disposeIntermediateTensorInfo(F),a.disposeIntermediateTensorInfo(R),a.disposeIntermediateTensorInfo(D),a.disposeIntermediateTensorInfo(L),a.disposeIntermediateTensorInfo(z),a.disposeIntermediateTensorInfo(P),a.disposeIntermediateTensorInfo(B),a.disposeIntermediateTensorInfo(W),a.disposeIntermediateTensorInfo(V),a.disposeIntermediateTensorInfo(U),a.disposeIntermediateTensorInfo(H),a.disposeIntermediateTensorInfo(G),a.disposeIntermediateTensorInfo(j),a.disposeIntermediateTensorInfo(q),a.disposeIntermediateTensorInfo(K),{real:X,imag:Y}}var aE={kernelName:Yt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t,a=ca.sizeFromShape(r.shape),s=r.shape[r.shape.length-1],i=C$({inputs:{x:r},backend:n,attrs:{shape:[a/s,s]}}),o=tE(i,!1,n),u=C$({inputs:{x:o},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),u}};function sE(e){const{backend:t,attrs:n}=e,{shape:r,value:a,dtype:s}=n,i=s||ca.inferDtype(a),o=ca.getArrayFromDType(i,ca.sizeFromShape(r));return function(e,t,n){e.fill(t)}(o,a),t.makeTensorInfo(r,i,o)}var iE={kernelName:Zt,backendName:"cpu",kernelFunc:sE},oE={kernelName:Jt,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,a=n,s=ca.getTypedArrayFromDType(r.dtype,ca.sizeFromShape(r.shape)),[i,o,u,l]=r.shape,c=a.data.get(r.dataId).values;for(let e=0;e<i;e++){const t=e*u*o*l;for(let e=0;e<o;e++){const n=e*(u*l);for(let e=0;e<u;e++){const r=e*l;for(let a=0;a<l;a++){const i=Math.round(u-e-1),o=t+n+r+a;let h=c[o];i>=0&&i<u&&(h=c[t+n+i*l+a]),s[o]=h}}}}return{dataId:a.write(s,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},uE=bT(((e,t)=>Math.floor(e/t))),lE=$T(en,uE,null,"int32"),cE={kernelName:en,backendName:"cpu",kernelFunc:lE},hE={kernelName:Zr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=r;let m=m_({inputs:{x:a,filter:s},backend:n,attrs:{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:d}});if(i){const e=m;m=FT({inputs:{a:m,b:i},backend:n}),n.disposeIntermediateTensorInfo(e)}if(p){const e=m;m=T$(n,m,p,o,f),n.disposeIntermediateTensorInfo(e)}return m}},dE={kernelName:Jr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=r;let m=E_({inputs:{x:a,filter:s},backend:n,attrs:{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:d}});if(i){const e=m;m=FT({inputs:{a:m,b:i},backend:n}),n.disposeIntermediateTensorInfo(e)}if(p){const e=m;m=T$(n,m,p,o,f),n.disposeIntermediateTensorInfo(e)}return m}},pE={kernelName:rn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:r,indices:a}=t,s=ca.sizeFromShape(r.shape),i=a.shape,o=i[i.length-1],[u,l,c,h]=Ap.prepareAndValidate(r,a);if(0===l)return n.makeTensorInfo(u,r.dtype,[]);const d=tC(n.data.get(a.dataId).values,n.bufferSync(r),r.dtype,l,o,c,h,r.shape,s);return n.makeTensorInfo(u,r.dtype,d.values)}},fE={kernelName:nn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,indices:s}=t,{axis:i,batchDims:o}=r;dT([a,s],"gatherV2");let u=o;null==o&&(u=0);const l=ca.sizeFromShape(s.shape),c=ca.parseAxisParam(i,a.shape)[0],h=Ap.segment_util.collectGatherOpShapeInfo(a,s,c,u),d=C$({inputs:{x:a},backend:n,attrs:{shape:[h.batchSize,h.outerSize,h.dimSize,h.sliceSize]}}),p=C$({inputs:{x:s},backend:n,attrs:{shape:[h.batchSize,l/h.batchSize]}}),f=[h.batchSize,h.outerSize,l/h.batchSize,h.sliceSize],m=n.bufferSync(p),g=nC(n.bufferSync(d),m,f);return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.makeTensorInfo(h.outputShape,g.dtype,g.values)}},mE={kernelName:un,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t,a=ca.sizeFromShape(r.shape),s=r.shape[r.shape.length-1],i=C$({inputs:{x:r},backend:n,attrs:{shape:[a/s,s]}}),o=tE(i,!0,n),u=C$({inputs:{x:o},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),u}},gE=LT(cn,(e=>Number.isFinite(e)?1:0),"bool"),yE={kernelName:cn,backendName:"cpu",kernelFunc:gE},bE=LT(hn,(e=>Math.abs(e)===1/0?1:0),"bool"),xE={kernelName:hn,backendName:"cpu",kernelFunc:bE},wE=LT(dn,(e=>Number.isNaN(e)?1:0),"bool"),vE={kernelName:dn,backendName:"cpu",kernelFunc:wE},kE={kernelName:gn,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:a,num:s}=n,i=mC(r,a,s);return t.makeTensorInfo([i.length],"float32",i)}},IE=LT(bn,(e=>Math.log1p(e))),SE={kernelName:bn,backendName:"cpu",kernelFunc:IE},NE=bT(((e,t)=>e&&t)),TE=$T(xn,NE,null,"bool"),CE={kernelName:xn,backendName:"cpu",kernelFunc:TE},$E=LT(wn,(e=>e?0:1),"bool"),_E={kernelName:wn,backendName:"cpu",kernelFunc:$E},EE=bT(((e,t)=>e||t)),AE=$T(vn,EE,null,"bool"),FE={kernelName:vn,backendName:"cpu",kernelFunc:AE},RE={kernelName:In,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{depthRadius:s,bias:i,alpha:o,beta:u}=r;dT(a,"LRN");const l=a.shape[3],c=l-1,h=n.data.get(a.dataId).values,d=ca.sizeFromShape(a.shape),p=new Float32Array(d);function f(e){const t=e%l;let n=e-t+Math.max(0,t-s);const r=e-t+Math.min(t+s,c);let a=0;for(;n<=r;n++){const e=h[n];a+=e*e}return a}for(let e=0;e<d;e++){const t=f(e),n=h[e]*Math.pow(i+o*t,-u);p[e]=n}return n.makeTensorInfo(a.shape,a.dtype,p)}},DE={kernelName:Sn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,y:s,dy:i}=t,{depthRadius:o,bias:u,alpha:l,beta:c}=r;dT(i,"LRNGrad");const h=ca.sizeFromShape(i.shape),d=i.shape[3],p=n.data.get(i.dataId).values,f=n.data.get(a.dataId).values,m=n.data.get(s.dataId).values,g=new Float32Array(h),y=h;for(let e=0;e<y;e++){const t=e%d,n=e-t+Math.max(0,t-o),r=e-t+Math.min(d,t+o+1);let a=0;for(let e=n;e<r;e++)a+=Math.pow(f[e],2);a=l*a+u;for(let t=n;t<r;t++){let n=-2*l*c*f[t]*m[e]/a;e===t&&(n+=Math.pow(a,-c)),n*=p[e],g[t]+=n}}return n.makeTensorInfo(i.shape,a.dtype,g)}};function ME(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reductionIndices:s,keepDims:i}=r,o=n;let u=a.shape;const l=u.length,c=ca.parseAxisParam(s,u);let h=c;const d=Ap.getAxesPermutation(h,l);let p=o.data.get(a.dataId).values;if(null!=d){const e=new Array(l);for(let t=0;t<e.length;t++)e[t]=u[d[t]];p=MC(p,u,a.dtype,d,e),h=Ap.getInnerMostAxes(h.length,l),u=e}dT(a,"max"),Ap.assertAxesAreInnerMostDims("max",h,l);const[f,m]=Ap.computeOutAndReduceShapes(u,h),g=xC(p,ca.sizeFromShape(m),f,a.dtype),y=o.write(g,f,a.dtype);let b=f;return i&&(b=Ap.expandShapeToKeepDim(f,c)),{dataId:y,shape:b,dtype:a.dtype}}var OE={kernelName:Nn,backendName:"cpu",kernelFunc:ME},LE={kernelName:Cn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t;dT(a,"maxPool");const{filterSize:s,strides:i,pad:o,dimRoundingMode:u}=r;ca.assert(Ap.eitherStridesOrDilationsAreOne(i,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const l=Ap.computePool2DInfo(a.shape,s,i,1,o,u);let c;if(1===l.filterWidth&&1===l.filterHeight&&ca.arraysEqual(l.inShape,l.outShape))c=kT({inputs:{x:a},backend:n});else{const e=n.data.get(a.dataId).values,t=ca.computeStrides(a.shape),r=J$(e,a.shape,a.dtype,t,l,"max");c=n.makeTensorInfo(l.outShape,a.dtype,r.values)}return c}},zE={kernelName:_n,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:u,dataFormat:l}=r;dT(a,"maxPool3d");const c=Ap.computePool3DInfo(a.shape,s,i,1,o,u,l),h=e_(n.data.get(a.dataId).values,a.shape,a.dtype,ca.computeStrides(a.shape),c,"max");return n.makeTensorInfo(h.shape,"float32",h.values)}},PE={kernelName:En,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,{filterSize:i,strides:o,pad:u,dimRoundingMode:l}=r;dT([a,s],"maxPool3DGrad");const c=Ap.computePool3DInfo(s.shape,i,o,1,u,l),h=function(e,t){const n=xi(t.outShape,"int32"),r=t.strideDepth,a=t.strideHeight,s=t.strideWidth,i=t.dilationDepth,o=t.dilationHeight,u=t.dilationWidth,l=t.effectiveFilterDepth,c=t.effectiveFilterHeight,h=t.effectiveFilterWidth,d=t.padInfo.front,p=t.padInfo.top,f=t.padInfo.left;for(let m=0;m<t.batchSize;++m)for(let g=0;g<t.inChannels;++g)for(let y=0;y<t.outDepth;++y){const b=y*r-d;let x=b;for(;x<0;)x+=i;const w=Math.min(t.inDepth,l+b);for(let r=0;r<t.outHeight;++r){const l=r*a-p;let d=l;for(;d<0;)d+=o;const v=Math.min(t.inHeight,c+l);for(let a=0;a<t.outWidth;++a){const p=a*s-f;let k=p;for(;k<0;)k+=u;const I=Math.min(t.inWidth,h+p);let S=Number.NEGATIVE_INFINITY,N=-1;for(let t=x;t<w;t+=i){const n=t-b;for(let r=d;r<v;r+=o){const a=r-l;for(let s=k;s<I;s+=u){const i=s-p,o=e.get(m,t,r,s,g);o>=S&&(S=o,N=n*c*h+a*c+i)}}}n.set(N,m,y,r,a,g)}}}return n}(n.bufferSync(s),c),d=c.strideDepth,p=c.strideHeight,f=c.strideWidth,m=c.dilationDepth,g=c.dilationHeight,y=c.dilationWidth,b=c.effectiveFilterDepth,x=c.effectiveFilterHeight,w=c.effectiveFilterWidth,v=b-1-c.padInfo.front,k=w-1-c.padInfo.left,I=x-1-c.padInfo.top,S=xi(s.shape,"float32"),N=n.bufferSync(a);for(let e=0;e<c.batchSize;++e)for(let t=0;t<c.inChannels;++t)for(let n=0;n<c.inDepth;++n)for(let r=0;r<c.inHeight;++r)for(let a=0;a<c.inWidth;++a){const s=n-v,i=r-I,o=a-k;let u=0;for(let n=0;n<b;n+=m){const r=(s+n)/d;if(!(r<0||r>=c.outDepth||Math.floor(r)!==r))for(let a=0;a<x;a+=g){const s=(i+a)/p;if(!(s<0||s>=c.outHeight||Math.floor(s)!==s))for(let i=0;i<w;i+=y){const l=(o+i)/f;if(l<0||l>=c.outWidth||Math.floor(l)!==l)continue;const d=b*x*w-1-h.get(e,r,s,l,t)===n*x*w+a*w+i?1:0;0!==d&&(u+=N.get(e,r,s,l,t)*d)}}}S.set(u,e,n,r,a,t)}return n.makeTensorInfo(S.shape,S.dtype,S.values)}},BE={kernelName:$n,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s,output:i}=t,o=s;dT([s,i],"maxPoolGrad");const{filterSize:u,strides:l,pad:c,dimRoundingMode:h}=r,d=Ap.computePool2DInfo(o.shape,u,l,1,c,h),p=n.data.get(o.dataId).values,f=xi(d.outShape,o.dtype,Q$(p,o.shape,o.dtype,d).values),m=d.strideHeight,g=d.strideWidth,y=d.dilationHeight,b=d.dilationWidth,x=d.effectiveFilterHeight,w=d.effectiveFilterWidth,v=w-1-d.padInfo.left,k=x-1-d.padInfo.top,I=xi(o.shape,"float32"),S=n.data.get(a.dataId).values,N=xi(a.shape,"float32",S);for(let e=0;e<d.batchSize;++e)for(let t=0;t<d.inChannels;++t)for(let n=0;n<d.inHeight;++n)for(let r=0;r<d.inWidth;++r){const a=n-k,s=r-v;let i=0;for(let n=0;n<x;n+=y){const r=(a+n)/m;if(!(r<0||r>=d.outHeight||Math.floor(r)!==r))for(let a=0;a<w;a+=b){const o=(s+a)/g;if(o<0||o>=d.outWidth||Math.floor(o)!==o)continue;const u=x*w-1-f.get(e,r,o,t)===n*w+a?1:0;0!==u&&(i+=N.get(e,r,o,t)*u)}}I.set(i,e,n,r,t)}return n.makeTensorInfo(I.shape,I.dtype,I.values)}},WE={kernelName:An,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{filterSize:a,strides:s,pad:i,includeBatchInIndex:o}=t,u=n;dT(r,"MaxPoolWithArgmax");const l=u.data.get(r.dataId).values,c=Ap.computePool2DInfo(r.shape,a,s,[1,1],i),[h,d]=function(e,t,n,r,a){const s=J$(e,0,n,ca.computeStrides(t),a,"max"),i=Q$(e,t,n,a,!0,r);return[s.values,i.values]}(l,r.shape,r.dtype,o,c),p=u.write(h,c.outShape,r.dtype),f=u.write(d,c.outShape,r.dtype);return[{dataId:p,shape:c.outShape,dtype:r.dtype},{dataId:f,shape:c.outShape,dtype:"int32"}]}},VE={kernelName:Fn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=ca.parseAxisParam(s,a.shape),u=Ap.computeOutAndReduceShapes(a.shape,o)[1],l=ca.sizeFromShape(u),c=[],h=n.makeTensorInfo([],"float32",new Float32Array([l]));c.push(h);const d=TT({inputs:{x:a},backend:n,attrs:{dtype:"float32"}});c.push(d);const p=Q_({inputs:{a:d,b:h},backend:n});c.push(p);const f=z_({inputs:{x:p},backend:n,attrs:{axis:s,keepDims:i}});return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}},UE={kernelName:Rn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;dT(a,"min");const o=ca.parseAxisParam(s,a.shape);let u=o;const l=Ap.getAxesPermutation(u,a.shape.length);let c=a;null!=l&&(c=OC({inputs:{x:a},backend:n,attrs:{perm:l}}),u=Ap.getInnerMostAxes(u.length,a.shape.length)),Ap.assertAxesAreInnerMostDims("min",u,c.shape.length);const[h,d]=Ap.computeOutAndReduceShapes(c.shape,u),p=ca.sizeFromShape(d),f=ca.makeZerosTypedArray(ca.sizeFromShape(h),c.dtype),m=n.data.get(c.dataId).values;for(let e=0;e<f.length;++e){const t=e*p;let n=m[t];for(let e=0;e<p;++e){const r=m[t+e];(Number.isNaN(r)||r<n)&&(n=r)}f[e]=n}null!=l&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(h,c.dtype,f);if(i){const e=C$({inputs:{x:g},backend:n,attrs:{shape:Ap.expandShapeToKeepDim(h,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}},GE={kernelName:Mn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{paddings:s,mode:i}=r;dT(a,"mirrorPad");const o=s.map(((e,t)=>e[0]+a.shape[t]+e[1])),u=s.map((e=>e[0])),l=s.map(((e,t)=>e[0]+a.shape[t])),c="reflect"===i?0:1,h=n.data.get(a.dataId).values,d=a.shape.length,p=ca.computeStrides(a.shape),f=ca.sizeFromShape(o),m=o.length,g=ca.computeStrides(o),y=ca.getTypedArrayFromDType(a.dtype,f);for(let e=0;e<f;e++){let t=ca.indexToLoc(e,m,g);for(let e=0;e<m;e++)t[e]<u[e]?t[e]=2*u[e]-t[e]-c:t[e]>=l[e]&&(t[e]=2*(l[e]-1)-t[e]+c);t=t.map(((e,t)=>e-u[t]));const n=ca.locToIndex(t,d,p);y[e]=h[n]}return{dataId:n.write(y,o,a.dtype),shape:o,dtype:a.dtype}}},HE=bT(((e,t)=>{const n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t})),jE=$T(On,HE),qE={kernelName:On,backendName:"cpu",kernelFunc:jE},KE=b(_());function XE(e){const{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{dim:s}=r,i=a.shape.length;let o=s;if(-1===o&&(o=i-1),o!==i-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${i} and dim was ${o}`);const u=ca.parseAxisParam([o],a.shape),l=ME({inputs:{x:a},backend:n,attrs:{reductionIndices:u,keepDims:!1}}),c=Ap.expandShapeToKeepDim(l.shape,u),h=C$({inputs:{x:l},backend:n,attrs:{shape:c}}),d=i$({inputs:{a,b:h},backend:n}),p=qT({inputs:{x:d},backend:n}),f=z_({inputs:{x:p},backend:n,attrs:{axis:u,keepDims:!1}}),m=C$({inputs:{x:f},backend:n,attrs:{shape:c}}),g=Q_({inputs:{a:p,b:m},backend:n});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}var YE={kernelName:Sr,backendName:"cpu",kernelFunc:XE},ZE={kernelName:Ln,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{numSamples:s,seed:i,normalized:o}=r;dT(a,"multinomial");const u=o?a:XE({inputs:{logits:a},backend:n,attrs:{dim:-1}}),l=u.shape[0],c=u.shape[1],h=n.data.get(u.dataId).values,d=[l,s],p=ca.makeZerosTypedArray(ca.sizeFromShape(d),"int32");for(let e=0;e<l;++e){const t=e*c,n=new Float32Array(c-1);n[0]=h[t];for(let e=1;e<n.length;++e)n[e]=n[e-1]+h[t+e];const r=KE.alea(i.toString()),a=e*s;for(let e=0;e<s;++e){const t=r();p[a+e]=n.length;for(let r=0;r<n.length;r++)if(t<n[r]){p[a+e]=r;break}}}return o||n.disposeIntermediateTensorInfo(u),n.makeTensorInfo(d,"int32",p)}},JE=vf.nonMaxSuppressionV3Impl,QE={kernelName:Wn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u}=r;dT(a,"NonMaxSuppression");const l=n.data.get(a.dataId).values,c=n.data.get(s.dataId).values,{selectedIndices:h}=JE(l,c,i,o,u);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},eA=vf.nonMaxSuppressionV4Impl,tA={kernelName:Vn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,padToMaxOutputSize:l}=r;dT(a,"NonMaxSuppressionPadded");const c=n.data.get(a.dataId).values,h=n.data.get(s.dataId).values,{selectedIndices:d,validOutputs:p}=eA(c,h,i,o,u,l);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}},nA=vf.nonMaxSuppressionV5Impl,rA={kernelName:Un,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,softNmsSigma:l}=r;dT(a,"NonMaxSuppressionWithScore");const c=n.data.get(a.dataId).values,h=n.data.get(s.dataId).values,d=i,p=o,f=u,m=l,{selectedIndices:g,selectedScores:y}=nA(c,h,d,p,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}},aA={kernelName:Hn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:a}=t,{depth:s,onValue:i,offValue:o}=r;dT(a,"oneHot");const u=ca.sizeFromShape(a.shape),l=new Float32Array(u*s);l.fill(o);const c=n.data.get(a.dataId).values;for(let e=0;e<u;++e)c[e]>=0&&c[e]<s&&(l[e*s+c[e]]=i);return n.makeTensorInfo([...a.shape,s],"int32",l)}};function sA(e){const{inputs:t,backend:n}=e,{x:r}=t;if("string"===r.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===r.dtype){const e=ST({inputs:{input:r},backend:n}),t=sA({inputs:{x:e},backend:n}),a=h_({inputs:{input:r},backend:n}),s=sA({inputs:{x:a},backend:n}),i=xT({inputs:{real:t,imag:s},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),i}return sE({backend:n,attrs:{shape:r.shape,value:0,dtype:r.dtype}})}var iA={kernelName:jr,backendName:"cpu",kernelFunc:sA},oA={kernelName:Gn,backendName:"cpu",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:a}=n;if("string"===a.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===a.dtype){const t=ST({inputs:{input:a},backend:r}),n=e({inputs:{x:t},backend:r}),s=h_({inputs:{input:a},backend:r}),i=sA({inputs:{x:s},backend:r}),o=xT({inputs:{real:n,imag:i},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(i),o}return sE({backend:r,attrs:{shape:a.shape,value:1,dtype:a.dtype}})}};function uA(e){const{inputs:t,backend:n,attrs:r}=e,{axis:a}=r;if(1===t.length)return Y_({inputs:{input:t[0]},backend:n,attrs:{dim:a}});const s=t[0].shape,i=t[0].dtype;t.forEach((e=>{ca.assertShapesMatch(s,e.shape,"All tensors passed to stack must have matching shapes"),ca.assert(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const o=[],u=p_({inputs:t.map((e=>{const t=Y_({inputs:{input:e},backend:n,attrs:{dim:a}});return o.push(t),t})),backend:n,attrs:{axis:a}});return o.forEach((e=>n.disposeIntermediateTensorInfo(e))),u}var lA={kernelName:jn,backendName:"cpu",kernelFunc:uA},cA={kernelName:qn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{paddings:s,constantValue:i}=r;dT(a,"pad");const o=s.map(((e,t)=>e[0]+a.shape[t]+e[1])),u=s.map((e=>e[0])),l=n.data.get(a.dataId).values,c=ca.sizeFromShape(a.shape),h=a.shape.length,d=ca.computeStrides(a.shape),p=ca.sizeFromShape(o),f=o.length,m=ca.computeStrides(o),g=ca.getTypedArrayFromDType(a.dtype,p);0!==i&&g.fill(i);for(let e=0;e<c;e++){const t=ca.indexToLoc(e,h,d).map(((e,t)=>e+u[t]));g[ca.locToIndex(t,f,m)]=l[e]}return{dataId:n.write(g,o,a.dtype),shape:o,dtype:a.dtype}}},hA=bT(((e,t)=>Math.pow(e,t))),dA=$T(Xn,hA),pA={kernelName:Xn,backendName:"cpu",kernelFunc:dA},fA={kernelName:Jn,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:a,dtype:s,step:i}=n,o=BC(r,a,i,s);return t.makeTensorInfo([o.length],s,o)}},mA=LT(er,(e=>1/e)),gA={kernelName:er,backendName:"cpu",kernelFunc:mA},yA={kernelName:sr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r;dT(a,"resizeBilinear");const u=ca.computeStrides(a.shape),[l,c]=o,[h,d,p,f]=a.shape,m=n.data.get(a.dataId).values,g=new Float32Array(ca.sizeFromShape([h,l,c,f])),y=[s&&l>1?d-1:d,s&&c>1?p-1:p],b=[s&&l>1?l-1:l,s&&c>1?c-1:c];let x=0;const w=y[0]/b[0],v=y[1]/b[1];for(let e=0;e<h;e++)for(let t=0;t<l;t++){let n;n=i?w*(t+.5)-.5:w*t;const r=Math.max(0,Math.floor(n)),a=n-r,s=Math.min(d-1,Math.ceil(n)),o=e*u[0]+r*u[1],l=e*u[0]+s*u[1];for(let e=0;e<c;e++){let t;t=i?v*(e+.5)-.5:v*e;const n=Math.max(0,Math.floor(t)),r=t-n,s=Math.min(p-1,Math.ceil(t)),c=o+n*u[2],h=l+n*u[2],d=o+s*u[2],y=l+s*u[2];for(let e=0;e<f;e++){const t=m[c+e],n=m[h+e],s=t+(m[d+e]-t)*r,i=s+(n+(m[y+e]-n)*r-s)*a;g[x++]=i}}}return n.makeTensorInfo([h,l,c,f],"float32",g)}},bA={kernelName:ir,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r;dT([s,a],"resizeBilinearGrad");const o=ca.computeStrides(a.shape),[u,l,c,h]=a.shape,[,d,p]=s.shape,f=new Float32Array(u*l*c*h),m=[i&&d>1?l-1:l,i&&p>1?c-1:c],g=[i&&d>1?d-1:d,i&&p>1?p-1:p],y=m[0]/g[0],b=m[1]/g[1],x=n.data.get(s.dataId).values;let w=0;for(let e=0;e<u;e++){const t=e*o[0];for(let e=0;e<d;e++){const n=e*y,r=Math.floor(n),a=Math.min(Math.ceil(n),l-1),s=t+r*o[1],i=t+a*o[1],u=n-r,d=1-u;for(let e=0;e<p;e++){const t=e*b,n=Math.floor(t),r=Math.min(Math.ceil(t),c-1),a=t-n,l=1-a,p=s+n*o[2],m=s+r*o[2],g=i+n*o[2],y=i+r*o[2],v=d*l,k=d*a,I=u*l,S=u*a;for(let e=0;e<h;e++){const t=x[w++];f[p+e]+=t*v,f[m+e]+=t*k,f[g+e]+=t*I,f[y+e]+=t*S}}}}return n.makeTensorInfo([u,c,l,h],"float32",f)}},xA={kernelName:rr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r;dT(a,"resizeNearestNeighbor");const u=ca.computeStrides(a.shape),[l,c]=o,[h,d,p,f]=a.shape,m=n.data.get(a.dataId).values,g=new Float32Array(h*l*c*f),y=[s&&l>1?d-1:d,s&&c>1?p-1:p],b=[s&&l>1?l-1:l,s&&c>1?c-1:c],x=y[0]/b[0],w=y[1]/b[1];let v=0;for(let e=0;e<h;e++){const t=e*u[0];for(let e=0;e<l;e++){const n=i?x*(e+.5):x*e;let r=Math.min(d-1,s?Math.round(n):Math.floor(n));i&&(r=Math.max(0,r));const a=t+r*u[1];for(let e=0;e<c;e++){const t=i?w*(e+.5):w*e;let n=Math.min(p-1,s?Math.round(t):Math.floor(t));i&&(n=Math.max(0,n));const r=a+n*u[2];for(let e=0;e<f;e++){const t=m[r+e];g[v++]=t}}}}return n.makeTensorInfo([h,l,c,f],a.dtype,g)}},wA={kernelName:ar,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r;dT([s,a],"resizeNearestNeighborGrad");const o=ca.computeStrides(a.shape),u=ca.computeStrides(s.shape),[l,c,h,d]=a.shape,[,p,f]=s.shape,m=new Float32Array(l*c*h*d),g=n.data.get(s.dataId).values,y=[i&&p>1?c-1:c,i&&f>1?h-1:h],b=[i&&p>1?p-1:p,i&&f>1?f-1:f],x=y[0]/b[0],w=y[1]/b[1],v=1/x,k=1/w,I=2*Math.ceil(v)+2,S=2*Math.ceil(k)+2;for(let e=0;e<l;e++){const t=e*o[0];for(let e=0;e<c;e++){const n=t+e*o[1],r=Math.floor(e*v),a=Math.floor(r-I/2);for(let r=0;r<h;r++){const s=n+r*o[2],l=Math.floor(r*k),y=Math.floor(l-S/2);for(let n=0;n<d;n++){let o=0;for(let s=0;s<I;s++){const l=s+a;if(l<0||l>=p)continue;const d=t+l*u[1],m=l*x;if(e===Math.min(c-1,i?Math.round(m):Math.floor(m)))for(let e=0;e<S;e++){const t=e+y;if(t<0||t>=f)continue;const a=d+t*u[2],s=t*w;r===Math.min(h-1,i?Math.round(s):Math.floor(s))&&(o+=g[a+n])}}m[s+n]=o}}}}return n.makeTensorInfo(a.shape,a.dtype,m)}},vA={kernelName:ur,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dims:s}=r;dT(a,"reverse");const i=a.shape.length,o=ca.parseAxisParam(s,a.shape);if(0===i)return kT({inputs:{x:a},backend:n});const u=new La(a.shape,a.dtype),l=n.bufferSync(a);for(let e=0;e<u.size;e++){const t=u.indexToLoc(e),n=t.slice();o.forEach((e=>n[e]=a.shape[e]-1-n[e])),u.set(l.get(...n),...t)}return n.makeTensorInfo(u.shape,u.dtype,u.values)}},kA={kernelName:Xr,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,{radians:a,fillValue:s,center:i}=t,o=n,u=ca.getTypedArrayFromDType(r.dtype,ca.sizeFromShape(r.shape)),[l,c,h,d]=r.shape,[p,f]=Ap.getImageCenter(i,c,h),m=Math.sin(a),g=Math.cos(a),y=o.data.get(r.dataId).values;for(let e=0;e<l;e++){const t=e*h*c*d;for(let e=0;e<c;e++){const n=e*(h*d);for(let r=0;r<h;r++){const a=r*d;for(let i=0;i<d;i++){const o=[l,e,r,i],b=o[2],x=o[1];let w=(b-p)*g-(x-f)*m,v=(b-p)*m+(x-f)*g;w=Math.round(w+p),v=Math.round(v+f);let k=s;"number"!=typeof s&&(k=3===i?255:s[i]),w>=0&&w<h&&v>=0&&v<c&&(k=y[t+v*(h*d)+w*d+i]),u[t+n+a+i]=k}}}}return{dataId:o.write(u,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},IA=LT(lr,(e=>{const t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2==0?t:t+1})),SA={kernelName:lr,backendName:"cpu",kernelFunc:IA};function NA(e,t,n,r,a,s,i,o,u,l){const c=[r/a,a],h=e.values,d=t.values;if(0===r)return xi(n,t.dtype);const p=xi(c,t.dtype);p.values.fill(u);for(let e=0;e<s;e++){const s=[];let u=0;for(let t=0;t<i;t++){const n=h[e*i+t];s.push(n),u+=n*o[t]}if(u<0||u>=r/a)throw new Error(`Invalid indices: ${s} does not index into ${n}`);for(let n=0;n<a;n++)l?p.values[u*a+n]+=d[e*a+n]:p.values[u*a+n]=0===t.rank?d[0]:d[e*a+n]}return p}var TA={kernelName:hr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:a,updates:s}=t,{shape:i}=r,{sliceRank:o,numUpdates:u,sliceSize:l,strides:c,outputSize:h}=Ap.calculateShapes(s,a,i),d=NA(n.bufferSync(a),n.bufferSync(s),i,h,l,u,o,c,0,!0);return n.makeTensorInfo(i,d.dtype,d.values)}},CA={kernelName:dr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:a,e:s}=t;dT([r,a,s],"select");const i=r.shape.length,o=n.data.get(r.dataId).values,u=n.data.get(a.dataId).values,l=n.data.get(s.dataId).values,c=ts(a.dtype,s.dtype),h=ca.makeZerosTypedArray(ca.sizeFromShape(a.shape),c);let d=0;const p=0===i||i>1||1===a.shape.length?1:ca.sizeFromShape(a.shape.slice(1));for(let e=0;e<o.length;e++)for(let t=0;t<p;t++)1===o[e]?h[d++]=u[e]:h[d++]=l[e];return n.makeTensorInfo(a.shape,c,h)}},$A=Ap.SELU_SCALEALPHA,_A=Ap.SELU_SCALE,EA=LT(pr,(e=>e>=0?_A*e:$A*(Math.exp(e)-1))),AA={kernelName:pr,backendName:"cpu",kernelFunc:EA},FA=LT(yr,(e=>e<0?-1:e>0?1:0)),RA={kernelName:yr,backendName:"cpu",kernelFunc:FA},DA=LT(mr,(e=>Math.sin(e))),MA={kernelName:mr,backendName:"cpu",kernelFunc:DA},OA=LT(gr,(e=>Math.sinh(e))),LA={kernelName:gr,backendName:"cpu",kernelFunc:OA},zA=Math.log(1.1920928955078125e-7)+2,PA=LT(xr,(e=>{const t=e>-zA,n=e<zA,r=Math.exp(e);let a;return a=n?r:t?e:Math.log(1+r),a})),BA={kernelName:xr,backendName:"cpu",kernelFunc:PA},WA={kernelName:kr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,paddings:i}=r;dT([a],"spaceToBatchND");const o=ca.sizeFromShape(s),u=[[0,0]];u.push(...i);for(let e=1+s.length;e<a.shape.length;++e)u.push([0,0]);const l=cA.kernelFunc({inputs:{x:a},backend:n,attrs:{paddings:u,constantValue:0}}),c=Ap.getReshaped(l.shape,s,o,!1),h=Ap.getPermuted(c.length,s.length,!1),d=Ap.getReshapedPermuted(l.shape,s,o,!1),p=C$({inputs:{x:l},backend:n,attrs:{shape:c}}),f=OC({inputs:{x:p},backend:n,attrs:{perm:h}}),m=C$({inputs:{x:f},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),m}},VA={kernelName:Nr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:r,values:a,denseShape:s,defaultValue:i}=t;if(1!==s.shape.length)throw new Error(`Dense shape must be a vector, saw:\n        ${s.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n        ${r.shape}`);if(1!==a.shape.length)throw new Error(`Values must be a vector, saw:\n        ${a.shape}`);if(0!==i.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${i.shape}`);const o=n.data.get(r.dataId).values,u=n.data.get(a.dataId).values,l=n.data.get(s.dataId).values,c=n.data.get(i.dataId).values[0],[h,d,p,f,m]=qC(o,r.shape,r.dtype,u,a.dtype,l,c);return[n.makeTensorInfo(d,r.dtype,h),n.makeTensorInfo([d[0]],a.dtype,p),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}},UA={kernelName:Tr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:r,inputShape:a,newShape:s}=t;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape\n        ${r.shape}`);if(1!==a.shape.length)throw new Error(`Input shape should be a vector but received shape\n        ${a.shape}`);if(1!==s.shape.length)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);const i=Array.from(n.data.get(a.dataId).values),o=n.data.get(r.dataId).values,u=Array.from(n.data.get(s.dataId).values),[l,c,h]=KC(o,r.shape,r.dtype,i,u);return[n.makeTensorInfo(c,r.dtype,l),n.makeTensorInfo([h.length],s.dtype,new Int32Array(h))]}},GA={kernelName:Cr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error(`Indices should be a vector but received shape\n          ${a.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n          ${s.shape}`);const i=n.data.get(r.dataId).values,o=n.data.get(a.dataId).values,u=n.data.get(s.dataId).values,[l,c]=XC(i,r.shape,r.dtype,o,u,!0);return n.makeTensorInfo(c,r.dtype,l)}},HA={kernelName:$r,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error(`Indices should be a vector but received shape\n         ${a.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n         ${s.shape}`);const i=n.data.get(r.dataId).values,o=n.data.get(a.dataId).values,u=n.data.get(s.dataId).values,[l,c]=XC(i,r.shape,r.dtype,o,u);return n.makeTensorInfo(c,r.dtype,l)}},jA={kernelName:_r,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sparseIndices:a,sparseValues:s,defaultValue:i}=t,{outputShape:o}=r,{sliceRank:u,numUpdates:l,sliceSize:c,strides:h,outputSize:d}=Ap.calculateShapes(s,a,o),p=NA(n.bufferSync(a),n.bufferSync(s),o,d,c,l,u,h,n.data.get(i.dataId).values[0],!1);return n.makeTensorInfo(o,p.dtype,p.values)}},qA={kernelName:Ir,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{numOrSizeSplits:s,axis:i}=r,o=ca.parseAxisParam(i,a.shape)[0],u=Ap.prepareSplitSize(a,s,o),l=new Array(a.shape.length).fill(0),c=a.shape.slice();return u.map((e=>{const t=[...c];t[o]=e;const r=HC({inputs:{x:a},backend:n,attrs:{begin:l,size:t}});return l[o]+=e,r}))}},KA=LT(wr,(e=>Math.sqrt(e))),XA={kernelName:wr,backendName:"cpu",kernelFunc:KA},YA={kernelName:Ar,backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{const{x:n}=e,r=t;dT(n,"square");const a=r.data.get(n.dataId).values,s=new Float32Array(a.length);for(let e=0;e<a.length;++e){const t=a[e];s[e]=t*t}return{dataId:r.write(s,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},ZA=LT(qr,((e,t)=>{const n=t;return isNaN(e)?NaN:e>0?1:n.alpha})),JA={kernelName:qr,backendName:"cpu",kernelFunc:ZA},QA={kernelName:Fr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:s,end:i,strides:o,beginMask:u,endMask:l,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:d}=r;dT(a,"stridedSlice");const{nonStrided:p,$begin:f,$strides:m,size:g,newShape:y,outShape:b}=ro.sliceInfo(a.shape,s,i,o,u,l,c,h,d),x=C$({inputs:{x:a},backend:n,attrs:{shape:y}});let w;if(p){const e=HC({inputs:{x},backend:n,attrs:{begin:f,size:g}});w=C$({inputs:{x:e},backend:n,attrs:{shape:b}}),n.disposeIntermediateTensorInfo(e)}else if(b.some((e=>0===e)))w=n.makeTensorInfo(b,a.dtype,[]);else{const e=QC(b,n.bufferSync(x),m,f);w=n.makeTensorInfo(e.shape,e.dtype,e.values)}const v=C$({inputs:{x:w},backend:n,attrs:{shape:b}});return n.disposeIntermediateTensorInfo(x),n.disposeIntermediateTensorInfo(w),v}},eF={kernelName:Rr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{separator:a,nGramWidths:s,leftPad:i,rightPad:o,padWidth:u,preserveShortSequences:l}=r,{data:c,dataSplits:h}=t,d=n.data.get(c.dataId).values,p=n.data.get(h.dataId).values,[f,m]=e$(d,p,a,s,i,o,u,l);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",m)]}},tF={kernelName:Dr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{skipEmpty:a}=r,{input:s,delimiter:i}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(1!==s.shape.length)throw new Error(`Input must be a vector, got shape: ${s.shape}`);if(0!==i.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);const o=n.data.get(s.dataId).values,u=n.data.get(i.dataId).values[0],[l,c,h]=n$(o,u,a),d=c.length;return[n.makeTensorInfo([d,2],"int32",l),n.makeTensorInfo([d],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(h))]}},nF={kernelName:Mr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{numBuckets:a}=r,{input:s}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(a<=0)throw new Error("Number of buckets must be at least 1");const i=r$(n.data.get(s.dataId).values,a);return n.makeTensorInfo(s.shape,"int32",i)}},rF=LT(Lr,(e=>Math.tan(e))),aF={kernelName:Lr,backendName:"cpu",kernelFunc:rF},sF=LT(zr,(e=>Math.tanh(e)));function iF(e,t,n){switch(n){case"reflect":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=2*t;n<e&&(n=e*Math.trunc(-n/e)+n),n=n<-t?n+e:-n-1}else if(n>t-1)if(t<=1)n=0;else{const e=2*t;n-=e*Math.trunc(n/e),n>=t&&(n=e-n-1)}return ca.clamp(0,n,t-1)}(e,t);case"wrap":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=t-1;n+=t*(Math.trunc(-n/e)+1)}else if(n>t-1)if(t<=1)n=0;else{const e=t-1;n-=t*Math.trunc(n/e)}return ca.clamp(0,n,t-1)}(e,t);case"nearest":return function(e,t){return ca.clamp(0,e,t-1)}(e,t);case"constant":default:return function(e,t){return e}(e)}}function oF(e,t,n,r,a,s,i,o,u,l,c){return 0<=o&&o<t&&0<=u&&u<n?e[i*r+o*a+u*s+l]:c}function uF(e,t,n,r,a,s,i,o,u,l,c){return oF(e,t,n,r,a,s,i,Math.round(o),Math.round(u),l,c)}function lF(e,t,n,r,a,s,i,o,u,l,c){const h=Math.floor(o),d=Math.floor(u),p=h+1,f=d+1;return(p-o)*((f-u)*oF(e,t,n,r,a,s,i,h,d,l,c)+(u-d)*oF(e,t,n,r,a,s,i,h,f,l,c))+(o-h)*((f-u)*oF(e,t,n,r,a,s,i,p,d,l,c)+(u-d)*oF(e,t,n,r,a,s,i,p,f,l,c))}var cF=[A$,yT,R$,M$,RT,O$,L$,z$,P$,B$,V$,G$,j$,X$,Z$,t_,n_,r_,a_,E$,s_,i_,o_,CT,WT,l_,wT,c_,f_,y_,b_,g_,w_,v_,x_,I_,N_,T_,C_,$_,__,A_,F_,R_,D_,M_,L_,O_,eE,B_,f$,W_,HT,X_,KT,Z_,ZT,aE,iE,oE,eC,cE,hE,dE,pE,fE,sC,uC,IT,mE,d_,yE,xE,vE,g$,hC,fC,kE,bC,SE,CE,_E,FE,RE,DE,kC,LE,zE,PE,BE,WE,OE,VE,UE,NC,GE,qE,ZE,_C,AC,QE,tA,rA,DC,aA,oA,lA,cA,pA,x$,PC,fA,NT,gA,v$,I$,$$,yA,bA,xA,wA,vA,kA,SA,UC,TA,CA,AA,N$,RA,MA,LA,jC,YE,BA,WA,VA,UA,GA,HA,jA,qA,XA,YA,JC,JA,QA,eF,tF,nF,o$,P_,aF,{kernelName:zr,backendName:"cpu",kernelFunc:sF},{kernelName:Pr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reps:s}=r;dT(a,"tile");const i=u$(n.bufferSync(a),s);return n.makeTensorInfo(i.shape,i.dtype,i.values)}},{kernelName:Br,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{k:s,sorted:i}=r;dT(a,"topk");const o=n.data.get(a.dataId).values,[u,l]=h$(o,a.shape,a.dtype,s,i);return[n.makeTensorInfo(u.shape,u.dtype,u.values),n.makeTensorInfo(l.shape,l.dtype,l.values)]}},LC,{kernelName:Wr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{image:a,transforms:s}=t,{interpolation:i,fillMode:o,fillValue:u,outputShape:l}=n,[c,h,d,p]=a.shape,[f,m]=null!=l?l:[h,d],g=[c,f,m,p],y=ca.computeStrides(a.shape),b=y[0],x=y[1],w=y[2],v=ca.getTypedArrayFromDType(a.dtype,ca.sizeFromShape(g));v.fill(u);const k=r.data.get(a.dataId).values,I=r.data.get(s.dataId).values;for(let e=0;e<c;++e){const t=1===s.shape[0]?I:I.subarray(8*e,8*e+8);for(let n=0;n<f;++n)for(let r=0;r<m;++r)for(let a=0;a<p;++a){let s;const l=t[6]*r+t[7]*n+1;if(0===l)continue;const c=(t[0]*r+t[1]*n+t[2])/l,p=(t[3]*r+t[4]*n+t[5])/l,f=iF(c,d,o),m=iF(p,h,o);switch(i){case"nearest":s=uF(k,h,d,b,x,w,e,m,f,a,u);break;case"bilinear":s=lF(k,h,d,b,x,w,e,m,f,a,u);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${i}`)}v[e*b+n*x+r*w+a]=s}return r.makeTensorInfo(g,a.dtype,v)}return{dataId:r.write(v,g,a.dtype),shape:a.shape,dtype:a.dtype}}},{kernelName:Ur,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:a}=n,{x:s}=t;dT(s,"unique");const i=r.data.get(s.dataId).values,{outputValues:o,outputShape:u,indices:l}=d$(i,a,s.shape,s.dtype);return[r.makeTensorInfo(u,s.dtype,o),r.makeTensorInfo([l.length],"int32",l)]}},{kernelName:Gr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:a}=t;let{axis:s}=r;s<0&&(s+=a.shape.length);const i=a.shape.length,o=a.shape[s],u=new Array(i-1);let l=0;for(let e=0;e<i;e++)e!==s&&(u[l++]=a.shape[e]);const c=new Array(i).fill(0),h=a.shape.slice();h[s]=1;const d=new Array(o);for(let e=0;e<d.length;e++){c[s]=e;const t=HC({inputs:{x:a},backend:n,attrs:{begin:c,size:h}});d[e]=C$({inputs:{x:t},backend:n,attrs:{shape:u}}),n.disposeIntermediateTensorInfo(t)}return d}},{kernelName:Hr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,segmentIds:s}=t,{numSegments:i}=r;dT(a,"unsortedSegmentSum");const o=[],u=[],l=a.shape.length-s.shape.length;let c=s;for(let e=0;e<l;++e){const t=Y_({inputs:{input:c},backend:n,attrs:{dim:e+1}});c=t,u.push(t)}for(let e=0;e<i;++e){const t=ca.createScalarValue(e,"int32"),r=n.makeTensorInfo([],"int32",t),s=GT({inputs:{a:r,b:c},backend:n}),i=TT({inputs:{x:s},backend:n,attrs:{dtype:"float32"}}),l=$C({inputs:{a:i,b:a},backend:n}),h=z_({inputs:{x:l},backend:n,attrs:{axis:0,keepDims:!1}});o.push(h),u.push(r),u.push(s),u.push(i),u.push(l),u.push(h)}const h=uA({inputs:o,backend:n,attrs:{axis:0}});return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),h}},iA];for(const e of cF)aa(e);var hF,dF,pF,fF,mF,gF,yF={},bF={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function xF(e){if(!(e in yF)){const t=function(e){if(1!==e&&2!==e)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const t=function(e){if("undefined"!=typeof OffscreenCanvas&&2===e)return new OffscreenCanvas(300,150);if("undefined"!=typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}(e);return t.addEventListener("webglcontextlost",(t=>{t.preventDefault(),delete yF[e]}),!1),1===e?t.getContext("webgl",bF)||t.getContext("experimental-webgl",bF):t.getContext("webgl2",bF)}(e);if(null===t)return console.log("Could not get context for WebGL version",e),null;yF[e]=t}const t=yF[e];return t.isContextLost()?(delete yF[e],xF(e)):(t.disable(t.DEPTH_TEST),t.disable(t.STENCIL_TEST),t.disable(t.BLEND),t.disable(t.DITHER),t.disable(t.POLYGON_OFFSET_FILL),t.disable(t.SAMPLE_COVERAGE),t.enable(t.SCISSOR_TEST),t.enable(t.CULL_FACE),t.cullFace(t.BACK),yF[e])}function wF(e,t){return[t,e]}function vF(e){const t=ca.sizeFromShape(e),n=Math.ceil(t/4);return ca.sizeToSquarishShape(n)}function kF(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function IF(e,t){const n=e;let r,a,s,i,o,u,l,c,h,d;return 2===Ue().getNumber("WEBGL_VERSION")?(r=n.R32F,a=n.R16F,s=n.RGBA16F,i=n.RGBA32F,o=n.RED,l=4,c=1,h=n.HALF_FLOAT,d=n.FLOAT):(r=e.RGBA,a=e.RGBA,s=e.RGBA,i=n.RGBA,o=e.RGBA,l=4,c=4,h=null!=t?t.HALF_FLOAT_OES:null,d=e.FLOAT),u=e.RGBA,{internalFormatFloat:r,internalFormatHalfFloat:a,internalFormatPackedHalfFloat:s,internalFormatPackedFloat:i,textureFormatFloat:o,downloadTextureFormat:u,downloadUnpackNumChannels:l,defaultNumChannels:c,textureTypeHalfFloat:h,textureTypeFloat:d}}function SF(e,t){const n=t();return Ue().getBool("DEBUG")&&function(e){const t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+function(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}(e,t))}(e),n}function NF(e){return!!(Ue().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||5.96e-8<Math.abs(e)&&Math.abs(e)<65504)}function TF(e,t){return MF(e,(()=>e.getExtension(t)),'Extension "'+t+'" not supported on this browser.')}(dF=hF||(hF={}))[dF.DENSE=0]="DENSE",dF[dF.SHARED_BATCH=1]="SHARED_BATCH",(fF=pF||(pF={}))[fF.RENDER=0]="RENDER",fF[fF.UPLOAD=1]="UPLOAD",fF[fF.PIXELS=2]="PIXELS",fF[fF.DOWNLOAD=3]="DOWNLOAD",(gF=mF||(mF={}))[gF.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",gF[gF.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",gF[gF.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",gF[gF.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",gF[gF.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16";var CF,$F,_F=/ERROR: [0-9]+:([0-9]+):/g;function EF(e,t){if(SF(e,(()=>e.validateProgram(t))),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function AF(e,t,n,r,a,s,i){const o=e.getAttribLocation(t,n);return-1!==o&&(SF(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,r))),SF(e,(()=>e.vertexAttribPointer(o,a,e.FLOAT,!1,s,i))),SF(e,(()=>e.enableVertexAttribArray(o))),!0)}function FF(e,t,n){SF(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,n))),SF(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0)))}function RF(e,t){SF(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,t))),SF(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0)))}function DF(e){const t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+function(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}(e,t))}function MF(e,t,n){const r=SF(e,(()=>t()));if(null==r)throw new Error(n);return r}function OF(e,t=2){return ca.sizeFromShape(e.slice(0,e.length-t))}function LF(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function zF(e){let t=[1,1,1];return 0===e.length||1===e.length&&1===e[0]||(t=[OF(e),...LF(e)]),t}function PF(e){return e%2==0}function BF(e,t){if(e=e.slice(-2),t=t.slice(-2),ca.arraysEqual(e,t))return!0;if(!e.length||!t.length)return!0;if(0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){const n=e.slice(-1)[0],r=t.slice(-1)[0];if(n===r)return!0;if(PF(n)&&PF(r)&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&PF(e[0])&&PF(t[0])}function WF(e,t){return null!=e.getExtension(t)}function VF(e){try{if(null!=xF(e))return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function UF(e){const t=IF(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n),e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);const r=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,r),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);const a=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(r),a}function GF(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&ca.assert("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the WebGL backend.`))}))}var HF=Ue();function jF(){let e,t,n,r,a,s,i,o,u,l;return 2===Ue().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",n="out",r="in",a="texture",s="outputColor",i="out vec4 outputColor;",o="\n      bool isnan_custom(float val) {\n        return (val > 0.0 || val < 0.0) ? false : val != 0.0;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ",u="",l="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(e="",t="attribute",n="varying",r="varying",a="texture2D",s="gl_FragColor",i="",o="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",u="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",l="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:e,attribute:t,varyingVs:n,varyingFs:r,texture2D:a,output:s,defineOutput:i,defineSpecialNaN:o,defineSpecialInf:u,defineRound:l}}function qF(e,t,n="index"){const r=ca.computeStrides(t);return r.map(((t,a)=>`int ${e[a]} = ${n} / ${t}; ${a===r.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * ${t}`:`index -= ${e[a]} * ${t}`};`)).join("")}function KF(e,t,n="index"){const r=ca.computeStrides(t);return r.map(((t,a)=>`int ${e[a]} = ${n} / outShapeStrides[${a}]; ${a===r.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * outShapeStrides[${a}]`:`index -= ${e[a]} * outShapeStrides[${a}]`};`)).join("")}function XF(e){const t=ca.computeStrides(e).map((e=>e.toString()));return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;\n  }\n`}HF.registerFlag("HAS_WEBGL",(()=>HF.getNumber("WEBGL_VERSION")>0)),HF.registerFlag("WEBGL_VERSION",(()=>VF(2)?2:VF(1)?1:0)),HF.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",(()=>!1)),HF.registerFlag("WEBGL_BUFFER_SUPPORTED",(()=>2===HF.get("WEBGL_VERSION"))),HF.registerFlag("WEBGL_CPU_FORWARD",(()=>!0)),HF.registerFlag("WEBGL_FORCE_F16_TEXTURES",(()=>!1)),HF.registerFlag("WEBGL_PACK",(()=>HF.getBool("HAS_WEBGL"))),HF.registerFlag("WEBGL_PACK_NORMALIZATION",(()=>HF.getBool("WEBGL_PACK"))),HF.registerFlag("WEBGL_PACK_CLIP",(()=>HF.getBool("WEBGL_PACK"))),HF.registerFlag("WEBGL_PACK_DEPTHWISECONV",(()=>HF.getBool("WEBGL_PACK"))),HF.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(()=>HF.getBool("WEBGL_PACK"))),HF.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(()=>HF.getBool("WEBGL_PACK"))),HF.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(()=>HF.getBool("WEBGL_PACK"))),HF.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(()=>HF.getBool("WEBGL_PACK"))),HF.registerFlag("WEBGL_PACK_REDUCE",(()=>HF.getBool("WEBGL_PACK"))),HF.registerFlag("WEBGL_LAZILY_UNPACK",(()=>HF.getBool("WEBGL_PACK"))),HF.registerFlag("WEBGL_CONV_IM2COL",(()=>HF.getBool("WEBGL_PACK"))),HF.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(()=>function(e){if(null==CF){const t=xF(e);CF=t.getParameter(t.MAX_TEXTURE_SIZE)}return CF}(HF.getNumber("WEBGL_VERSION")))),HF.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(()=>function(e){if(null==$F){const t=xF(e);$F=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,$F)}(HF.getNumber("WEBGL_VERSION")))),HF.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(()=>{const e=HF.getNumber("WEBGL_VERSION");return 0===e?0:function(e){if(0===e)return 0;let t;const n=xF(e);return t=WF(n,"EXT_disjoint_timer_query_webgl2")&&2===e?2:WF(n,"EXT_disjoint_timer_query")?1:0,t}(e)})),HF.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(()=>HF.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!fs.isMobile())),HF.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(()=>function(e){if(0===e)return!1;const t=xF(e);if(1===e){if(!WF(t,"OES_texture_float"))return!1}else if(!WF(t,"EXT_color_buffer_float"))return!1;return UF(t)}(HF.getNumber("WEBGL_VERSION")))),HF.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(()=>!HF.getBool("WEBGL_FORCE_F16_TEXTURES")&&HF.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))),HF.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(()=>function(e){if(0===e)return!1;const t=xF(e);if(1!==e){if(WF(t,"EXT_color_buffer_float"))return UF(t);const e="EXT_color_buffer_half_float";if(WF(t,e)){const n=t.getExtension(e);return function(e,t){const n=IF(e,t),r=e.createTexture();e.bindTexture(e.TEXTURE_2D,r),e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,1,1,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const a=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,a),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,r,0);const s=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(r),e.deleteFramebuffer(a),s}(t,n)}return!1}return!!WF(t,"OES_texture_float")&&!!WF(t,"WEBGL_color_buffer_float")&&UF(t)}(HF.getNumber("WEBGL_VERSION")))),HF.registerFlag("WEBGL_FENCE_API_ENABLED",(()=>{return 2===(e=HF.getNumber("WEBGL_VERSION"))&&null!=xF(e).fenceSync;var e})),HF.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(()=>HF.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0)),HF.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",(()=>-1),(e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)})),HF.registerFlag("WEBGL_FLUSH_THRESHOLD",(()=>fs.isMobile()&&HF.getBool("IS_CHROME")?1:-1),(e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)})),HF.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",(()=>128)),HF.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",(()=>!1)),HF.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",(()=>1e5)),HF.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",(()=>128));var YF="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n";function ZF(e,t,n,r,a,s){!function(e,t){const n=Ue().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0)throw new Error(`Requested texture size [${e}x${t}] is invalid.`);if(e>n||t>n)throw new Error(`Requested texture size [${e}x${t}] greater than WebGL maximum on this browser / GPU [${n}x${n}].`)}(t,n);const i=function(e){return MF(e,(()=>e.createTexture()),"Unable to create WebGLTexture.")}(e),o=e.TEXTURE_2D;return SF(e,(()=>e.bindTexture(o,i))),SF(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE))),SF(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE))),SF(e,(()=>e.texParameteri(o,e.TEXTURE_MIN_FILTER,e.NEAREST))),SF(e,(()=>e.texParameteri(o,e.TEXTURE_MAG_FILTER,e.NEAREST))),SF(e,(()=>e.texImage2D(o,0,r,t,n,0,a,s,null))),SF(e,(()=>e.bindTexture(e.TEXTURE_2D,null))),i}function JF(e){return e.internalFormatFloat}function QF(e){return e.internalFormatHalfFloat}function eR(e){return e.downloadTextureFormat}function tR(e){return e.internalFormatPackedFloat}function nR(e){return e.internalFormatPackedHalfFloat}var{getBroadcastDims:rR}=Ap;function aR(e,t,n){const r=[];if(e.forEach((e=>{const t=ca.sizeFromShape(e.shapeInfo.logicalShape);if(e.shapeInfo.isUniform?r.push(`uniform float ${e.name}${t>1?`[${t}]`:""};`):(r.push(`uniform sampler2D ${e.name};`),r.push(`uniform int offset${e.name};`)),n.enableShapeUniforms){const{uniformShape:t}=fR(n.packedInputs,e.shapeInfo.logicalShape,e.shapeInfo.texShape);switch(t.length){case 1:r.push(`uniform int ${e.name}Shape;`);break;case 2:r.push(`uniform ivec2 ${e.name}Shape;`);break;case 3:r.push(`uniform ivec3 ${e.name}Shape;`);break;case 4:r.push(`uniform ivec4 ${e.name}Shape;`)}r.push(`uniform ivec2 ${e.name}TexShape;`)}})),n.enableShapeUniforms){switch(t.logicalShape.length){case 1:r.push("uniform int outShape;");break;case 2:r.push("uniform ivec2 outShape;"),r.push("uniform int outShapeStrides;");break;case 3:r.push("uniform ivec3 outShape;"),r.push("uniform ivec2 outShapeStrides;");break;case 4:r.push("uniform ivec4 outShape;"),r.push("uniform ivec3 outShapeStrides;")}r.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach((e=>{r.push(`uniform ${e.type} ${e.name}${e.arrayIndex?`[${e.arrayIndex}]`:""};`)}));const a=r.join("\n"),s=e.map((e=>function(e,t,n=!1,r){let a="";a+=n?iR(e,r):sR(e,r);const s=e.shapeInfo.logicalShape,i=t.logicalShape;return s.length<=i.length&&(a+=n?function(e,t){const n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),a="get"+r+"AtOutCoords",s=e.shapeInfo.logicalShape.length,i=t.logicalShape.length,o=rR(e.shapeInfo.logicalShape,t.logicalShape),u=pR(i),l=i-s;let c;const h=["x","y","z","w","u","v"];c=0===s?"":i<2&&o.length>=1?"coords = 0;":o.map((e=>`coords.${h[e+l]} = 0;`)).join("\n");let d="";d=i<2&&s>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${h[t+l]}`)).join(", ");let p="return outputValue;";const f=1===ca.sizeFromShape(e.shapeInfo.logicalShape),m=1===ca.sizeFromShape(t.logicalShape);if(1!==s||f||m){if(f&&!m)p=1===i?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(o.length){const e=s-2,t=s-1;o.indexOf(e)>-1&&o.indexOf(t)>-1?p="return vec4(outputValue.x);":o.indexOf(e)>-1?p="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":o.indexOf(t)>-1&&(p="return vec4(outputValue.xx, outputValue.zz);")}}else p="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${a}() {\n      ${u} coords = getOutputCoords();\n      ${c}\n      vec4 outputValue = get${r}(${d});\n      ${p}\n    }\n  `}(e,t):function(e,t){const n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),a="get"+r+"AtOutCoords",s=t.texShape,i=e.shapeInfo.texShape,o=e.shapeInfo.logicalShape.length,u=t.logicalShape.length;if(!e.shapeInfo.isUniform&&o===u&&null==e.shapeInfo.flatOffset&&ca.arraysEqual(i,s))return`\n      float ${a}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;const l=pR(u),c=rR(e.shapeInfo.logicalShape,t.logicalShape),h=u-o;let d;const p=["x","y","z","w","u","v"];d=0===o?"":u<2&&c.length>=1?"coords = 0;":c.map((e=>`coords.${p[e+h]} = 0;`)).join("\n");let f="";return f=u<2&&o>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${p[t+h]}`)).join(", "),`\n    float ${a}() {\n      ${l} coords = getOutputCoords();\n      ${d}\n      return get${r}(${f});\n    }\n  `}(e,t)),a}(e,t,n.packedInputs,n.enableShapeUniforms))).join("\n"),i=t.texShape,o=jF(),u=function(e){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${e.texture2D}(textureSampler, uv).r;\n    }\n  `}(o);let l,c,h=function(e){return`${e.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${e.varyingFs} vec2 resultUV;\n    ${e.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${e.defineSpecialNaN}\n    ${e.defineSpecialInf}\n    ${e.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${oR}\n    ${uR}\n    ${lR}\n  `}(o);return t.isPacked?(l=function(e,t,n){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t,n){const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return 1===r[0]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${r[1]}.0);\n      }\n    `:1===r[1]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${r[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      return 2 * (resTexRC.x * ${r[1]} + resTexRC.y);\n    }\n  `}(0,t,n);case 2:return function(e,t,n){const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(ca.arraysEqual(e,t))return n?"\n      ivec2 getOutputCoords() {\n        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${r[0]}, ${r[1]}));\n      }\n    `;const a=Math.ceil(e[1]/2);return n?"\n    ivec2 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n      int r = 2 * (index / ${a});\n      int c = imod(index, ${a}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n)return"\n    ivec3 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec3(b, r, c);\n    }\n  ";const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],a=Math.ceil(e[2]/2),s=a*Math.ceil(e[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      int b = index / ${s};\n      index -= b * ${s};\n\n      int r = 2 * (index / ${a});\n      int c = imod(index, ${a}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}(e,t,n);default:return function(e,t,n){if(n)return"\n    ivec4 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatchN = texelsInBatch * outShape[1];\n\n      int b2 = index / texelsInBatchN;\n      index -= b2 * texelsInBatchN;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec4(b2, b, r, c);\n    }\n  ";const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],a=Math.ceil(e[e.length-1]/2),s=a*Math.ceil(e[e.length-2]/2);let i=s,o="",u="b, r, c";for(let t=2;t<e.length-1;t++)i*=e[e.length-t-1],o=`\n      int b${t} = index / ${i};\n      index -= b${t} * ${i};\n    `+o,u=`b${t}, `+u;return`\n    ivec${e.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      ${o}\n\n      int b = index / ${s};\n      index -= b * ${s};\n\n      int r = 2 * (index / ${a});\n      int c = imod(index, ${a}) * 2;\n\n      return ivec${e.length}(${u});\n    }\n  `}(e,t,n)}}(t.logicalShape,i,n.enableShapeUniforms),c=function(e){return`\n    void setOutput(vec4 val) {\n      ${e.output} = val;\n    }\n  `}(o)):(l=function(e,t,n){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t,n){return 1===t[0]?n?"\n      int getOutputCoords() {\n        return int(resultUV.x * float(outTexShape[1]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.x * ${t[1]}.0);\n      }\n    `:1===t[1]?n?"\n      int getOutputCoords() {\n        return int(resultUV.y * float(outTexShape[0]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.y * ${t[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      return resTexRC.x * outTexShape[1] + resTexRC.y;\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      return resTexRC.x * ${t[1]} + resTexRC.y;\n    }\n  `}(0,t,n);case 2:return function(e,t,n){return ca.arraysEqual(e,t)?n?"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));\n      }\n    `:1===e[1]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `:1===e[0]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `:n?"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      int r = index / outShape[1];\n      int c = index - r * outShape[1];\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      int r = index / ${e[1]};\n      int c = index - r * ${e[1]};\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n)return`\n  ivec3 getOutputCoords() {\n    ivec2 resTexRC = ivec2(resultUV.yx *\n                           vec2(outTexShape[0], outTexShape[1]));\n    int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n    ${KF(["r","c","d"],e)}\n    return ivec3(r, c, d);\n  }\n`;const r=qF(["r","c","d"],e);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${r}\n      return ivec3(r, c, d);\n    }\n  `}(e,t,n);case 4:return function(e,t,n){if(n)return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      ${KF(["r","c","d","d2"],e)}\n      return ivec4(r, c, d, d2);\n    }\n  `;const r=qF(["r","c","d","d2"],e);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${r}\n      return ivec4(r, c, d, d2);\n    }\n  `}(e,t,n);case 5:return function(e,t){const n=qF(["r","c","d","d2","d3"],e);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},\n                             ${t[1]}));\n\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}(e,t);case 6:return function(e,t){const n=qF(["r","c","d","d2","d3","d4"],e);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}(e,t);default:throw new Error(`${e.length}-D output sampling is not yet supported`)}}(t.logicalShape,i,n.enableShapeUniforms),c=function(e){return`\n    void setOutput(float val) {\n      ${e.output} = vec4(val, 0, 0, 0);\n    }\n  `}(o)),n.packedInputs&&(h+=cR),[h,u,c,a,l,s,n.userCode].join("\n")}function sR(e,t=!1){const n=e.shapeInfo.logicalShape;switch(n.length){case 0:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`float ${r}() {return ${n};}`;const[a,s]=e.shapeInfo.texShape;if(1===a&&1===s)return`\n      float ${r}() {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const i=hR(n);if(t)return`\n    float ${r}() {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], ${i});\n      return sampleTexture(${n}, uv);\n    }\n  `;const[o,u]=e.shapeInfo.texShape;return`\n    float ${r}() {\n      vec2 uv = uvFromFlat(${o}, ${u}, ${i});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 1:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`\n      float ${r}(int index) {\n        ${dR(e)}\n      }\n    `;const a=e.shapeInfo.texShape,s=a[0],i=a[1];if(1===i&&1===s)return`\n      float ${r}(int index) {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const o=hR(n);return 1===i?t?`\n      float ${r}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / float(${n}TexShape[0]));\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${r}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / ${s}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:1===s?t?`\n      float ${r}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / float(${n}TexShape[1]), 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${r}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / ${i}.0, 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:t?`\n    float ${r}(int index) {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `:`\n    float ${r}(int index) {\n      vec2 uv = uvFromFlat(${s}, ${i}, index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=e.shapeInfo.texShape;if(null!=s&&ca.arraysEqual(n,s)){if(t)return`\n      float ${a}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `;const e=s[0];return`\n    float ${a}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${s[1]}.0, ${e}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `}const{newShape:i,keptDims:o}=ca.squeezeShape(n),u=i;if(u.length<n.length){const n=["row","col"];return`\n      ${sR(mR(e,u),t)}\n      float ${a}(int row, int col) {\n        return ${a}(${gR(n,o)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${n[1]}, 1)));\n        ${dR(e)}\n      }\n    `;const l=s[0],c=s[1],h=hR(r);return 1===c?t?`\n      float ${a}(int row, int col) {\n        float index = dot(vec3(row, col, ${h}), vec3(${r}Shape[1], 1, 1));\n        vec2 uv = vec2(0.5, (index + 0.5) / float(${r}TexShape[0]));\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${a}(int row, int col) {\n      float index = dot(vec3(row, col, ${h}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${l}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `:1===l?t?`\n      float ${a}(int row, int col) {\n        float index = dot(vec3(row, col, ${h}), vec3(${r}Shape[1], 1, 1));\n        vec2 uv = vec2((index + 0.5) / float(${r}TexShape[1]), 0.5);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${a}(int row, int col) {\n      float index = dot(vec3(row, col, ${h}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${c}.0, 0.5);\n      return sampleTexture(${r}, uv);\n    }\n  `:t?`\n      float ${a}(int row, int col) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${r}Shape[1] + col + ${h};\n        vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n  float ${a}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${n[1]} + col + ${h};\n    vec2 uv = uvFromFlat(${l}, ${c}, index);\n    return sampleTexture(${r}, uv);\n  }\n`}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=n[1]*n[2],i=n[2],{newShape:o,keptDims:u}=ca.squeezeShape(n),l=o;if(l.length<n.length){const n=["row","col","depth"];return`\n        ${sR(mR(e,l),t)}\n        float ${a}(int row, int col, int depth) {\n          return ${a}(${gR(n,u)});\n        }\n      `}if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${s}, ${i}, 1)));\n        ${dR(e)}\n      }\n    `;const c=e.shapeInfo.texShape,h=c[0],d=c[1],p=e.shapeInfo.flatOffset;if(d===s&&null==p)return t?`\n      float ${a}(int row, int col, int depth) {\n        int stride1 = ${r}Shape[2];\n        float texR = float(row);\n        float texC = dot(vec2(col, depth), vec2(stride1, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n        float ${a}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${i}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${d}.0, ${h}.0);\n          return sampleTexture(${r}, uv);\n        }\n      `;if(d===i&&null==p)return t?`\n      float ${a}(int row, int col, int depth) {\n        float texR = dot(vec2(row, col), vec2(${r}Shape[1], 1));\n        float texC = float(depth);\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${a}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${n[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${d}.0, ${h}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `;const f=hR(r);return t?`\n    float ${a}(int row, int col, int depth) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int stride0 = ${r}Shape[1] * ${r}Shape[2];\n      int stride1 = ${r}Shape[2];\n      int index = row * ${s} + col * ${i} + depth + ${f};\n      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);\n      return sampleTexture(${r}, uv);\n    }\n    `:`\n      float ${a}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${s} + col * ${i} + depth + ${f};\n        vec2 uv = uvFromFlat(${h}, ${d}, index);\n        return sampleTexture(${r}, uv);\n      }\n  `}(e,t);case 4:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=n[3],i=n[2]*s,o=n[1]*i,{newShape:u,keptDims:l}=ca.squeezeShape(n);if(u.length<n.length){const n=["row","col","depth","depth2"];return`\n      ${sR(mR(e,u),t)}\n      float ${a}(int row, int col, int depth, int depth2) {\n        return ${a}(${gR(n,l)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${o}, ${i}, ${s}, 1)));\n        ${dR(e)}\n      }\n    `;const c=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,d=h[0],p=h[1],f=`int stride2 = ${r}Shape[3];`,m=`int stride1 = ${r}Shape[2] * stride2;`,g=`int stride0 = ${r}Shape[1] * stride1;`;if(p===o&&null==c)return t?`\n      float ${a}(int row, int col, int depth, int depth2) {\n        ${f}\n        ${m}\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(stride1, stride2, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n      float ${a}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${i}, ${s}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${p}.0, ${d}.0);\n        return sampleTexture(${r}, uv);\n      }\n    `;if(p===s&&null==c)return t?`\n      float ${a}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${r}Shape[1] * ${r}Shape[2], ${r}Shape[2], 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n      float ${a}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${n[1]*n[2]}, ${n[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${p}.0, ${d}.0);\n        return sampleTexture(${r}, uv);\n      }\n    `;const y=hR(r);return t?`\n    float ${a}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      ${f}\n      ${m}\n      ${g}\n      int index = row * stride0 + col * stride1 +\n          depth * stride2 + depth2;\n      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index + ${y});\n      return sampleTexture(${r}, uv);\n    }\n  `:`\n    float ${a}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${i} +\n          depth * ${s} + depth2;\n      vec2 uv = uvFromFlat(${d}, ${p}, index + ${y});\n      return sampleTexture(${r}, uv);\n    }\n  `}(e,t);case 5:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=t[4],s=t[3]*a,i=t[2]*s,o=t[1]*i,{newShape:u,keptDims:l}=ca.squeezeShape(t);if(u.length<t.length){const t=["row","col","depth","depth2","depth3"];return`\n      ${sR(mR(e,u))}\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        return ${r}(${gR(t,l)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${o}, ${i}, ${s}, ${a})) +\n          depth3;\n        ${dR(e)}\n      }\n    `;const c=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,d=h[0],p=h[1];if(p===o&&null==c)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${i}, ${s}, ${a}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${p}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(p===a&&null==c)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]},\n               ${t[2]*t[3]}, ${t[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${p}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${r}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${i} + depth * ${s} +\n          depth2 * ${a} + depth3 + ${hR(n)};\n      vec2 uv = uvFromFlat(${d}, ${p}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);case 6:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:a,keptDims:s}=ca.squeezeShape(t);if(a.length<t.length){const t=["row","col","depth","depth2","depth3","depth4"];return`\n      ${sR(mR(e,a))}\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${r}(${gR(t,s)});\n      }\n    `}const i=t[5],o=t[4]*i,u=t[3]*o,l=t[2]*u,c=t[1]*l;if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${c}, ${l}, ${u}, ${o})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${i}, 1)));\n        ${dR(e)}\n      }\n    `;const h=e.shapeInfo.flatOffset,d=e.shapeInfo.texShape,p=d[0],f=d[1];if(f===c&&null==h)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${l}, ${u}, ${o}, ${i})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(f===i&&null==h)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]*t[4]},\n               ${t[2]*t[3]*t[4]},\n               ${t[3]*t[4]},\n               ${t[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${c} + col * ${l} + depth * ${u} +\n          depth2 * ${o} + depth3 * ${i} + depth4 + ${hR(n)};\n      vec2 uv = uvFromFlat(${p}, ${f}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);default:throw new Error(`${n.length}-D input sampling is not yet supported`)}}function iR(e,t){switch(e.shapeInfo.logicalShape.length){case 0:return function(e){const t=e.name;return`\n    vec4 ${"get"+t.charAt(0).toUpperCase()+t.slice(1)}() {\n      return ${jF().texture2D}(${t}, halfCR);\n    }\n  `}(e);case 1:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=e.shapeInfo.texShape,s=jF();if(t)return`\n    vec4 ${r}(int index) {\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      vec2 uv = packedUVfrom1D(\n        packedTexShape[0], packedTexShape[1], index);\n      return ${s.texture2D}(${n}, uv);\n    }\n  `;const i=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];return`\n    vec4 ${r}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${i[0]}, ${i[1]}, index);\n      return ${s.texture2D}(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=e.shapeInfo.texShape,i=s[0],o=s[1],u=jF();if(null!=s&&ca.arraysEqual(n,s))return t?`\n      vec4 ${a}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n\n        return ${u.texture2D}(${r}, uv);\n      }\n    `:`\n      vec4 ${a}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${o}.0, ${i}.0);\n\n        return ${u.texture2D}(${r}, uv);\n      }\n    `;if(t)return`\n    vec4 ${a}(int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${r}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);\n      return ${u.texture2D}(${r}, uv);\n    }\n  `;const l=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];return`\n    vec4 ${a}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${Math.ceil(n[1]/2)}, ${l[0]}, ${l[1]}, row, col);\n      return ${u.texture2D}(${r}, uv);\n    }\n  `}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=e.shapeInfo.texShape,i=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];if(1===n[0]){const r=[1,2],s=["b","row","col"];return`\n        ${iR(mR(e,n.slice(1)),t)}\n        vec4 ${a}(int b, int row, int col) {\n          return ${a}(${gR(s,r)});\n        }\n      `}const o=jF();if(t)return`\n    vec4 ${a}(int b, int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${r}Shape[2]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${r}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom3D(\n        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);\n      return ${o.texture2D}(${r}, uv);\n    }\n  `;const u=i[0],l=i[1],c=Math.ceil(n[2]/2);return`\n    vec4 ${a}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${u}, ${l}, ${c*Math.ceil(n[1]/2)}, ${c}, b, row, col);\n      return ${o.texture2D}(${r}, uv);\n    }\n  `}(e,t);default:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=jF();if(t)return`\n    vec4 ${r}(int b2, int b, int row, int col) {\n      int valuesPerRow = int(ceil(float(${n}Shape[3]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[2]) / 2.0));\n      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);\n      texelsInBatch *= ${n}Shape[1];\n      index = b2 * texelsInBatch + index;\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      int texR = index / packedTexShape[1];\n      int texC = index - texR * packedTexShape[1];\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${a.texture2D}(${n}, uv);\n    }\n  `;const s=e.shapeInfo.logicalShape,i=s.length,o=e.shapeInfo.texShape,u=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],l=u[0],c=u[1],h=Math.ceil(s[i-1]/2);let d=h*Math.ceil(s[i-2]/2),p="int b, int row, int col",f=`b * ${d} + (row / 2) * ${h} + (col / 2)`;for(let e=2;e<i-1;e++)p=`int b${e}, `+p,d*=s[i-e-1],f=`b${e} * ${d} + `+f;return`\n    vec4 ${r}(${p}) {\n      int index = ${f};\n      int texR = index / ${c};\n      int texC = index - texR * ${c};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${c}, ${l});\n      return ${a.texture2D}(${n}, uv);\n    }\n  `}(e,t)}}var oR="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",uR="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",lR="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",cR="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function hR(e){return`offset${e}`}function dR(e){const t=e.name,n=ca.sizeFromShape(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${t}[i];\n      }\n    }\n  `}function pR(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function fR(e,t,n){const{newShape:r}=ca.squeezeShape(t),a=t.length,s=e&&3===a&&1===t[0],i=s?t.slice(1):r,o=!e&&a>1&&!ca.arraysEqual(t,n)&&r.length<a||s;return{useSqueezeShape:o,uniformShape:o?i:t}}function mR(e,t){const n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function gR(e,t){return t.map((t=>e[t])).join(", ")}function yR(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach(((e,n)=>{const r=e.logicalShape,a=t[n],s=a.shape;if(!ca.arraysEqual(r,s))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${s} must match`);if(e.isUniform&&a.isUniform)return;const i=e.texShape,o=a.isUniform?null:a.texData.texShape;if(!ca.arraysEqual(i,o))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${i} and ${o} must match`)}))}function bR(e){return Ue().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}var{addImpl:xR,bincountImpl:wR,bincountReduceImpl:vR,ceilImpl:kR,concatImpl:IR,equalImpl:SR,expImpl:NR,expm1Impl:TR,floorImpl:CR,gatherNdImpl:$R,gatherV2Impl:_R,greaterImpl:ER,greaterEqualImpl:AR,lessImpl:FR,lessEqualImpl:RR,linSpaceImpl:DR,logImpl:MR,maxImpl:OR,maximumImpl:LR,minimumImpl:zR,multiplyImpl:PR,negImpl:BR,notEqualImpl:WR,prodImpl:VR,rangeImpl:UR,rsqrtImpl:GR,simpleAbsImpl:HR,sliceImpl:jR,sparseFillEmptyRowsImpl:qR,sparseReshapeImpl:KR,sparseSegmentReductionImpl:XR,stridedSliceImpl:YR,stringNGramsImpl:ZR,stringSplitImpl:JR,stringToHashBucketFastImpl:QR,subImpl:eD,tileImpl:tD,topKImpl:nD,transposeImpl:rD,uniqueImpl:aD}=mT;function sD(e,t){return["x","y","z","w","u","v"].slice(0,t).map((t=>`${e}.${t}`))}function iD(e,t){return 1===t?[e]:sD(e,t)}var oD=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e;let n="";for(let e=0;e<4;e++){let t="thisRC = rc;";e%2==1&&(t+="thisRC.z += 1;"),e>1&&(t+="thisRC.y += 1;"),n+=`\n        ${t}\n        ${e>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${e}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${e>0?"}":""}\n      `}var r;this.userCode=`\n      ${r=t,`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${qF(["r","c","d"],r)}\n      return ivec3(r, c, d);\n    }\n  `}\n      ${XF(e)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${e[1]};\n        int cols = ${e[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}};function uD(e,t,n,r,a){const s=function(e,t){switch(e){case mF.PACKED_2X2_FLOAT32:return tR(t);case mF.PACKED_2X2_FLOAT16:return nR(t);case mF.UNPACKED_FLOAT32:return JF(t);case mF.UNPACKED_FLOAT16:return QF(t);case mF.PACKED_4X1_UNSIGNED_BYTE:return eR(t);default:throw new Error(`Unknown physical texture type ${e}`)}}(t,r);let i;if(a){const[t,n]=kF(e[0],e[1]);i=t*n}else{const[t,n]=wF(e[0],e[1]);i=t*n}return i*function(e,t){const n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;throw new Error(`Unknown internal format ${t}`)}(n,s)}function lD(e,t){if(e===pF.UPLOAD)return mF.PACKED_2X2_FLOAT32;if(e===pF.RENDER||null==e)return function(e){return Ue().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?mF.PACKED_2X2_FLOAT32:mF.UNPACKED_FLOAT32:e?mF.PACKED_2X2_FLOAT16:mF.UNPACKED_FLOAT16}(t);if(e===pF.DOWNLOAD||e===pF.PIXELS)return mF.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${e}`)}function cD(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}var hD=class{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=bR(this.outputShape.length),this.userCode=`\n      float unaryOperation(float x) {\n        ${t}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}},dD="return abs(x);",pD="return x;",fD=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=bR(this.outputShape.length),this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${t}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}},mD=vf.whereImpl,gD={},yD=Ue().getNumber("CPU_HANDOFF_SIZE_THRESHOLD"),bD=class extends H{constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!Ue().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");if(null==e){const e=xF(Ue().getNumber("WEBGL_VERSION"));this.binaryCache=((t=Ue().getNumber("WEBGL_VERSION"))in gD||(gD[t]={}),gD[t]),this.gpgpu=new class{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];const t=Ue().getNumber("WEBGL_VERSION");null!=e?(this.gl=e,function(e,t){yF[e]=t}(t,e)):this.gl=xF(t);let n="WEBGL_color_buffer_float";const r="EXT_color_buffer_half_float";if(1===Ue().getNumber("WEBGL_VERSION")){const e="OES_texture_float",t="OES_texture_half_float";if(this.textureFloatExtension=TF(this.gl,e),WF(this.gl,t))this.textureHalfFloatExtension=TF(this.gl,t);else if(Ue().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),WF(this.gl,r))this.colorBufferHalfFloatExtension=TF(this.gl,r);else if(Ue().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",WF(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!WF(this.gl,r))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(r)}this.vertexBuffer=function(e){return function(e,t){const n=MF(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return SF(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),SF(e,(()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}(this.gl),this.indexBuffer=function(e){return function(e,t){const n=MF(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return SF(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n))),SF(e,(()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Uint16Array([0,1,2,2,1,3]))}(this.gl),this.framebuffer=function(e){return MF(e,(()=>e.createFramebuffer()),"Unable to create WebGLFramebuffer.")}(this.gl),this.textureConfig=IF(this.gl,this.textureHalfFloatExtension)}get debug(){return Ue().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;SF(e,(()=>e.finish())),SF(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,null))),SF(e,(()=>e.deleteFramebuffer(this.framebuffer))),SF(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,null))),SF(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null))),SF(e,(()=>e.deleteBuffer(this.indexBuffer))),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[a,s]=wF(t,n);return ZF(e,a,s,JF(r),r.textureFormatFloat,e.FLOAT)}(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[a,s]=wF(t,n);return ZF(e,a,s,QF(r),r.textureFormatFloat,r.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[a,s]=wF(t,n);return ZF(e,a,s,eR(r),e.RGBA,e.UNSIGNED_BYTE)}(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),function(e,t,n){SF(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),n.data instanceof Uint8Array?SF(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data))):SF(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n))),SF(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,r){this.throwIfDisposed(),function(e,t,n,r,a,s){let i,o,u;SF(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),a instanceof Uint8Array?(i=new Uint8Array(n*r*4),o=e.UNSIGNED_BYTE,u=e.RGBA):(i=new Float32Array(n*r*4),o=e.FLOAT,u=s.internalFormatPackedFloat),i.set(a),SF(e,(()=>e.texImage2D(e.TEXTURE_2D,0,u,n,r,0,e.RGBA,o,i))),SF(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t,n,r,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[a,s]=kF(t,n);return ZF(e,a,s,nR(r),e.RGBA,r.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[a,s]=kF(t,n);return ZF(e,a,s,tR(r),e.RGBA,e.FLOAT)}(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(RF(this.gl,this.framebuffer),this.outputTexture=null),SF(this.gl,(()=>this.gl.deleteTexture(e)))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n,r){const[a,s]=wF(t,n),i=new Uint8Array(t*n*4);return SF(e,(()=>e.readPixels(0,0,a,s,r.downloadTextureFormat,e.UNSIGNED_BYTE,i))),new Float32Array(i.buffer)}(this.gl,t,n,this.textureConfig)))}downloadPackedMatrixFromBuffer(e,t,n,r,a,s){return function(e,t,n,r,a,s,i,o){const u=e,l=new Float32Array(function(e,t){const[n,r]=kF(e,t);return n*r*4}(s,i));return u.bindBuffer(u.PIXEL_PACK_BUFFER,t),u.getBufferSubData(u.PIXEL_PACK_BUFFER,0,l),u.bindBuffer(u.PIXEL_PACK_BUFFER,null),l}(this.gl,e,0,0,0,a,s,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return function(e,t,n){const r=e,a=new Float32Array(n);return r.bindBuffer(r.PIXEL_PACK_BUFFER,t),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,a),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),a}(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);const r=function(e,t,n,r){const a=e.createBuffer();SF(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,a)));const s=16*t*n;return SF(e,(()=>e.bufferData(e.PIXEL_PACK_BUFFER,s,e.STREAM_READ))),SF(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0))),SF(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null))),a}(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if(Ue().getBool("WEBGL_FENCE_API_ENABLED")){const r=e,a=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{const e=r.clientWaitSync(a,0,0);return e===r.ALREADY_SIGNALED||e===r.CONDITION_SATISFIED},t=a}else Ue().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,Ue().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n){const r=new Float32Array(t*n*4);return SF(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,r))),r}(this.gl,t,n)))}createProgram(e){this.throwIfDisposed();const t=this.gl,n=function(e,t){const n=MF(e,(()=>e.createShader(e.FRAGMENT_SHADER)),"Unable to create fragment WebGLShader.");if(SF(e,(()=>e.shaderSource(n,t))),SF(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw function(e,t){const n=_F.exec(t);if(null==n)return console.log(`Couldn't parse line number in error: ${t}`),void console.log(e);const r=+n[1],a=e.split("\n"),s=a.length.toString().length+2,i=a.map(((e,t)=>ca.rightPad((t+1).toString(),s)+e));let o=0;for(let e=0;e<i.length;e++)o=Math.max(i[e].length,o);const u=i.slice(0,r-1),l=i.slice(r-1,r),c=i.slice(r);console.log(u.join("\n")),console.log(t.split("\n")[0]),console.log(`%c ${ca.rightPad(l[0],o)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(c.join("\n"))}(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}(t,e);null==this.vertexShader&&(this.vertexShader=function(e){const t=jF();return function(e,t){const n=MF(e,(()=>e.createShader(e.VERTEX_SHADER)),"Unable to create vertex WebGLShader.");if(SF(e,(()=>e.shaderSource(n,t))),SF(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}(e,`${t.version}\n    precision highp float;\n    ${t.attribute} vec3 clipSpacePos;\n    ${t.attribute} vec2 uv;\n    ${t.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}(t));const r=function(e){return MF(e,(()=>e.createProgram()),"Unable to create WebGLProgram.")}(t);return SF(t,(()=>t.attachShader(r,this.vertexShader))),SF(t,(()=>t.attachShader(r,n))),function(e,t){if(SF(e,(()=>e.linkProgram(t))),!1===e.getProgramParameter(t,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}(t,r),this.debug&&EF(t,r),this.vertexAttrsAreBound||(this.setProgram(r),this.vertexAttrsAreBound=function(e,t,n){return SF(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),AF(e,t,"clipSpacePos",n,3,20,0)&&AF(e,t,"uv",n,2,20,12)}(t,this.program,this.vertexBuffer)),r}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&SF(this.gl,(()=>this.gl.deleteProgram(e)))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&EF(this.gl,this.program),SF(this.gl,(()=>this.gl.useProgram(e)))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?function(e,t,n){return MF(e,(()=>e.getUniformLocation(t,n)),'uniform "'+n+'" not present in program.')}(this.gl,e,t):function(e,t,n){return e.getUniformLocation(t,n)}(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),SF(this.gl,(()=>this.gl.getAttribLocation(e,t)))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),function(e,t,n,r){SF(e,(()=>function(e,t,n){!function(e,t){const n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=t+e.TEXTURE0;if(r<e.TEXTURE0||r>n)throw new Error(`textureUnit must be in [gl.TEXTURE0, gl.TEXTURE${n}].`)}(e,n),SF(e,(()=>e.activeTexture(e.TEXTURE0+n))),SF(e,(()=>e.bindTexture(e.TEXTURE_2D,t)))}(e,t,r))),SF(e,(()=>e.uniform1i(n,r)))}(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();const[r,a]=kF(t,n);this.setOutputMatrixTextureDriver(e,r,a)}setOutputMatrixWriteRegion(e,t,n,r){this.setOutputMatrixWriteRegionDriver(n,e,r,t)}setOutputPackedMatrixWriteRegion(e,t,n,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&EF(this.gl,this.program),DF(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;this.debug&&this.debugValidate(),SF(e,(()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0)))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),SF(this.gl,(()=>this.gl.finish()))}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=TF(this.gl,2===Ue().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===Ue().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2(),n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===Ue().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2();return void e.endQuery(t.TIME_ELAPSED_EXT)}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await ca.repeatedTry((()=>this.disposed||this.isQueryAvailable(e,Ue().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")))),this.getQueryTime(e,Ue().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){const t=this.gl;return t.getQueryParameter(e,t.QUERY_RESULT)/1e6}{const t=this.getQueryTimerExtensionWebGL1();return t.getQueryObjectEXT(e,t.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){const t=this.gl,n=this.getQueryTimerExtensionWebGL2(),r=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),r&&!this.disjoint}{const t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(e){return new Promise((t=>{this.addItemToPoll((()=>e.isFencePassed()),(()=>t()))}))}pollItems(){const e=function(e){let t=0;for(;t<e.length&&e[t]();++t);return t-1}(this.itemsToPoll.map((e=>e.isDoneFn)));for(let t=0;t<=e;++t){const{resolveFn:e}=this.itemsToPoll[t];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1||ca.repeatedTry((()=>(this.pollItems(),0===this.itemsToPoll.length)))}bindTextureToFrameBuffer(e){this.throwIfDisposed(),FF(this.gl,e,this.framebuffer),this.debug&&DF(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(FF(this.gl,this.outputTexture,this.framebuffer),this.debug&&DF(this.gl)):RF(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();const r=this.gl;FF(r,e,this.framebuffer),this.debug&&DF(r),this.outputTexture=e,SF(r,(()=>r.viewport(0,0,t,n))),SF(r,(()=>r.scissor(0,0,t,n)))}setOutputMatrixWriteRegionDriver(e,t,n,r){this.throwIfDisposed(),SF(this.gl,(()=>this.gl.scissor(e,t,n,r)))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}(e),this.canvas=e.canvas,this.gpgpuCreatedLocally=!0}else this.gpgpu=e,this.binaryCache={},this.gpgpuCreatedLocally=!1,this.canvas=e.gl.canvas;var t;this.textureManager=new class{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(e,t,n){const r=lD(t,n),a=cD(e,r,n);a in this.freeTextures||(this.freeTextures[a]=[]),a in this.usedTextures||(this.usedTextures[a]=[]);const s=uD(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[a].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=s,this.log();const e=this.freeTextures[a].shift();return this.usedTextures[a].push(e),e}let i;return r===mF.PACKED_2X2_FLOAT32?i=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):r===mF.PACKED_2X2_FLOAT16?i=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):r===mF.UNPACKED_FLOAT32?i=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):r===mF.UNPACKED_FLOAT16?i=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):r===mF.PACKED_4X1_UNSIGNED_BYTE&&(i=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[a].push(i),this.numUsedTextures++,this._numBytesAllocated+=s,this.log(),i}releaseTexture(e,t,n,r){if(null==this.freeTextures)return;const a=lD(n,r),s=cD(t,a,r);s in this.freeTextures||(this.freeTextures[s]=[]);const i=uD(t,a,this.gpgpu.gl,this.gpgpu.textureConfig,r),o=Ue().get("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==o&&this._numBytesAllocated>o?(this.gpgpu.deleteMatrixTexture(e),this._numBytesAllocated-=i):(this.freeTextures[s].push(e),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;const u=this.usedTextures[s],l=u.indexOf(e);if(l<0)throw new Error("Cannot release a texture that was never provided by this texture manager");u.splice(l,1),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);const t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const e in this.freeTextures)this.freeTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e)}));for(const e in this.usedTextures)this.usedTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}(this.gpgpu),this.numMBBeforeWarning=null==Ue().global.screen?1024:Ue().global.screen.height*Ue().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new G(this,Uo())}nextDataId(){return bD.nextDataId++}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}write(e,t,n){if((Ue().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||Ue().getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const r={id:this.nextDataId()};return this.texData.set(r,{shape:t,dtype:n,values:e,usage:pF.UPLOAD,refCount:1}),r}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){this.texData.get(e).refCount++}decRef(e){this.texData.has(e)&&this.texData.get(e).refCount--}move(e,t,n,r,a){if(Ue().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===r)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:r,values:t,usage:pF.UPLOAD,refCount:a})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const t=this.texData.get(e),{values:n,dtype:r,complexTensorInfos:a,slice:s,shape:i,isPacked:o}=t;if(null!=s){let t;t=o?new fD(i,pD):new hD(i,pD);const n=this.runWebGLProgram(t,[{dataId:e,shape:i,dtype:r}],r),a=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),a}if(null!=n)return this.convertAndCacheOnCPU(e);if("string"===r)return n;const u=null!=this.activeTimers;let l,c;if(u&&(l=ca.now()),"complex64"===r){const e=this.readSync(a.real.dataId),t=this.readSync(a.imag.dataId);c=Ap.mergeRealAndImagArrays(e,t)}else c=this.getValuesFromTexture(e);return u&&(this.downloadWaitMs+=ca.now()-l),this.convertAndCacheOnCPU(e,c)}async read(e){if(this.pendingRead.has(e)){const t=this.pendingRead.get(e);return new Promise((e=>t.push(e)))}const t=this.texData.get(e),{values:n,shape:r,slice:a,dtype:s,complexTensorInfos:i,isPacked:o}=t;if(null!=a){let t;t=o?new fD(r,pD):new hD(r,pD);const n=this.runWebGLProgram(t,[{dataId:e,shape:r,dtype:s}],s),a=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),a}if(null!=n)return this.convertAndCacheOnCPU(e);if(!Ue().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===Ue().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let u,l,c=null;if("complex64"!==s&&Ue().get("WEBGL_BUFFER_SUPPORTED")){u=this.decode(e);const t=this.texData.get(u.dataId);c=this.gpgpu.createBufferFromTexture(t.texture,...vF(r))}if(this.pendingRead.set(e,[]),"complex64"!==s&&await this.gpgpu.createAndWaitForFence(),"complex64"===s){const e=await Promise.all([this.read(i.real.dataId),this.read(i.imag.dataId)]),t=e[0],n=e[1];l=Ap.mergeRealAndImagArrays(t,n)}else if(null==c)l=this.getValuesFromTexture(e);else{const e=ca.sizeFromShape(r);l=this.gpgpu.downloadFloat32MatrixFromBuffer(c,e)}if(null!=u&&this.disposeIntermediateTensorInfo(u),null!=c){const e=this.gpgpu.gl;SF(e,(()=>e.deleteBuffer(c)))}const h=this.convertAndCacheOnCPU(e,l),d=this.pendingRead.get(e);return this.pendingRead.delete(e),d.forEach((e=>e(h))),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&Uo().removeDataId(e,this),this.pendingDeletes--),h}bufferSync(e){const t=this.readSync(e.dataId);let n=t;if("string"===e.dtype)try{n=t.map((e=>ca.decodeString(e)))}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return xi(e.shape,e.dtype,n)}checkNumericalProblems(e){if(null!=e)for(let t=0;t<e.length;t++){const n=e[t];if(!NF(n)){if(Ue().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`);throw Error(`The value ${n} cannot be represented on this device.`)}}}getValuesFromTexture(e){const{shape:t,dtype:n,isPacked:r}=this.texData.get(e),a=ca.sizeFromShape(t);if(Ue().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(e),r=this.texData.get(n.dataId),s=this.gpgpu.downloadMatrixFromPackedTexture(r.texture,...vF(t)).subarray(0,a);return this.disposeIntermediateTensorInfo(n),s}const s=Ue().getBool("WEBGL_PACK")&&!0===r,i=s?zF(t):t,o=s?new class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=pF.DOWNLOAD;const t=jF();this.outputShape=e,this.userCode=`\n      ${YF}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${t.output} = encode_float(x);\n      }\n    `}}(i):new class{constructor(e){this.variableNames=["A"],this.outTexUsage=pF.DOWNLOAD;const t=jF();this.outputShape=e,this.userCode=`\n      ${YF}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${t.output} = encode_float(x);\n      }\n    `}}(i),u=this.runWebGLProgram(o,[{shape:i,dtype:n,dataId:e}],"float32"),l=this.texData.get(u.dataId),c=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(l.texture,l.texShape[0],l.texShape[1]).subarray(0,a);return this.disposeIntermediateTensorInfo(u),c}timerAvailable(){return Ue().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}async time(e){const t=this.activeTimers,n=[];let r=!1;null==this.programTimersStack?(this.programTimersStack=n,r=!0):this.activeTimers.push(n),this.activeTimers=n,e();const a=ca.flatten(this.activeTimers.map((e=>e.query))).filter((e=>null!=e)),s=ca.flatten(this.activeTimers.map((e=>e.name))).filter((e=>null!=e));this.activeTimers=t,r&&(this.programTimersStack=null);const i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};if(Ue().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const e=await Promise.all(a);i.kernelMs=ca.sum(e),i.getExtraProfileInfo=()=>e.map(((e,t)=>({name:s[t],ms:e}))).map((e=>`${e.name}: ${e.ms}`)).join(", ")}else i.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,i}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return Ue().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:ca.now(),endMs:null}}endTimer(e){return Ue().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=ca.now(),e)}async getQueryTime(e){if(Ue().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:n}=this.texData.get(e);return null!=n&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:t,dtype:n,texShape:r,usage:a,isPacked:s,slice:i}=this.texData.get(e),o=i&&i.origDataId||e,u=this.dataRefCount.get(o);u>1?this.dataRefCount.set(o,u-1):(this.dataRefCount.delete(o),null!=t&&(this.numBytesInGPU-=this.computeBytes(r,n),this.textureManager.releaseTexture(t,r,a,s)));const l=this.texData.get(e);l.texture=null,l.texShape=null,l.isPacked=!1,l.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=yD){return Ue().getBool("WEBGL_CPU_FORWARD")&&e.every((e=>null==this.texData.get(e.dataId).texture&&ca.sizeFromShape(e.shape)<t))}getGPGPUContext(){return this.gpgpu}where(e){Ap.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return mD(e.shape,t)}packedUnaryOp(e,t,n){const r=new fD(e.shape,t),a=this.compileAndRun(r,[e],n);return Uo().makeTensorFromDataId(a.dataId,a.shape,a.dtype)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){const t=HR(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,t)}if(Ue().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,dD,e.dtype);const t=new hD(e.shape,dD),n=this.compileAndRun(t,[e]);return Uo().makeTensorFromDataId(n.dataId,n.shape,n.dtype)}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&ca.isString(n[0])){const a=n.map((e=>ca.encodeString(e)));r=this.write(a,e,t)}else r=this.write(n,e,t);return this.texData.get(r).usage=null,{dataId:r,shape:e,dtype:t}}makeOutput(e,t,n){const{dataId:r}=this.makeTensorInfo(e,t,n);return Uo().makeTensorFromDataId(r,e,t,this)}unpackTensor(e){const t=new class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e;const t=e.length,n=iD("rc",t),r=pR(t),a=function(e,t){if(1===e)return"rc";let n="";for(let r=0;r<e;r++)n+=t[r],r<e-1&&(n+=",");return n}(t,n),s=n.slice(-2),i=t<=1?"rc":`vec2(${s.join(",")})`;this.userCode=`\n      void main() {\n        ${r} rc = getOutputCoords();\n        vec4 packedInput = getA(${a});\n\n        setOutput(getChannel(packedInput, ${i}));\n      }\n    `}}(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new class{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e;const t=e.length;if(0===t)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const n=iD("rc",t),r=pR(t),a=function(e,t,n){if(1===e)return`rc > ${t[0]}`;let r="";for(let a=e-2;a<e;a++)r+=`${n[a]} >= ${t[a]}`,a<e-1&&(r+="||");return r}(t,e,n),s=function(e,t,n,r){if(1===e)return"";const a=r.slice(-2);return`\n    int r = ${a[0]};\n    int c = ${a[1]};\n    int rp1 = r + 1;\n    int cp1 = c + 1;\n\n    bool cEdge = cp1 >= ${t};\n    bool rEdge = rp1 >= ${n};\n  `}(t,e[e.length-1],e[e.length-2],n),i=function(e,t){const n=e.length,r=function(e,t){const n=[];for(let r=0;r<=1;r++)for(let a=0;a<=1;a++){let s=`${0===r?"r":"rp1"}, ${0===a?"c":"cp1"}`;for(let n=2;n<e;n++)s=`${t[t.length-1-n]},`+s;n.push(s)}return n}(n,t);return 1===n?`getA(rc),\n            rc + 1 >= ${e[0]} ? 0. : getA(rc + 1),\n            0, 0`:`getA(${r[0]}),\n          cEdge ? 0. : getA(${r[1]}),\n          rEdge ? 0. : getA(${r[2]}),\n          rEdge || cEdge ? 0. : getA(${r[3]})`}(e,n);this.userCode=`\n        void main() {\n          ${r} rc = getOutputCoords();\n\n          if(${a}) {\n            setOutput(vec4(0));\n          } else {\n            ${s}\n\n            setOutput(vec4(${i}));\n          }\n        }\n      `}}}(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){const n=[OF(e.shape),...LF(e.shape)],r={dtype:e.dtype,shape:n,dataId:e.dataId},a=[OF(t),...LF(t)],s=new oD(a,n),i=this.runWebGLProgram(s,[r],e.dtype,null,!0);return{dataId:i.dataId,shape:t,dtype:i.dtype}}decode(e){const t=this.texData.get(e),{isPacked:n,shape:r,dtype:a}=t,s=zF(r);let i;return i=n?new class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=hF.DENSE;const t=vF(e),n=jF();this.outputShape=e,this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${qF(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2(${t[0]}, ${t[1]}));\n        int index = 4 * (resTexRC.x * ${t[1]} + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${n.output} = result;\n      }\n    `}}(s):new class{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=hF.DENSE;const t=vF(e),n=jF();this.outputShape=e,this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${qF(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2(${t[0]}, ${t[1]}));\n        int index = 4 * (resTexRC.x * ${t[1]} + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${n.output} = result;\n      }\n    `}}(s),{dtype:a,shape:r,dataId:this.runWebGLProgram(i,[{shape:s,dtype:a,dataId:e}],a,null,!0).dataId}}runWebGLProgram(e,t,n,r,a=!1){const s=this.makeTensorInfo(e.outputShape,n),i=this.texData.get(s.dataId);if(e.packedOutput&&(i.isPacked=!0),e.outPackingScheme===hF.DENSE){const t=vF(e.outputShape);i.texShape=t.map((e=>2*e))}if(null!=e.outTexUsage&&(i.usage=e.outTexUsage),0===ca.sizeFromShape(s.shape))return i.values=ca.getTypedArrayFromDType(s.dtype,0),s;const o=[],u=t.map((t=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(t.dataId);if(null==n.texture){if(!e.packedInputs&&ca.sizeFromShape(t.shape)<=Ue().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:t.shape,texData:null,isUniform:!0,uniformValues:n.values};e.packedInputs&&(n.isPacked=!0,n.shape=t.shape)}else if(!!n.isPacked!=!!e.packedInputs)t=n.isPacked?this.unpackTensor(t):this.packTensor(t),o.push(t),n=this.texData.get(t.dataId);else if(n.isPacked&&!BF(n.shape,t.shape)){const e=t,r=t.shape;t.shape=n.shape,t=this.packedReshape(t,r),o.push(t),n=this.texData.get(t.dataId),e.shape=r}return this.uploadToGPU(t.dataId),{shape:t.shape,texData:n,isUniform:!1}}));this.uploadToGPU(s.dataId);const l={shape:s.shape,texData:i,isUniform:!1},c=function(e,t,n){let r="";t.concat(n).forEach((t=>{const a=null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0;if(e.enableShapeUniforms&&!t.isUniform){const s=t.texData.texShape,{useSqueezeShape:i,uniformShape:o}=fR(e.packedInputs,t.shape,s);let u="",l="",c="";if(1===o.length&&e.packedInputs){const e=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];u=`${e[0]>1}_${e[1]>1}`}else if(2!==o.length||e.packedInputs){if(o.length>2&&!e.packedInputs){const e=ca.computeStrides(o);c=`${e[0]===s[1]}_${e[e.length-1]===s[1]}`}}else l=`${o[0]>1}_${o[1]>1}`;const h=t.shape.length,d=2===h&&ca.arraysEqual(t.shape,s),p=1===ca.sizeFromShape(t.shape),f=Ap.getBroadcastDims(t.shape,n.shape),m=!e.packedInputs&&h===n.shape.length&&ca.arraysEqual(s,n.texData.texShape),g=e.packedInputs||h>2?"":`${s[0]>1}_${s[1]>1}`;r+=`${h}_${m}_${i}_${o.length}_${p}_${f}_${d}_${u}_${l}_${c}_${g}_${a}`}else{const e=t.isUniform?"uniform":t.texData.texShape;r+=`${t.shape}_${e}_${a}`}}));const a=e.userCode;let s=e.constructor.name;return s+="_"+r+"_"+a+`${Ue().getNumber("WEBGL_VERSION")}`,s}(e,u,l),h=this.getAndSaveBinary(c,(()=>function(e,t,n,r){const a=n.map(((e,n)=>{const r={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(r.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[n],shapeInfo:r}})),s=a.map((e=>e.shapeInfo)),i={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},o=aR(a,i,t),u=e.createProgram(o);let l=null;const c=e.getUniformLocation(u,"NAN",!1);1===Ue().getNumber("WEBGL_VERSION")&&(l=e.getUniformLocation(u,"INFINITY",!1));const h=!1,d={},p={},f={};for(let n=0;n<t.variableNames.length;n++){const r=t.variableNames[n];d[r]=e.getUniformLocation(u,r,h),d[`offset${r}`]=e.getUniformLocation(u,`offset${r}`,h),t.enableShapeUniforms&&(p[`${r}Shape`]=e.getUniformLocation(u,`${r}Shape`,h),f[`${r}TexShape`]=e.getUniformLocation(u,`${r}TexShape`,h))}let m,g,y;t.enableShapeUniforms&&(m=e.getUniformLocation(u,"outShape",h),y=e.getUniformLocation(u,"outShapeStrides",h),g=e.getUniformLocation(u,"outTexShape",h));const b=[];return t.customUniforms&&t.customUniforms.forEach(((t,n)=>{b[n]=e.getUniformLocation(u,t.name,h)})),{program:t,source:o,webGLProgram:u,uniformLocations:d,customUniformLocations:b,inShapeInfos:s,outShapeInfo:i,infLoc:l,nanLoc:c,inShapesLocations:p,inTexShapesLocations:f,outShapeLocation:m,outShapeStridesLocation:y,outTexShapeLocation:g}}(this.gpgpu,e,u,l))),d=null!=this.activeTimers;let p;d&&(p=this.startTimer()),function(e,t,n,r,a){t.program.enableShapeUniforms||(yR(t.inShapeInfos,n),yR([t.outShapeInfo],[r]));const s=r.texData.texture,i=r.texData.texShape;r.texData.isPacked?e.setOutputPackedMatrixTexture(s,i[0],i[1]):e.setOutputMatrixTexture(s,i[0],i[1]),e.setProgram(t.webGLProgram),1===Ue().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN),n.forEach(((n,r)=>{const a=t.program.variableNames[r],s=t.uniformLocations[a],i=t.uniformLocations[`offset${a}`],o=t.inShapesLocations[`${a}Shape`],u=t.inTexShapesLocations[`${a}TexShape`];if(o){const{uniformShape:r}=fR(t.program.packedInputs,n.shape,n.texData.texShape);switch(r.length){case 1:e.gl.uniform1iv(o,new Int32Array(r));break;case 2:e.gl.uniform2iv(o,new Int32Array(r));break;case 3:e.gl.uniform3iv(o,new Int32Array(r));break;case 4:e.gl.uniform4iv(o,new Int32Array(r))}}if(u&&e.gl.uniform2i(u,n.texData.texShape[0],n.texData.texShape[1]),null!=s)if(n.isUniform)if(ca.sizeFromShape(n.shape)<2)e.gl.uniform1f(s,n.uniformValues[0]);else{let t=n.uniformValues;t instanceof Float32Array||(t=new Float32Array(t)),e.gl.uniform1fv(s,t)}else null!=n.texData.slice&&null!=i&&e.gl.uniform1i(i,n.texData.slice.flatOffset),e.setInputMatrixTexture(n.texData.texture,s,r)}));const o=t.outShapeLocation;if(o)switch(r.shape.length){case 1:e.gl.uniform1iv(o,new Int32Array(r.shape));break;case 2:e.gl.uniform2iv(o,new Int32Array(r.shape));break;case 3:e.gl.uniform3iv(o,new Int32Array(r.shape));break;case 4:e.gl.uniform4iv(o,new Int32Array(r.shape))}if(t.outShapeStridesLocation){const n=ca.computeStrides(r.shape);switch(r.shape.length){case 2:e.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(n));break;case 3:e.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(n));break;case 4:e.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(n))}}t.outTexShapeLocation&&e.gl.uniform2i(t.outTexShapeLocation,r.texData.texShape[0],r.texData.texShape[1]),t.program.customUniforms&&a&&t.program.customUniforms.forEach(((n,r)=>{const s=t.customUniformLocations[r],i=a[r];if("float"===n.type)e.gl.uniform1fv(s,i);else if("vec2"===n.type)e.gl.uniform2fv(s,i);else if("vec3"===n.type)e.gl.uniform3fv(s,i);else if("vec4"===n.type)e.gl.uniform4fv(s,i);else if("int"===n.type)e.gl.uniform1iv(s,i);else if("ivec2"===n.type)e.gl.uniform2iv(s,i);else if("ivec3"===n.type)e.gl.uniform3iv(s,i);else{if("ivec4"!==n.type)throw Error(`uniform type ${n.type} is not supported yet.`);e.gl.uniform4iv(s,i)}})),e.executeProgram()}(this.gpgpu,h,u,l,r),o.forEach((e=>this.disposeIntermediateTensorInfo(e))),d&&(p=this.endTimer(p),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(p)}));const f=Ue().get("WEBGL_FLUSH_THRESHOLD");if(f>0){const e=ca.now();e-this.lastGlFlushTime>f&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=e)}if(!Ue().getBool("WEBGL_LAZILY_UNPACK")&&i.isPacked&&!1===a){const e=this.unpackTensor(s);return this.disposeIntermediateTensorInfo(s),e}return s}compileAndRun(e,t,n,r,a=!1){return n=n||t[0].dtype,this.runWebGLProgram(e,t,n,r,a)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(Ue().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach((e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]})),this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=jo((()=>{if(!Ue().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=Ue().getBool("DEBUG");Ue().set("DEBUG",!1);const t=this.abs(mh(1e-8)).dataSync()[0];if(Ue().set("DEBUG",e),t>0)return 32}return 16}))),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(e){const t=this.texData.get(e),{shape:n,dtype:r,values:a,texture:s,usage:i,isPacked:o}=t;if(null!=s)return;const u=null!=this.activeTimers;let l;u&&(l=ca.now());let c=t.texShape;if(null==c&&(c=function(e,t=!1){let n=Ue().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(t&&(n*=2,1===(e=e.map(((t,n)=>n>=e.length-2?ca.nearestLargerEven(e[n]):e[n]))).length&&(e=[2,e[0]])),2!==e.length){const t=ca.squeezeShape(e);e=t.newShape}let r=ca.sizeFromShape(e);if(e.length<=1&&r<=n)return[1,r];if(2===e.length&&e[0]<=n&&e[1]<=n)return e;if(3===e.length&&e[0]*e[1]<=n&&e[2]<=n)return[e[0]*e[1],e[2]];if(3===e.length&&e[0]<=n&&e[1]*e[2]<=n)return[e[0],e[1]*e[2]];if(4===e.length&&e[0]*e[1]*e[2]<=n&&e[3]<=n)return[e[0]*e[1]*e[2],e[3]];if(4===e.length&&e[0]<=n&&e[1]*e[2]*e[3]<=n)return[e[0],e[1]*e[2]*e[3]];if(t){const t=OF(e);let n=2,a=2;return e.length&&([n,a]=LF(e)),r=t*(n/2)*(a/2),ca.sizeToSquarishShape(r).map((e=>2*e))}return ca.sizeToSquarishShape(r)}(n,o),t.texShape=c),null!=a){const e=zF(n);let s,i=c[1],h=c[0];const d=a instanceof Uint8Array;o?([i,h]=kF(c[0],c[1]),s=new class{constructor(e,t,n=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const r=jF(),[a,s]=t;this.outputShape=e;let i="",o="result";n&&(o="floor(result * 255. + 0.5)");for(let t=0;t<=1;t++)for(let n=0;n<=1;n++){const o=2*t+n;i+=`\n          localCoords = coords;\n          if(localCoords[2] + ${n} < ${e[2]}) {\n            localCoords[2] += ${n};\n            if(localCoords[1] + ${t} < ${e[1]}) {\n              localCoords[1] += ${t};\n\n              flatIndex = getFlatIndex(localCoords);\n              offset = imod(flatIndex, 4);\n\n              flatIndex = idiv(flatIndex, 4, 1.);\n\n              r = flatIndex / ${s};\n              c = imod(flatIndex, ${s});\n              uv = (vec2(c, r) + halfCR) / vec2(${s}.0, ${a}.0);\n              values = ${r.texture2D}(A, uv);\n\n              if(offset == 0) {\n                result[${o}] = values[0];\n              } else if(offset == 1) {\n                result[${o}] = values[1];\n              } else if(offset == 2) {\n                result[${o}] = values[2];\n              } else {\n                result[${o}] = values[3];\n              }\n            }\n          }\n        `}this.userCode=`\n      ${XF(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        vec4 result = vec4(0.);\n        int flatIndex, r, c, offset;\n        ivec3 localCoords;\n        vec2 uv;\n        vec4 values;\n\n        ${i}\n\n        ${r.output} = ${o};\n      }\n    `}}(e,[h,i],d)):s=new class{constructor(e,t,n=!1){this.variableNames=["A"];const r=jF(),[a,s]=t;this.outputShape=e;let i="result";n&&(i="floor(result * 255. + 0.5)"),this.userCode=`\n      ${XF(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        int flatIndex = getFlatIndex(coords);\n        int offset = imod(flatIndex, 4);\n\n        flatIndex = idiv(flatIndex, 4, 1.);\n\n        int r = flatIndex / ${s};\n        int c = imod(flatIndex, ${s});\n        vec2 uv = (vec2(c, r) + halfCR) / vec2(${s}.0, ${a}.0);\n        vec4 values = ${r.texture2D}(A, uv);\n\n        float result;\n\n        if(offset == 0) {\n          result = values[0];\n        } else if(offset == 1) {\n          result = values[1];\n        } else if(offset == 2) {\n          result = values[2];\n        } else {\n          result = values[3];\n        }\n\n        ${r.output} = vec4(${i}, 0., 0., 0.);\n      }\n    `}}(e,[h,i],d);const p=this.makeTensorInfo([h,i],r);this.texData.get(p.dataId).usage=d?pF.PIXELS:pF.UPLOAD,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(p.dataId),i,h,a);const f=!0,m=this.runWebGLProgram(s,[p],r,null,f),g=this.texData.get(m.dataId);t.texture=g.texture,t.texShape=g.texShape,t.isPacked=g.isPacked,t.usage=g.usage,this.disposeIntermediateTensorInfo(p),this.texData.delete(m.dataId),t.values=null,u&&(this.uploadWaitMs+=ca.now()-l)}else{const e=this.acquireTexture(c,i,r,o);t.texture=e}}convertAndCacheOnCPU(e,t){const n=this.texData.get(e),{dtype:r}=n;return this.releaseGPUData(e),null!=t&&(n.values=function(e,t){if("float32"===t||"complex64"===t)return e;if("int32"===t||"bool"===t){const n="int32"===t?new Int32Array(e.length):new Uint8Array(e.length);for(let t=0;t<n.length;++t)n[t]=Math.round(e[t]);return n}throw new Error(`Unknown dtype ${t}`)}(t,r)),n.values}acquireTexture(e,t,n,r){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const e=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${e} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,r)}computeBytes(e,t){return e[0]*e[1]*ca.bytesPerElement(t)}};bD.nextDataId=0,fs.isBrowser()&&nu("webgl",(()=>new bD),2);var xD=class{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=Ap.assertAndGetBroadcastShape(t,n),this.enableShapeUniforms=bR(this.outputShape.length),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${e}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}},wD=class{constructor(e,t,n,r=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=Ap.assertAndGetBroadcastShape(t,n);const a=this.outputShape.length;this.enableShapeUniforms=bR(a);let s="";if(r)if(0===a||1===ca.sizeFromShape(this.outputShape))s="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else if(s=`\n          ${pR(a)} coords = getOutputCoords();\n        `,1===a)this.enableShapeUniforms?s+="\n            result.y = (coords + 1) >= outShape ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ":s+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const e=iD("coords",a);this.enableShapeUniforms?s+=`\n            bool nextRowOutOfBounds =\n              (${e[a-2]} + 1) >= outShape[${a} - 2];\n            bool nextColOutOfBounds =\n              (${e[a-1]} + 1) >= outShape[${a} - 1];\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `:s+=`\n            bool nextRowOutOfBounds =\n              (${e[a-2]} + 1) >= ${this.outputShape[a-2]};\n            bool nextColOutOfBounds =\n              (${e[a-1]} + 1) >= ${this.outputShape[a-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${e}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${s}\n\n        setOutput(result);\n      }\n    `}};function vD(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}var kD={kernelName:on,backendName:"webgl",kernelFunc:vD};function ID(e){const{inputs:t,backend:n}=e,{real:r,imag:a}=t,s=n.makeTensorInfo(r.shape,"complex64"),i=n.texData.get(s.dataId),o=vD({inputs:{x:r},backend:n}),u=vD({inputs:{x:a},backend:n});return i.complexTensorInfos={real:o,imag:u},s}var SD={kernelName:xt,backendName:"webgl",kernelFunc:ID},ND="return (a < 0.) ? b * a : a;",TD="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",CD={kernelName:pn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{alpha:s}=r,i=n.makeTensorInfo([],"float32",ca.createScalarValue(s,"float32")),o=Ue().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new wD(TD,a.shape,i.shape):new xD(ND,a.shape,i.shape),u=n.runWebGLProgram(o,[a,i],a.dtype);return n.disposeIntermediateTensorInfo(i),u}},$D="return (a < 0.) ? b * a : a;",_D="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",ED={kernelName:Yn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r,alpha:a}=t,s=Ue().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new wD(_D,r.shape,a.shape):new xD($D,r.shape,a.shape);return n.runWebGLProgram(s,[r,a],r.dtype)}};function AD({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:n,dtype:r}){return({inputs:a,backend:s})=>{const{x:i}=a,o=s,u=r||i.dtype;if(o.shouldExecuteOnCPU([i])&&null!=n){const e=o.texData.get(i.dataId),t=n(e.values,u);return o.makeTensorInfo(i.shape,u,t)}let l;return l=Ue().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=t?new fD(i.shape,t):new hD(i.shape,e),o.runWebGLProgram(l,[i],u)}}function FD({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:n=!1,supportsComplex:r=!1,cpuKernelImpl:a,dtype:s}){return({inputs:i,backend:o})=>{const{a:u,b:l}=i,c=o;if(r&&"complex64"===u.dtype){const t=c.texData.get(u.dataId),n=c.texData.get(l.dataId),[r,a]=[[t.complexTensorInfos.real,n.complexTensorInfos.real],[t.complexTensorInfos.imag,n.complexTensorInfos.imag]].map((t=>{const[n,r]=t,a={dataId:n.dataId,dtype:n.dtype,shape:u.shape},s={dataId:r.dataId,dtype:r.dtype,shape:l.shape},i=new xD(e,u.shape,l.shape);return c.runWebGLProgram(i,[a,s],ts(n.dtype,r.dtype))})),s=ID({inputs:{real:r,imag:a},backend:c});return c.disposeIntermediateTensorInfo(r),c.disposeIntermediateTensorInfo(a),s}const h=s||ts(u.dtype,l.dtype);if(("string"===u.dtype||"string"===l.dtype||c.shouldExecuteOnCPU([u,l]))&&null!=a){const e=c.texData.get(u.dataId).values,t=c.texData.get(l.dataId).values,n="string"===u.dtype?Ap.fromUint8ToStringArray(e):e,r="string"===u.dtype?Ap.fromUint8ToStringArray(t):t,[s,i]=a(u.shape,l.shape,n,r,h),o=c.makeTensorInfo(i,h);return c.texData.get(o.dataId).values=s,o}let d;return d=Ue().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=t?new wD(t,u.shape,l.shape,n):new xD(e,u.shape,l.shape),c.runWebGLProgram(d,[u,l],h)}}function RD(e,t=!1){if("linear"===e)return"return x;";if("relu"===e)return t?"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n";if("elu"===e)return t?"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n":"return (x >= 0.0) ? x : (exp(x) - 1.0);";if("relu6"===e)return t?"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n";if("prelu"===e)return t?_D:$D;if("leakyrelu"===e)return t?TD:ND;if("sigmoid"===e)return"return 1.0 / (1.0 + exp(-1.0 * x));";throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}var DD=class{constructor(e,t,n,r=!1,a=!1,s=!1,i=null,o=!1,u=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n;const l=r?e[1]:e[2],c=Math.ceil(l/2),h=r?"i * 2, rc.y":"rc.y, i * 2",d=a?"rc.z, i * 2":"i * 2, rc.z",p=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=a?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let m="",g="";i&&(m=o?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${i}\n        }`:u?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${i}\n        }`:`vec4 activation(vec4 x) {\n          ${i}\n        }`,g="result = activation(result);");const y=s?"result += getBiasAtOutCoords();":"";s&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),u&&this.variableNames.push("leakyreluAlpha");let b="rc.x",x="rc.x";e[0]<t[0]?b=`int(min(float(rc.x), ${e[0]-1}.))`:t[0]<e[0]&&(x=`int(min(float(rc.x), ${t[0]-1}.))`),this.userCode=`\n      ${m}\n\n      const float sharedDimension = ${c}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        for (int i = 0; i < ${c}; i++) {\n          int batchA = ${b};\n          int batchB = ${x};\n          vec4 a = getMatrixA(batchA, ${h});\n          vec4 b = getMatrixB(batchB, ${d});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${p[0]} * ${f[0]});\n          result += (${p[1]} * ${f[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${y}\n\n        ${g}\n\n        setOutput(result);\n      }\n    `}},MD=class{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=Ap.assertAndGetBroadcastShape(t,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${e}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}},OD="return a * b;";function LD(e){const{inputs:t,backend:n}=e,{a:r,b:a}=t,s=Ap.upcastType(r.dtype,a.dtype);if("complex64"===r.dtype){const e=n.texData.get(r.dataId),t=n.texData.get(a.dataId),s=new MD("return areal * breal - aimag * bimag;",r.shape,a.shape),i=new MD("return areal * bimag + aimag * breal;",r.shape,a.shape),o=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:r.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:r.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:a.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:a.shape}],u=n.runWebGLProgram(s,o,"float32"),l=n.runWebGLProgram(i,o,"float32"),c=ID({inputs:{real:u,imag:l},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(l),c}if(n.shouldExecuteOnCPU([r,a])){const e=n.texData.get(r.dataId),t=n.texData.get(a.dataId),[i,o]=PR(r.shape,a.shape,e.values,t.values,s),u=n.makeTensorInfo(o,s);return n.texData.get(u.dataId).values=i,u}let i;return i=Ue().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new wD(OD,r.shape,a.shape):new xD(OD,r.shape,a.shape),n.runWebGLProgram(i,[r,a],s)}var zD={kernelName:zn,backendName:"webgl",kernelFunc:LD};function PD(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{shape:s}=r,i=n,o=ca.sizeFromShape(a.shape),u=ca.inferFromImplicitShape(s,o),l=ca.sizeFromShape(u);ca.assert(o===l,(()=>`The new shape (${u}) has ${l} elements and the old shape (${a.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`));const c=i.texData.get(a.dataId);return!c.isPacked||BF(a.shape,u)||null!==c.texture&&BF(c.shape,u)?(i.incRef(a.dataId),{dataId:a.dataId,shape:u,dtype:a.dtype}):function(e,t,n){const r=[OF(e.shape),...LF(e.shape)],a={dtype:e.dtype,shape:r,dataId:e.dataId},s=[OF(t),...LF(t)],i=new oD(s,r),o=n.runWebGLProgram(i,[a],e.dtype,null,!0);return{dataId:o.dataId,shape:t,dtype:o.dtype}}(a,u,i)}var BD={kernelName:nr,backendName:"webgl",kernelFunc:PD},WD=class{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:a,outSize:s}=e;this.outputShape=[r,s];const i=4*Math.floor(n/4),o=n%4;let u="sumValue += dot(values, ones);";if(null!=t){const e=1/t;u=`sumValue += dot(values * ${ca.isInt(e)?e.toPrecision(2):e}, ones);`}let l="";a%n>0&&(l=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${l}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${i}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${u}\n        }\n\n        int inIdx = inOffset + ${i};\n        if (${1===o}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${u}\n        } else if (${2===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${u}\n        } else if (${3===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${u}\n        }\n        setOutput(sumValue);\n      }\n    `}},VD=class{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:a,outSize:s}=e;this.outputShape=[r,s];let i="0.0",o="";"prod"===t?i="1.0":"min"===t?(i="1.0 / 1e-20",o="min"):"max"===t&&(i="-1.0 / 1e-20",o="max");let u=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===t?u="sumValue":"prod"===t?u="prodValue":"all"===t?u="allValue":"any"===t&&(u="anyValue");const l=4*Math.floor(n/4),c=n%4;let h=`\n      if (${"sum"===t}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===t}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${o}(values, minMaxValue);\n        if (${"min"===t} || ${"max"===t}) {\n          minMaxValue = ${o}(values, minMaxValue);\n          bvec4 isNaN = isnan(values);\n          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {\n            minMaxValue = vec4(NAN);\n          }\n        }\n      }\n    `,d="vec4";"all"===t?(i="1.0",h="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",d="bvec4"):"any"===t&&(i="0.0",h="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",d="bvec4");let p="";a%n>0&&(p=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${i};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${p}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${i});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${l}; i += 4) {\n          int inIdx = inOffset + i;\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${h}\n        }\n\n        int inIdx = inOffset + ${l};\n        if (${1===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${2===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${3===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${h}\n        }\n        setOutput(${u});\n      }\n    `}};function UD(e,t,n,r){const a=function(e){const t=[];for(;0===t.length||1!==t[t.length-1].outSize;){const n=t.length?t[t.length-1].outSize:e[1],r=Ap.computeOptimalWindowSize(n);t.push({inSize:n,windowSize:r,outSize:Math.ceil(n/r)})}return t}(e.shape);let s=e;for(let i=0;i<a.length;i++){const{inSize:o,windowSize:u,outSize:l}=a[i];let c,h;c="mean"===n?0===i?new WD({windowSize:u,inSize:o,batchSize:e.shape[0],outSize:l},o):new WD({windowSize:u,inSize:o,batchSize:e.shape[0],outSize:l}):new VD({windowSize:u,inSize:o,batchSize:e.shape[0],outSize:l},n),h=s,s=r.runWebGLProgram(c,[s],t),h.dataId!==e.dataId&&r.disposeIntermediateTensorInfo(h)}return s}function GD(e,t,n){const r=Ue().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const r=pR(this.rank),a=sD("rc",this.rank),s=new Array(this.rank);for(let e=0;e<t.length;e++)s[t[e]]=a[e];const i=`vec2(${s.slice(-2).join()})`,o=`++${a[this.rank-1]} < ${n[this.rank-1]}`,u=`getChannel(getA(${s.join()}), ${i})`;this.userCode=`\n    void main() {\n      ${r} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${u};\n      if(${o}) {\n        result[1] = ${u};\n      }\n      --${a[this.rank-1]};\n      if(++${a[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${u};\n        if(${o}) {\n          result[3] = ${u};\n        }\n      }\n      setOutput(result);\n    }\n    `}}(e.shape,t):new class{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];this.outputShape=n,this.rank=n.length;const r=pR(this.rank),a=function(e){const t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(t);for(let t=0;t<e.length;t++)r[e[t]]=n[t];return r.join()}(t);this.userCode=`\n    void main() {\n      ${r} resRC = getOutputCoords();\n      setOutput(getA(${a}));\n    }\n    `}}(e.shape,t);return n.runWebGLProgram(r,[e],e.dtype)}function HD(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;return function(e,t,n,r){const a=t,s=e.shape.length,i=ca.parseAxisParam(a,e.shape);let o=i;const u=Ap.getAxesPermutation(o,s),l=null!=u;let c=e;l&&(c=GD(e,u,r),o=Ap.getInnerMostAxes(o.length,s)),Ap.assertAxesAreInnerMostDims("sum",o,s);const[h,d]=Ap.computeOutAndReduceShapes(c.shape,o);let p=h;n&&(p=Ap.expandShapeToKeepDim(h,i));const f=ca.sizeFromShape(d),m=PD({inputs:{x:c},attrs:{shape:[ca.sizeFromShape(e.shape)/f,f]},backend:r}),g=UD(m,ns(e.dtype),"sum",r),y=PD({inputs:{x:g},attrs:{shape:p},backend:r});return r.disposeIntermediateTensorInfo(m),r.disposeIntermediateTensorInfo(g),l&&r.disposeIntermediateTensorInfo(c),y}(a,s,i,n)}var jD={kernelName:vr,backendName:"webgl",kernelFunc:HD};function qD(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{perm:s}=r,i=n,o=a.shape.length,u=new Array(o);for(let e=0;e<u.length;e++)u[e]=a.shape[s[e]];let l;if(i.shouldExecuteOnCPU([a])){const e=i.texData.get(a.dataId).values,t=rD(e,a.shape,a.dtype,s,u);l=i.makeTensorInfo(u,a.dtype),i.texData.get(l.dataId).values=t}else l=GD(a,s,i);return l}var KD={kernelName:Vr,backendName:"webgl",kernelFunc:qD};function XD({a:e,b:t,transposeA:n,transposeB:r,backend:a,bias:s=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:u=null}){const l=e.shape.length,c=t.shape.length,h=n?e.shape[l-2]:e.shape[l-1],d=r?t.shape[c-1]:t.shape[c-2],p=n?e.shape[l-1]:e.shape[l-2],f=r?t.shape[c-2]:t.shape[c-1],m=e.shape.slice(0,-2),g=t.shape.slice(0,-2),y=ca.sizeFromShape(m),b=ca.sizeFromShape(g),x=y===b||1===y||1===b;ca.assert(l>=2&&c>=2&&x,(()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${m}) and (${g}).`));const w=(y>b?e.shape.slice(0,-2):t.shape.slice(0,-2)).concat([p,f]);ca.assert(h===d,(()=>`Error in matMul: inner shapes (${h}) and (${d}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${r} must match.`));const v=n?[y,h,p]:[y,p,h],k=r?[b,f,d]:[b,d,f],I=PD({inputs:{x:e},backend:a,attrs:{shape:v}}),S=PD({inputs:{x:t},backend:a,attrs:{shape:k}}),N=[I,S],T=Math.max(y,b),C=n?I.shape[1]:I.shape[2],$=null!=s,_=null!=i,E="leakyrelu"===u,A=null!=u?RD(u,!0):null;let F;if((1===p||1===f)&&C>1e3&&!1===($||_||E||null!=A)){let e=I,t=S;n&&(e=qD({inputs:{x:I},backend:a,attrs:{perm:[0,2,1]}}),N.push(e)),r&&(t=qD({inputs:{x:S},backend:a,attrs:{perm:[0,2,1]}}),N.push(t));const s=1===f;let i=e;1!==f&&(i=PD({inputs:{x:e},backend:a,attrs:{shape:[T,C,1]}}),N.push(i));const o=1===f?2:1;let u=t;s&&(u=PD({inputs:{x:t},backend:a,attrs:{shape:[T,1,C]}}),N.push(u));const l=LD({inputs:{a:i,b:u},backend:a});F=HD({inputs:{x:l},backend:a,attrs:{axis:o,keepDims:!0}}),N.push(l)}else{const u=ts(e.dtype,t.dtype),l=new DD(v,k,[T,p,f],n,r,$,A,_,E),c=[I,S];if(null!=s&&c.push(s),_&&c.push(i),E){const e=a.makeTensorInfo([],"float32",ca.createScalarValue(o,"float32"));c.push(e),N.push(e)}F=a.runWebGLProgram(l,c,u)}const R=PD({inputs:{x:F},backend:a,attrs:{shape:w}});N.push(F);for(const e of N)a.disposeIntermediateTensorInfo(e);return R}var YD={kernelName:Yr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a,b:s,bias:i,preluActivationWeights:o}=t,{transposeA:u,transposeB:l,activation:c,leakyreluAlpha:h}=r;return XD({a,b:s,transposeA:u,transposeB:l,backend:n,bias:i,preluActivationWeights:o,leakyreluAlpha:h,activation:c})}},ZD="return abs(x);",JD={kernelName:Ke,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])&&"complex64"!==r.dtype){const e=n.texData.get(r.dataId),t=HR(e.values);return n.makeTensorInfo(r.shape,r.dtype,t)}let a;return a=Ue().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new fD(r.shape,ZD):new hD(r.shape,ZD),n.runWebGLProgram(a,[r],r.dtype)}},QD=AD({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),eM={kernelName:Xe,backendName:"webgl",kernelFunc:QD},tM=AD({opSnippet:"if (isnan(x)) return x;\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),nM={kernelName:Ye,backendName:"webgl",kernelFunc:tM},rM="return a + b;",aM=FD({opSnippet:rM,packedOpSnippet:rM,supportsComplex:!0,cpuKernelImpl:xR}),sM={kernelName:Ze,backendName:"webgl",kernelFunc:aM},iM={kernelName:Je,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r}=t,a=n;if(1===a.length)return vD({inputs:{x:a[0]},backend:r});if(a.length>Ue().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const t=Math.floor(a.length/2),n=e({inputs:a.slice(0,t),backend:r}),s=e({inputs:a.slice(t),backend:r});return e({inputs:[n,s],backend:r})}const s=a.map((e=>e.dtype)).reduce(((e,t)=>ts(e,t))),i=a.map((e=>e.shape)),o=Ue().getBool("WEBGL_PACK")?new class{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`vec4 v${e} = get${e}AtOutCoords();`)}));const r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${r};\n        setOutput(result);\n      }\n    `}}(a[0].shape,i):new class{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`float v${e} = get${e}AtOutCoords();`)}));const r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${r};\n        setOutput(result);\n      }\n    `}}(a[0].shape,i);return r.runWebGLProgram(o,a,s)}},oM={kernelName:Qe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=a.shape.length,u=ca.parseAxisParam(s,a.shape);let l=u;const c=Ap.getAxesPermutation(l,o);let h=a;null!=c&&(h=qD({inputs:{x:a},backend:n,attrs:{perm:c}}),l=Ap.getInnerMostAxes(l.length,o)),Ap.assertAxesAreInnerMostDims("all",l,o);const[d,p]=Ap.computeOutAndReduceShapes(h.shape,l),f=PD({inputs:{x:h},backend:n,attrs:{shape:[-1,ca.sizeFromShape(p)]}}),m=UD(f,f.dtype,"all",n);let g;return g=PD(i?{inputs:{x:m},backend:n,attrs:{shape:Ap.expandShapeToKeepDim(d,u)}}:{inputs:{x:m},backend:n,attrs:{shape:d}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),g}},uM={kernelName:et,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=a.shape.length,u=ca.parseAxisParam(s,a.shape);let l=u;const c=Ap.getAxesPermutation(l,o);let h=a;null!=c&&(h=qD({inputs:{x:a},backend:n,attrs:{perm:c}}),l=Ap.getInnerMostAxes(l.length,o)),Ap.assertAxesAreInnerMostDims("any",l,o);const[d,p]=Ap.computeOutAndReduceShapes(h.shape,l),f=PD({inputs:{x:h},backend:n,attrs:{shape:[-1,ca.sizeFromShape(p)]}}),m=UD(f,f.dtype,"any",n);let g;return g=PD(i?{inputs:{x:m},backend:n,attrs:{shape:Ap.expandShapeToKeepDim(d,u)}}:{inputs:{x:m},backend:n,attrs:{shape:d}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),g}};function lM(e,t,n,r=null){let a=t.shape[0],s=t.shape[1];null!=r&&(a=r.shape[0],s=r.shape[1]);const i=Ap.computeOptimalWindowSize(s),o={windowSize:i,inSize:s,batchSize:a,outSize:Math.ceil(s/i)},u=new class{constructor(e,t,n){this.variableNames=["A"];const{windowSize:r,batchSize:a,outSize:s}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[a,s];const i="max"===t?">":"<",o=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${r};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${r}; i++) {\n          int inIdx = ${o};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${i} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}(o,n,null==r),l=[t];null!=r&&l.push(r);const c=e.runWebGLProgram(u,l,"int32");if(1===c.shape[1])return c;const h=lM(e,t,n,c);return e.disposeIntermediateTensorInfo(c),h}function cM(e,t,n,r=null){const a=null!=r?r.shape:t.shape,s=a[a.length-1],i=Ap.computeOptimalWindowSize(s),o=new class{constructor(e,t,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,ca.assert(e.length>2,(()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`));const a=e[e.length-1],s=Math.ceil(a/t);this.outputShape=e.slice(0,-1),s>1&&this.outputShape.push(s),r||this.variableNames.push("bestIndicesA");const i=this.outputShape,o=i.length,u=pR(o),l=iD("coords",o);let c,h;if(1===s){h=o+1;const e=pR(h);c=`\n        ${e} sourceLocR = ${e}(${l.join()}, 0);\n        ++${l[o-1]};\n        ${e} sourceLocG = ${e}(${l.join()}, 0);\n        ++${l[o-2]};\n        ${e} sourceLocA = ${e}(${l.join()}, 0);\n        --${l[o-1]};\n        ${e} sourceLocB = ${e}(${l.join()}, 0);\n        --${l[o-2]};`}else h=o,c=`\n        ${u} sourceLocR = coords;\n        ++${l[o-1]};\n        ${u} sourceLocG = coords;\n        ++${l[o-2]};\n        ${u} sourceLocA = coords;\n        --${l[o-1]};\n        ${u} sourceLocB = coords;\n        --${l[o-2]};`;const d=["x","y","z","w","u","v"].slice(0,h),p="."+d[h-1],f=d.map((e=>"int "+e)),m=iD("sourceLocR",h-1).concat("inIdx.r"),g=iD("sourceLocG",h-1).concat("inIdx.g"),y=iD("sourceLocB",h-1).concat("inIdx.b"),b=iD("sourceLocA",h-1).concat("inIdx.a"),x="max"===n?"greaterThan":"lessThan",w=r?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${m.join()}),\n                             getBestIndicesAChannel(${g.join()}),\n                             getBestIndicesAChannel(${y.join()}),\n                             getBestIndicesAChannel(${b.join()})));`,v=`vec4(\n            getAChannel(${m.join()}),\n            hasNextCol ? getAChannel(${g.join()}) : 0.,\n            hasNextRow ? getAChannel(${y.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${b.join()}) : 0.)`,k=r?"":`\n      float getBestIndicesAChannel(${f.join()}) {\n        return getChannel(getBestIndicesA(${d.join()}),\n                                          vec2(${d.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${f.join()}) {\n        return getChannel(getA(${d.join()}),\n                               vec2(${d.slice(-2).join()}));\n      }\n      ${k}\n      void main() {\n        ${u} coords = getOutputCoords();\n        bool hasNextCol = ${l[o-1]} < ${i[o-1]-1};\n        bool hasNextRow = ${l[o-2]} < ${i[o-2]-1};\n        ${c}\n        ivec4 srcIdx = ivec4(sourceLocR${p}, sourceLocG${p},\n          sourceLocB${p}, sourceLocA${p}) * ${t};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${v};\n\n        for (int i = 0; i < ${t}; i++) {\n          inIdx = srcIdx;\n          ${w}\n          vec4 candidate = ${v};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${x}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}(a,i,n,null==r),u=null==r?[t]:[t,r],l=e.runWebGLProgram(o,u,"int32");if(l.shape.length===t.shape.length){const r=cM(e,t,n,l);return e.disposeIntermediateTensorInfo(l),r}return l}function hM(e,t,n,r){const a=[n];if(Ap.assertAxesAreInnerMostDims("arg"+r.charAt(0).toUpperCase()+r.slice(1),a,t.shape.length),!Ue().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){const n=[],[s,i]=Ap.computeOutAndReduceShapes(t.shape,a),o=ca.sizeFromShape(i),u=PD({inputs:{x:t},backend:e,attrs:{shape:[-1,o]}});n.push(u);const l=lM(e,u,r);n.push(l);const c=PD({inputs:{x:l},backend:e,attrs:{shape:s}});return n.forEach((t=>e.disposeIntermediateTensorInfo(t))),c}return cM(e,t,r)}var dM={kernelName:tt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r;let i=ca.parseAxisParam(s,a.shape);const o=Ap.getAxesPermutation(i,a.shape.length);let u=a;const l=[];null!=o&&(u=qD({inputs:{x:a},backend:n,attrs:{perm:o}}),l.push(u),i=Ap.getInnerMostAxes(i.length,u.shape.length)),Ap.assertAxesAreInnerMostDims("argMax",[i[0]],u.shape.length);const c=hM(n,u,i[0],"max");return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}},pM={kernelName:nt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r;let i=ca.parseAxisParam(s,a.shape);const o=Ap.getAxesPermutation(i,a.shape.length);let u=a;const l=[];null!=o&&(u=qD({inputs:{x:a},backend:n,attrs:{perm:o}}),l.push(u),i=Ap.getInnerMostAxes(i.length,u.shape.length)),Ap.assertAxesAreInnerMostDims("argMin",[i[0]],u.shape.length);const c=hM(n,u,i[0],"min");return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}},fM=AD({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),mM={kernelName:rt,backendName:"webgl",kernelFunc:fM},gM=AD({opSnippet:"if (isnan(x)) return x;return log(x + sqrt(x * x + 1.0));"}),yM={kernelName:at,backendName:"webgl",kernelFunc:gM},bM=AD({opSnippet:"if (isnan(x)) return x;\n  return atan(x);\n"}),xM={kernelName:st,backendName:"webgl",kernelFunc:bM},wM=FD({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),vM={kernelName:ot,backendName:"webgl",kernelFunc:wM},kM=AD({opSnippet:"if (isnan(x)) return x;\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),IM={kernelName:it,backendName:"webgl",kernelFunc:kM},SM=class{constructor(e,t,n,r=!1,a=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const s=e.filterWidth,i=e.strideHeight,o=e.strideWidth,u=e.dilationHeight,l=e.dilationWidth,c=e.effectiveFilterHeight,h=e.effectiveFilterWidth,d=e.padInfo.top,p=e.padInfo.left;this.outputShape=e.outShape;const f="avg"===t,m=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,g=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`;let y="0.0";if(f||(y="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec2 strides = ivec2(${i}, ${o});\n        const ivec2 pads = ivec2(${d}, ${p});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${c};\n              wR += ${u}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${h};\n                wC += ${l}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${t} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${r?a?m:g:`wR * ${h} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let b=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(b="avgValue / count");const x=4*Math.floor(s/4),w=s%4,v=`\n      if (${f}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${i}, ${o});\n      const ivec2 pads = ivec2(${d}, ${p});\n      const float initializationValue = ${y};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${y});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${c};\n            wR += ${u}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${x}; wC += 4) {\n            int xC = xCCorner + wC * ${l};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              getValue(batch, xR, xC + 2 * ${l}, d),\n              getValue(batch, xR, xC + 3 * ${l}, d)\n            );\n\n            ${v}\n          }\n\n          int xC = xCCorner + ${x};\n          if (${1===w}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${v}\n          } else if (${2===w}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${v}\n          } else if (${3===w}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              getValue(batch, xR, xC + 2 * ${l}, d),\n              initializationValue\n            );\n\n            ${v}\n          }\n        }\n        setOutput(${b});\n      }\n    `}},NM=class{constructor(e,t,n,r=!1,a=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const s=e.filterWidth,i=e.strideDepth,o=e.strideHeight,u=e.strideWidth,l=e.dilationDepth,c=e.dilationHeight,h=e.dilationWidth,d=e.effectiveFilterDepth,p=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.front,g=e.padInfo.top,y=e.padInfo.left;this.outputShape=e.outShape;const b="avg"===t;let x="0.0";if(b||(x="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${i}, ${o}, ${u});\n        const ivec3 pads = ivec3(${m}, ${g}, ${y});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${d};\n              wD += ${l}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${p};\n                wR += ${c}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${f};\n                  wC += ${h}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${t} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${r?a?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${p} * ${f} +\n                      wR * ${f} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let w=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(w="avgValue / count");const v=4*Math.floor(s/4),k=s%4,I=`\n      if (${b}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${i}, ${o}, ${u});\n      const ivec3 pads = ivec3(${m}, ${g}, ${y});\n      const float initializationValue = ${x};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${x});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${d};\n            wD += ${l}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${p};\n            wR += ${c}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${v}; wC += 4) {\n              int xC = xCCorner + wC * ${h};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${h}, ch)\n              );\n\n              ${I}\n            }\n\n            int xC = xCCorner + ${v};\n            if (${1===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${2===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${3===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                initializationValue\n              );\n\n              ${I}\n            }\n          }\n          setOutput(${w});\n        }\n      }\n    `}},TM={kernelName:ut,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t;GF(a,"avgPool");const{filterSize:s,strides:i,pad:o,dimRoundingMode:u}=r;ca.assert(Ap.eitherStridesOrDilationsAreOne(i,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const l=Ap.computePool2DInfo(a.shape,s,i,1,o,u);if(1===l.filterWidth&&1===l.filterHeight&&ca.arraysEqual(l.inShape,l.outShape))return vD({inputs:{x:a},backend:n});const c=new SM(l,"avg",!1);return n.runWebGLProgram(c,[a],"float32")}},CM={kernelName:ct,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:u,dataFormat:l}=r,c=Ap.computePool3DInfo(a.shape,s,i,[1,1,1],o,u,l),h=new NM(c,"avg",!1);return n.runWebGLProgram(h,[a],"float32")}},$M={kernelName:ht,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,i=s,{filterSize:o,strides:u,pad:l,dimRoundingMode:c}=r,h=Ap.computePool3DInfo(i.shape,o,u,[1,1,1],l,c),d=new class{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,a=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,u=e.dilationHeight,l=e.dilationWidth,c=e.effectiveFilterDepth,h=e.effectiveFilterHeight,d=e.effectiveFilterWidth,p=c-1-e.padInfo.front,f=h-1-e.padInfo.top,m=d-1-e.padInfo.left,g=1/(t*n*r);this.userCode=`\n      const ivec3 pads = ivec3(${p}, ${f}, ${m});\n      const float avgMultiplier = float(${g});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${c};\n            wD += ${o}) {\n          float dyD = float(dyDCorner + wD) / ${a}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${h};\n              wR += ${u}) {\n            float dyR = float(dyRCorner + wR) / ${s}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${d};\n                wC += ${l}) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(h);return n.runWebGLProgram(d,[a],i.dtype)}},_M={kernelName:lt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,i=s;GF([a,s],"avgPoolGrad");const{filterSize:o,strides:u,pad:l}=r,c=Ap.computePool2DInfo(i.shape,o,u,1,l),h=new class{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterHeight,u=e.effectiveFilterWidth,l=o-1-e.padInfo.top,c=u-1-e.padInfo.left,h=1/(t*n);this.userCode=`\n      const ivec2 pads = ivec2(${l}, ${c});\n      const float avgMultiplier = float(${h});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${o};\n            wR += ${s}) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${u};\n            wC+= ${i}) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(c);return n.runWebGLProgram(h,[a],i.dtype)}},EM={kernelName:dt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a,b:s}=t,{transposeA:i,transposeB:o}=r;return XD({a,b:s,transposeA:i,transposeB:o,backend:n})}},AM={kernelName:tn,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,mean:a,variance:s,offset:i,scale:o}=e;ca.assert(a.shape.length===s.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),ca.assert(null==i||a.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),ca.assert(null==o||a.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let{varianceEpsilon:u}=n;null==u&&(u=.001);const l=[r,a,s];let c=null;null!=i&&(c=i.shape,l.push(i));let h=null;null!=o&&(h=o.shape,l.push(o));const d=Ue().getBool("WEBGL_PACK_NORMALIZATION")?new class{constructor(e,t,n,r,a,s){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],Ap.assertAndGetBroadcastShape(e,t),Ap.assertAndGetBroadcastShape(e,n);let i="vec4(0.0)";null!=r&&(Ap.assertAndGetBroadcastShape(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="vec4(1.0)";null!=a&&(Ap.assertAndGetBroadcastShape(e,a),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        vec4 offset = ${i};\n        vec4 scale = ${o};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${s}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}(r.shape,a.shape,s.shape,c,h,u):new class{constructor(e,t,n,r,a,s){this.outputShape=[],this.variableNames=["x","mean","variance"],Ap.assertAndGetBroadcastShape(e,t),Ap.assertAndGetBroadcastShape(e,n);let i="0.0";null!=r&&(Ap.assertAndGetBroadcastShape(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="1.0";null!=a&&(Ap.assertAndGetBroadcastShape(e,a),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${i};\n        float scale = ${o};\n        float inv = scale * inversesqrt(variance + float(${s}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}(r.shape,a.shape,s.shape,c,h,u);return t.runWebGLProgram(d,l,l[0].dtype)}},FM=["x","y","z","w","u","v"];function RM(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:s,size:i}=r,[o,u]=ro.parseSliceParams(a,s,i);if(ro.assertParamsValid(a,o,u),0===ca.sizeFromShape(u))return n.makeTensorInfo(u,a.dtype,[]);if(n.shouldExecuteOnCPU([a])||"string"===a.dtype){const e=n.texData.get(a.dataId),t=jR(e.values,o,u,a.shape,a.dtype);return n.makeTensorInfo(u,a.dtype,t)}const{isPacked:l}=n.texData.get(a.dataId),c=ro.isSliceContinous(a.shape,o,u);if(l||!c){const e=Ue().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new class{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const t=pR(this.rank),n=iD("coords",this.rank),r=iD("sourceLoc",this.rank),a=1===this.rank?"sourceLoc":`vec2(${r.slice(-2).join()})`,s=`getChannel(getSource(${r.join()}), ${a})`,i=`\n      result.x = ${s};\n      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n        ++${r[this.rank-1]};\n        result.y = ${s};\n        --${r[this.rank-1]};\n      }\n    `,o=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {\n        ++${r[this.rank-2]};\n        result.z = ${s};\n        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n          ++${r[this.rank-1]};\n          result.w = ${s};\n        }\n      }\n    `,u=this.rank<=4?`sourceLoc = coords +\n            ${t}(${e.map(((e,t)=>`start[${t}]`)).join()});`:e.map(((e,t)=>`${r[t]} = ${n[t]} + start[${t}];`)).join("\n");this.userCode=`\n      void main() {\n        ${t} coords = getOutputCoords();\n        ${t} sourceLoc;\n        ${u}\n        vec4 result = vec4(0.);\n        ${i}\n        ${o}\n        setOutput(result);\n      }\n    `}}(u):new class{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=pR(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const n=function(e){if(1===e)return"sourceLoc";if(e<=6)return FM.slice(0,e).map((e=>"sourceLoc."+e)).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}(this.rank);let r;r=`\n        ${t} sourceLoc;\n        ${t} coords = getOutputCoords();\n        ${e.map(((e,t)=>`sourceLoc.${FM[t]} = start[${t}] + coords.${FM[t]};`)).join("\n")}\n      `,this.userCode=`\n      void main() {\n        ${r}\n        setOutput(getSource(${n}));\n      }\n    `}}(u),t=[o];return n.runWebGLProgram(e,[a],a.dtype,t)}return n.uploadToGPU(a.dataId),function(e,t,n,r){const a=r.texData.get(e.dataId),s=r.makeTensorInfo(n,e.dtype),i=r.texData.get(s.dataId);Object.assign(i,a),i.refCount=1,i.shape=n,i.dtype=e.dtype;let o=ro.computeFlatOffset(t,ca.computeStrides(e.shape));a.slice&&(o+=a.slice.flatOffset),i.slice={flatOffset:o,origDataId:a.slice&&a.slice.origDataId||e.dataId};const u=r.dataRefCount.get(i.slice.origDataId)||1;return r.dataRefCount.set(i.slice.origDataId,u+1),s}(a,o,u,n)}var DM={kernelName:fr,backendName:"webgl",kernelFunc:RM},MM={kernelName:pt,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,crops:i}=r;ca.assert(a.shape.length<=4,(()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"));const o=s.reduce(((e,t)=>e*t)),u=Ap.getReshaped(a.shape,s,o),l=Ap.getPermuted(u.length,s.length),c=Ap.getReshapedPermuted(a.shape,s,o),h=Ap.getSliceBeginCoords(i,s.length),d=Ap.getSliceSize(c,i,s.length),p=[],f=PD({inputs:{x:a},backend:n,attrs:{shape:u}}),m=qD({inputs:{x:f},backend:n,attrs:{perm:l}}),g=PD({inputs:{x:m},backend:n,attrs:{shape:c}}),y=RM({inputs:{x:g},backend:n,attrs:{begin:h,size:d}});return p.push(f),p.push(m),p.push(g),p.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}},OM={kernelName:ft,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i}=r,o=n.readSync(a.dataId),u=n.readSync(s.dataId),l=wR(o,u,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,l)}},LM=FD({opSnippet:"return float(a != b);",cpuKernelImpl:WR,dtype:"bool"}),zM={kernelName:Bn,backendName:"webgl",kernelFunc:LM};function PM(e){const{inputs:t,backend:n}=e,{input:r}=t;return vD({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.real},backend:n})}var BM={kernelName:Qn,backendName:"webgl",kernelFunc:PM},WM={kernelName:gt,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r,attrs:a}=t,{x:s}=n,{dtype:i}=a;if("complex64"===i){if("complex64"===s.dtype)return vD({inputs:{x:s},backend:r});const t=Cc(s.shape),n=e({inputs:{x:s},backend:r,attrs:{dtype:"float32"}}),a=ID({inputs:{real:n,imag:t},backend:r});return t.dispose(),r.disposeIntermediateTensorInfo(n),a}if("complex64"===s.dtype){const t=PM({inputs:{input:s},backend:r}),n=e({inputs:{x:t},backend:r,attrs:{dtype:i}});return r.disposeIntermediateTensorInfo(t),n}if(!ca.hasEncodingLoss(s.dtype,i)){const e=vD({inputs:{x:s},backend:r});return{dataId:e.dataId,shape:e.shape,dtype:i}}if("int32"===i)return function(e,t){const n=new hD(e.shape,"return float(int(x));"),r=t.runWebGLProgram(n,[e],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}(s,r);if("bool"===i){const e=r.makeTensorInfo([],"bool",ca.getTypedArrayFromDType("bool",1)),t=LM({inputs:{a:s,b:e},backend:r});return r.disposeIntermediateTensorInfo(e),t}throw new Error(`Error in Cast: failed to cast ${s.dtype} to ${i}`)}},VM="return ceil(x);",UM=AD({opSnippet:VM,packedOpSnippet:VM,cpuKernelImpl:kR}),GM={kernelName:yt,backendName:"webgl",kernelFunc:UM},HM={kernelName:bt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{clipValueMin:s,clipValueMax:i}=r;let o;o=Ue().getBool("WEBGL_PACK_CLIP")?new class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}}(a.shape):new class{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}}(a.shape);const u=[[s],[i]];return n.runWebGLProgram(o,[a],a.dtype,u)}};function jM(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}var qM={kernelName:wt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,a=n.texData.get(r.dataId),s=new class{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}(r.shape),i=[jM(r,a.complexTensorInfos.real),jM(r,a.complexTensorInfos.imag)];return n.runWebGLProgram(s,i,i[0].dtype)}};function KM(e,t,n){const r=e.indexOf(t);return e.map(((e,t)=>t===r?`${e} - ${n}`:e)).join()}function XM(e){const{inputs:t,backend:n}=e,{input:r}=t;return vD({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.imag},backend:n})}var YM={kernelName:ln,backendName:"webgl",kernelFunc:XM};function ZM(e,t,n){const r=e[0].dtype;if("complex64"===r){const r=e.map((e=>PM({inputs:{input:e},backend:n}))),a=e.map((e=>XM({inputs:{input:e},backend:n}))),s=ZM(r,t,n),i=ZM(a,t,n),o=ID({inputs:{real:s,imag:i},backend:n});return r.forEach((e=>n.disposeIntermediateTensorInfo(e))),a.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),o}let a=n.shouldExecuteOnCPU(e);if("string"===r&&(a=!0),a){const a=e.map((e=>{const r=ca.sizeFromShape(e.shape.slice(t));return PD({inputs:{x:e},backend:n,attrs:{shape:[-1,r]}})})),s=a.map((e=>({vals:n.readSync(e.dataId),shape:e.shape}))),i=Ap.computeOutShape(a.map((e=>e.shape)),1),o=1===a[0].shape[0],u=IR(s,i,r,o),l=Ap.computeOutShape(e.map((e=>e.shape)),t),c=n.makeTensorInfo(l,r,u);return a.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}if(e.length>Ue().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const r=Math.floor(e.length/2),a=ZM(e.slice(0,r),t,n),s=ZM(e.slice(r),t,n),i=ZM([a,s],t,n);return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),i}if(Ue().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&e[0].shape.length>1){const a=new class{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=Ap.computeOutShape(e,t);const n=this.outputShape,r=n.length,a=pR(r),s=iD("coords",r),i=["x","y","z","w","u","v"].slice(0,r);this.variableNames=e.map(((e,t)=>`T${t}`));const o=new Array(e.length-1);o[0]=e[0][t];for(let n=1;n<o.length;n++)o[n]=o[n-1]+e[n][t];const u=i[t],l=i.slice(-2),c=i.join();let h=`if (${u} < ${o[0]}) {\n        return getChannel(\n            getT0(${c}), vec2(${l.join()}));\n        }`;for(let e=1;e<o.length;e++){const t=o[e-1];h+=`\n        if (${u} < ${o[e]}  && ${u} >= ${o[e-1]}) {\n          return getChannel(\n            getT${e}(${KM(i,u,t)}),\n            vec2(${KM(l,u,t)}));\n        }`}const d=o.length,p=o[o.length-1];h+=`\n        return getChannel(\n          getT${d}(${KM(i,u,p)}),\n          vec2(${KM(l,u,p)}));`,this.userCode=`\n      float getValue(${i.map((e=>"int "+e))}) {\n        ${h}\n      }\n\n      void main() {\n        ${a} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${s}), 0., 0., 0.);\n\n        ${s[r-1]} = ${s[r-1]} + 1;\n        if (${s[r-1]} < ${n[r-1]}) {\n          result.g = getValue(${s});\n        }\n\n        ${s[r-2]} = ${s[r-2]} + 1;\n        if (${s[r-2]} < ${n[r-2]}) {\n          result.a = getValue(${s});\n        }\n\n        ${s[r-1]} = ${s[r-1]} - 1;\n        if (${s[r-2]} < ${n[r-2]} &&\n            ${s[r-1]} < ${n[r-1]}) {\n          result.b = getValue(${s});\n        }\n        setOutput(result);\n      }\n    `}}(e.map((e=>e.shape)),t);return n.runWebGLProgram(a,e,r)}const{tensors2D:s,outShape:i}=function(e,t,n){const r=Ap.computeOutShape(e.map((e=>e.shape)),t);return{tensors2D:e.map((e=>PD({inputs:{x:e},attrs:{shape:[-1,ca.sizeFromShape(e.shape.slice(t))]},backend:n}))),outShape:r}}(e,t,n),o=new class{constructor(e){this.outputShape=[],this.outputShape=Ap.computeOutShape(e,1),this.variableNames=e.map(((e,t)=>`T${t}`));const t=new Array(e.length-1);t[0]=e[0][1];for(let n=1;n<t.length;n++)t[n]=t[n-1]+e[n][1];const n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let e=1;e<t.length;e++){const r=t[e-1];n.push(`else if (yC < ${t[e]}) setOutput(getT${e}(yR, yC-${r}));`)}const r=t.length,a=t[t.length-1];n.push(`else setOutput(getT${r}(yR, yC-${a}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}}(s.map((e=>e.shape))),u=n.runWebGLProgram(o,s,r);s.forEach((e=>n.disposeIntermediateTensorInfo(e)));const l=PD({inputs:{x:u},attrs:{shape:i},backend:n});return n.disposeIntermediateTensorInfo(u),l}function JM(e){const{inputs:t,backend:n,attrs:r}=e,{axis:a}=r,s=ca.parseAxisParam(a,t[0].shape)[0],i=Ap.computeOutShape(t.map((e=>e.shape)),s);if(0===ca.sizeFromShape(i))return n.makeTensorInfo(i,t[0].dtype,[]);const o=t.filter((e=>ca.sizeFromShape(e.shape)>0));if(1===o.length)return vD({inputs:{x:o[0]},backend:n});const u=o.map((e=>e.shape));return Ap.assertParamsConsistent(u,s),ZM(o,s,n)}var QM={kernelName:vt,backendName:"webgl",kernelFunc:JM},eO=class{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const s=e.padInfo.top,i=e.padInfo.left,o=e.strideHeight,u=e.strideWidth,l=e.dilationHeight,c=e.dilationWidth,h=e.filterHeight,d=e.filterWidth,p=4*Math.floor(e.inChannels/4),f=e.inChannels%4,m="channelsLast"===e.dataFormat,g=m?1:2,y=m?2:3,b=m?3:1;let x="",w="";n&&(x=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,w="result = activation(result);");const v=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${x}\n\n      const ivec2 strides = ivec2(${o}, ${u});\n      const ivec2 pads = ivec2(${s}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${b}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${g}], coords[${y}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${h}; wR++) {\n          int xR = xRCorner + wR * ${l};\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${d}; wC++) {\n            int xC = xCCorner + wC * ${c};\n\n            if (xC < 0 || xC >= ${e.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${p}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${m}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===f}) {\n\n              if (${m}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${p}) *\n                    getW(wR, wC, ${p}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${p}, xR, xC) *\n                    getW(wR, wC, ${p}, d2);\n              }\n\n            } else if (${2===f}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${p}, d2),\n                getW(wR, wC, ${p} + 1, d2)\n              );\n\n              if (${m}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${p}),\n                  getX(batch, xR, xC, ${p} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${p}, xR, xC),\n                  getX(batch, ${p} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===f}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${p}, d2),\n                getW(wR, wC, ${p} + 1, d2),\n                getW(wR, wC, ${p} + 2, d2)\n              );\n\n              if (${m}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${p}),\n                  getX(batch, xR, xC, ${p} + 1),\n                  getX(batch, xR, xC, ${p} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${p}, xR, xC),\n                  getX(batch, ${p} + 1, xR, xC),\n                  getX(batch, ${p} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${v}\n        ${w}\n        setOutput(result);\n      }\n    `}};function tO({x:e,filter:t,convInfo:n,backend:r,bias:a=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:o=null}){const u=e.shape,l=r.texData.get(e.dataId),c=n.inChannels,h=u[0]*u[1]*u[2],d=n.outChannels,p="channelsLast"===n.dataFormat;let f;const m=[],g=(1===h||1===d)&&c>1e3,y=u[2]%2!=0&&!!l.isPacked;if(!g&&Ue().getBool("WEBGL_LAZILY_UNPACK")&&Ue().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&y){const c=p?u[0]*u[1]*(u[2]+1):u[0]*u[2]*(u[3]+1),h={dataId:e.dataId,shape:[1,c,n.inChannels],dtype:e.dtype},d=l.shape;l.shape=l.shape.slice(),l.shape[l.shape.length-2]++,ca.assert(BF(l.shape,h.shape),(()=>`packed reshape ${l.shape} to ${h.shape} isn't free`));const g=PD({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}});m.push(g);const y=XD({a:h,b:g,backend:r,transposeA:!1,transposeB:!1,bias:a,activation:o,preluActivationWeights:s,leakyreluAlpha:i}),b=r.texData.get(y.dataId);ca.assert(b.isPacked,(()=>"batchMatMul result is expected to be packed")),l.shape=d,b.shape=n.outShape,f=vD({inputs:{x:y},backend:r}),f.shape=n.outShape,m.push(y)}else{const l=PD({inputs:{x:e},backend:r,attrs:{shape:[1,p?u[0]*u[1]*u[2]:u[0]*u[2]*u[3],n.inChannels]}}),c=PD({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}}),h=XD({a:l,b:c,transposeA:!1,transposeB:!1,backend:r,bias:a,activation:o,preluActivationWeights:s,leakyreluAlpha:i});f=PD({inputs:{x:h},backend:r,attrs:{shape:n.outShape}}),m.push(l),m.push(c),m.push(h)}for(const e of m)r.disposeIntermediateTensorInfo(e);return f}function nO({x:e,filter:t,convInfo:n,backend:r,bias:a=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:o=null}){const{filterWidth:u,filterHeight:l,inChannels:c,outWidth:h,outHeight:d,dataFormat:p}=n,f="channelsLast"===p,m=u*l*c,g=d*h,y=[m,g],b=[],x=PD({inputs:{x:e},backend:r,attrs:{shape:e.shape.slice(1)}}),w=PD({inputs:{x:t},backend:r,attrs:{shape:[1,m,ca.sizeFromShape(t.shape)/m]}});b.push(x),b.push(w);const v=new class{constructor(e,t,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e;const{filterWidth:r,inChannels:a,strideWidth:s,strideHeight:i,padInfo:o,outWidth:u,dilationWidth:l,dilationHeight:c,dataFormat:h}=n,{left:d,top:p}=o,f=a*r,m=jF(),g="channelsLast"===h,y=g?0:1,b=g?1:2;let x="";for(let n=0;n<=1;n++)for(let r=0;r<=1;r++)x+=`\n          blockIndex = rc.y + ${r};\n          pos = rc.x + ${n};\n\n          if(blockIndex < ${e[1]} && pos < ${e[0]}) {\n            offsetY = int(blockIndex / (${u})) * ${i} - ${p};\n            d0 = offsetY + ${c} * (pos / ${f});\n\n            if(d0 < ${t[y]} && d0 >= 0) {\n\n              offsetX = int(mod(float(blockIndex), ${u}.) * ${s}. - ${d}.);\n              d1 = offsetX + ${l} * (int(mod(float(pos), ${f}.) / ${a}.));\n\n              if(d1 < ${t[b]} && d1 >= 0) {\n\n                ch = int(mod(float(pos), ${a}.));\n\n                if (${g}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*n+r}] = getChannel(\n                    getA(d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*n+r}] = getChannel(\n                    getA(ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec2 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${x}\n\n        ${m.output} = result;\n      }\n    `}}(y,x.shape,n),k=r.runWebGLProgram(v,[x],"float32"),I=PD({inputs:{x:k},backend:r,attrs:{shape:[1,y[0],y[1]]}});b.push(k),b.push(I);const S=null!=a,N=null!=s,T="leakyrelu"===o,C=o?RD(o,!0):null,$=new DD(I.shape,w.shape,[1,g,n.outChannels],!0,!1,S,C,N,T),_=[I,w];if(a&&_.push(a),N&&_.push(s),T){const e=r.makeTensorInfo([],"float32",ca.createScalarValue(i,"float32"));_.push(e),b.push(e)}const E=r.runWebGLProgram($,_,"float32"),A=PD({inputs:{x:E},backend:r,attrs:{shape:f?[1,d,h,n.outChannels]:[1,n.outChannels,d,h]}});b.push(E);for(const e of b)r.disposeIntermediateTensorInfo(e);return A}var rO={kernelName:kt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dataFormat:u,dilations:l,dimRoundingMode:c}=r,h=Ap.convertConv2DDataFormat(u),d=Ap.computeConv2DInfo(a.shape,s.shape,i,l,o,c,!1,h);let p;if(1!==d.filterHeight||1!==d.filterWidth||1!==d.dilationHeight||1!==d.dilationWidth||1!==d.strideHeight||1!==d.strideWidth||"SAME"!==d.padInfo.type&&"VALID"!==d.padInfo.type)if(Ue().getBool("WEBGL_CONV_IM2COL")&&1===a.shape[0])p=nO({x:a,filter:s,convInfo:d,backend:n});else{const e=new eO(d);p=n.runWebGLProgram(e,[a,s],"float32")}else p=tO({x:a,filter:s,convInfo:d,backend:n});const f=PD({inputs:{x:p},backend:n,attrs:{shape:d.outShape}});return n.disposeIntermediateTensorInfo(p),f}},aO={kernelName:It,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,dataFormat:u,dimRoundingMode:l,filterShape:c}=r,h=Ap.convertConv2DDataFormat(u),d=Ap.computeConv2DInfo(a.shape,c,i,1,o,l,!1,h),p=new class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,a=e.padInfo.left,s="channelsLast"===e.dataFormat;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${a};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              if (${s}) {\n                float dyValue = getDy(b, yR, yC, d2);\n                float xValue = getX(b, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              } else {\n                float dyValue = getDy(b, d2, yR, yC);\n                float xValue = getX(b, d1, xR, xC);\n                dotProd += (xValue * dyValue);\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(d);return n.runWebGLProgram(p,[a,s],"float32")}},sO={kernelName:St,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{inputShape:i,strides:o,pad:u,dataFormat:l,dimRoundingMode:c}=r,h=Ap.convertConv2DDataFormat(l),d=Ap.computeConv2DInfo(i,s.shape,o,1,u,c,!1,h),p=new class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s="channelsLast"===e.dataFormat,i=t-1-e.padInfo.top,o=n-1-e.padInfo.left,u=s?1:2,l=s?2:3,c=s?3:1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${c}];\n\n        ivec2 dyCorner = ivec2(coords[${u}], coords[${l}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n\n              if (${s}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(d);return n.runWebGLProgram(p,[a,s],"float32")}},iO={kernelName:Nt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:u}=r,l=Ap.computeConv3DInfo(a.shape,s.shape,i,u,o),c=new class{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,n=e.padInfo.top,r=e.padInfo.left,a=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,u=e.dilationHeight,l=e.dilationWidth,c=e.filterDepth,h=e.filterHeight,d=e.filterWidth,p=4*Math.floor(e.inChannels/4),f=e.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${a}, ${s}, ${i});\n      const ivec3 pads = ivec3(${t}, ${n}, ${r});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${c}; wF++) {\n          int xF = xFCorner + wF * ${o};\n\n          if (xF < 0 || xF >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${h}; wR++) {\n            int xR = xRCorner + wR * ${u};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${d}; wC++) {\n              int xC = xCCorner + wC * ${l};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${p}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===f}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${p}) *\n                  getW(wF, wR, wC, ${p}, d2);\n              } else if (${2===f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1),\n                  getX(batch, xF, xR, xC, ${p} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2),\n                  getW(wF, wR, wC, ${p} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(l);return n.runWebGLProgram(c,[a,s],"float32")}},oO={kernelName:Tt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,filterShape:u}=r,l=Ap.computeConv3DInfo(a.shape,u,i,1,o),c=new class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,a=e.padInfo.front,s=e.padInfo.top,i=e.padInfo.left;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yF = 0; yF < ${e.outDepth}; yF++) {\n            int xF = wF + yF * ${t} - ${a};\n\n            if (xF < 0 || xF >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${e.outHeight}; yR++) {\n              int xR = wR + yR * ${n} - ${s};\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${e.outWidth}; yC++) {\n                int xC = wC + yC * ${r} - ${i};\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(l);return n.runWebGLProgram(c,[a,s],"float32")}},uO={kernelName:Ct,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{pad:i,strides:o,inputShape:u}=r,l=Ap.computeConv3DInfo(u,s.shape,o,1,i),c=new class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,a=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=t-1-e.padInfo.front,u=n-1-e.padInfo.top,l=r-1-e.padInfo.left;this.userCode=`\n      const ivec3 pads = ivec3(${o}, ${u}, ${l});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${t}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${a}.0;\n\n          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${t} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${s}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${r}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${r} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(l);return n.runWebGLProgram(c,[a,s],"float32")}},lO=AD({opSnippet:"if (isnan(x)) return x;\n  return cos(x);\n"}),cO={kernelName:$t,backendName:"webgl",kernelFunc:lO},hO=AD({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),dO={kernelName:_t,backendName:"webgl",kernelFunc:hO},pO={kernelName:At,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{image:a,boxes:s,boxInd:i}=t,{cropSize:o,method:u,extrapolationValue:l}=r,c=new class{constructor(e,t,n,r,a){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[s,i,o,u]=e,[l]=t,[c,h]=n;this.outputShape=[l,c,h,u];const d="bilinear"===r?1:0,[p,f]=[i-1+".0",o-1+".0"],[m,g,y]=c>1?[""+(i-1)/(c-1),"(y2-y1) * height_ratio",`y1*${p} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${p}`],[b,x,w]=h>1?[""+(o-1)/(h-1),"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`\n      const float height_ratio = float(${m});\n      const float width_ratio = float(${b});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${s}) {\n          return;\n        }\n\n        float height_scale = ${g};\n        float width_scale = ${x};\n\n        float in_y = ${y};\n        if( in_y < 0.0 || in_y > ${p} ) {\n          setOutput(float(${a}));\n          return;\n        }\n        float in_x = ${w};\n        if( in_x < 0.0 || in_x > ${f} ) {\n          setOutput(float(${a}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${d} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}(a.shape,s.shape,o,u,l);return n.runWebGLProgram(c,[a,s,i],"float32")}},fO=class{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}],this.outputShape=e;const r=e.length,a=t?"0.0":`getX(${mO(r,"coords")})`,s=e[e.length-1];let i="",o="";t?(i=n?"end != "+(s-1):"end != 0",o=n?"end + 1":"end - 1"):(i=n?`end + pow2 < ${s}`:"end >= pow2",o=n?"end + pow2":"end - pow2"),this.userCode=`\n      void main() {\n        ${pR(r)} coords = getOutputCoords();\n        int end = ${gO(r,"coords")};\n        float val = ${a};\n        int pow2 = int(pow(2.0, index));\n        if (${i}) {\n          int idx = ${o};\n          ${gO(r,"coords")} = idx;\n          val += getX(${mO(r,"coords")});\n        }\n        setOutput(val);\n      }\n    `}};function mO(e,t){if(1===e)return`${t}`;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}function gO(e,t){if(1===e)return`${t}`;if(2===e)return`${t}.y`;if(3===e)return`${t}.z`;if(4===e)return`${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}var yO={kernelName:Et,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r,u=a.shape.length,l=Ap.getAxesPermutation([s],u);let c=a;null!=l&&(c=qD({inputs:{x:a},backend:n,attrs:{perm:l}}));const h=Ap.getInnerMostAxes(1,u)[0];if(h!==u-1)throw new Error(`WebGL cumsum shader expects an inner-most axis=${a.shape.length-1} but got axis=${s}`);const d=c.shape[h];let p=vD({inputs:{x:c},backend:n});for(let e=0;e<=Math.ceil(Math.log2(d))-1;e++){const t=new fO(c.shape,!1,o),r=[[e]],a=p;p=n.runWebGLProgram(t,[p],p.dtype,r),n.disposeIntermediateTensorInfo(a)}if(i){const e=new fO(c.shape,i,o),t=p;p=n.runWebGLProgram(e,[p],p.dtype),n.disposeIntermediateTensorInfo(t)}if(null!=l){const e=qD({inputs:{x:p},backend:n,attrs:{perm:Ap.getUndoAxesPermutation(l)}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(c),e}return p}},bO={kernelName:Ft,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i,binaryOutput:o}=r;if(1===a.shape.length){const e=n.readSync(a.dataId),t=n.readSync(s.dataId),r=wR(e,t,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,r)}if(2===a.shape.length){const e=n.bufferSync(a),t=n.bufferSync(s),r=vR(e,t,i,o);return n.makeTensorInfo(r.shape,s.dtype,r.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${a.shape.length}.`)}},xO={kernelName:Rt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockSize:s,dataFormat:i}=r;ca.assert(s>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${s}`));const o=a.shape[0],u="NHWC"===i?a.shape[1]:a.shape[2],l="NHWC"===i?a.shape[2]:a.shape[3],c="NHWC"===i?a.shape[3]:a.shape[1],h=u*s,d=l*s,p=c/(s*s),f="NHWC"===i?[o,h,d,p]:[o,p,h,d],m=new class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${t};\n      int offset_h = imod(h, ${t});\n      int in_w = w / ${t};\n      int offset_w = imod(w, ${t});\n      int offset_d = (offset_h * ${t} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}(f,s,i);return n.runWebGLProgram(m,[a],a.dtype)}},wO=class{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const s=e.inHeight,i=e.inWidth,o=e.padInfo.top,u=e.padInfo.left,l=e.strideHeight,c=e.strideWidth,h=e.dilationHeight,d=e.dilationWidth,p=e.filterHeight,f=e.filterWidth,m=e.outChannels/e.inChannels;let g="",y="";n&&(g=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,y="result = activation(result);");const b=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${g}\n\n      const ivec2 strides = ivec2(${l}, ${c});\n      const ivec2 pads = ivec2(${o}, ${u});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${m};\n        int q = d2 - d1 * ${m};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${p}; wR++) {\n          int xR = xRCorner + wR * ${h};\n\n          if (xR < 0 || xR >= ${s}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${f}; wC++) {\n            int xC = xCCorner + wC * ${d};\n\n            if (xC < 0 || xC >= ${i}) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${b}\n        ${y}\n        setOutput(result);\n      }\n    `}},vO=class{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.outShape;const s=e.outChannels/e.inChannels,i=e.inHeight,o=e.inWidth,u=e.padInfo.top,l=e.padInfo.left,c=e.strideHeight,h=e.strideWidth,d=e.dilationHeight,p=e.dilationWidth,f=e.filterHeight,m=e.filterWidth,g=m;let y="\n      int xR; int xC; int xCOffset;\n      vec4 wTexel; vec4 previous; vec4 final;";for(let e=0;e<m;e++)y+=`\n          vec4 xTexelC${2*e};\n          int xTexelC${2*e}Ready;\n          vec4 xTexelC${2*e+1};\n          int xTexelC${2*e+1}Ready;\n          vec4 xC${e};`;for(let e=0;e<f;e++){for(let e=0;e<m;e++)y+=`\n          xTexelC${2*e} = vec4(0.0);\n          xTexelC${2*e}Ready = 0;\n          xTexelC${2*e+1} = vec4(0.0);\n          xTexelC${2*e+1}Ready = 0;\n          xC${e} = vec4(0.0);`;y+=`\n        xR = xRCorner + ${e*d};\n        if (xR >=0 && xR < ${i}) {\n      `;for(let t=0;t<(g+1)/2;t++){const n=2*t,r=n*p;if(y+=`\n          xC = xCCorner + ${r};\n          `,1===h){if(n<m&&(l%2==1?(y+=`\n                xCOffset = xC + 1;\n                if (xCOffset >= 0 && xCOffset < ${o} && xTexelC${n}Ready == 0) {\n                  xTexelC${n} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= ${o}) {\n                    xTexelC${n}.zw = vec2(0.0);\n                  }\n                  xTexelC${n}Ready = 1;\n                }\n              `,y+=1===p&&r>0?`\n                xC${n} = vec4(xTexelC${n-2}.zw, xTexelC${n}.xy);\n                `:`\n                  xCOffset = xC + 1 - 2;\n\n                  if (xCOffset >= 0 && xCOffset < ${o}) {\n                    previous = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= ${o}) {\n                      previous.zw = vec2(0.0);\n                    }\n\n                    xC${n} = vec4(previous.zw, xTexelC${n}.xy);\n                  } else {\n                    xC${n} = vec4(0.0, 0.0, xTexelC${n}.xy);\n                  }\n                  `):y+=`\n                if (xC >= 0 && xC < ${o} && xTexelC${n}Ready == 0) {\n                  xTexelC${n} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= ${o}) {\n                    xTexelC${n}.zw = vec2(0.0);\n                  }\n                  xTexelC${n}Ready = 1;\n                }\n\n                xC${n} = xTexelC${n};\n                `,r+1<m)){const e=l%2==0?ca.nearestLargerEven(p):p;p%2==0&&l%2==1||p%2!=0&&l%2!=1?(y+=`\n                  xCOffset = xC + ${l%2} + ${e};\n\n                  if (xCOffset >= 0 && xCOffset < ${o} && xTexelC${n+1}Ready == 0) {\n                    xTexelC${n+1} = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= ${o}) {\n                      xTexelC${n+1}.zw = vec2(0.0);\n                    }\n                    xTexelC${n+1}Ready = 1;\n                  }\n                  `,p>1&&(y+=`\n                    xCOffset -= 2;\n                    if (xCOffset >= 0 && xCOffset < ${o} && xTexelC${n}Ready == 0) {\n                      xTexelC${n} = getX(batch, xR, xCOffset, d1);\n                      xTexelC${n}Ready = 1;\n                    }\n                    `),y+=`\n                  xC${n+1} = vec4(xTexelC${n}.zw, xTexelC${n+1}.xy);\n                  `):y+=1===e?`\n                    xC${n+1} = xTexelC${n};\n                    `:`\n                    xCOffset = xC + ${e};\n\n                    if (xCOffset >= 0 && xCOffset < ${o} && xTexelC${n+1}Ready == 0) {\n                      xTexelC${n+1} = getX(batch, xR, xCOffset, d1);\n                      if (xCOffset + 1 >= ${o}) {\n                        xTexelC${n+1}.zw = vec2(0.0);\n                      }\n                      xTexelC${n+1}Ready = 1;\n                    }\n\n                    xC${n+1} = xTexelC${n+1};\n                    `}}else r<m&&(l%2==1?(y+=`\n                xCOffset = xC + 1 - ${h};\n                if(xCOffset >= 0 && xCOffset < ${o} && xTexelC${n}Ready == 0) {\n                  xTexelC${n} = getX(batch, xR, xCOffset, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= ${o}) {\n                    xTexelC${n}.zw = vec2(0.0);\n                  }\n                  xTexelC${n}Ready = 1;\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < ${o} && xTexelC${n+1}Ready == 0) {\n                  xTexelC${n+1} = getX(batch, xR, xC + 1, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xC + 2 >= ${o}) {\n                    xTexelC${n+1}.zw = vec2(0.0);\n                  }\n                  xTexelC${n+1}Ready = 1;\n                }\n\n                xC${n} = vec4(xTexelC${n}.zw, xTexelC${n+1}.zw);\n              `,r+1<m&&(y+=`\n                  final = vec4(0.0);\n                  xCOffset = xC + 1 + ${h};\n                  if(xCOffset >= 0 && xCOffset < ${o}) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xC${n+1} = vec4(xTexelC${n+1}.xy, final.xy);\n                `)):(y+=`\n                if(xC >= 0 && xC < ${o} && xTexelC${n}Ready == 0) {\n                  xTexelC${n} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= ${o}) {\n                    xTexelC${n}.zw = vec2(0.0);\n                  }\n                  xTexelC${n}Ready = 1;\n                }\n\n                xCOffset = xC + ${h};\n                if(xCOffset >= 0 && xCOffset < ${o} && xTexelC${n+1}Ready == 0) {\n                  xTexelC${n+1} = getX(batch, xR, xCOffset, d1);\n                  if (xCOffset + 1 >= ${o}) {\n                    xTexelC${n+1}.zw = vec2(0.);\n                  }\n                  xTexelC${n+1}Ready = 1;\n                }\n\n                xC${n} = vec4(\n                  xTexelC${n}.xy, xTexelC${n+1}.xy);\n              `,r+1<m&&(y+=`\n                  xC${n+1} = vec4(xTexelC${n}.zw, xTexelC${n+1}.zw);\n                `)));n<m&&(y+=`\n            wTexel = getW(${e}, ${r}, d1, q);\n            dotProd += xC${n} * vec4(wTexel.xz, wTexel.xz);\n          `,r+1<m&&(y+=`\n              wTexel = getW(${e}, ${r+1}, d1, q);\n              dotProd += xC${n+1} * vec4(wTexel.xz, wTexel.xz);\n            `))}y+="\n        }\n      "}let b="",x="";n&&(b=r?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,x="result = activation(result);");const w=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${b}\n\n      const ivec2 strides = ivec2(${c}, ${h});\n      const ivec2 pads = ivec2(${u}, ${l});\n\n      void main() {\n\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${s};\n        int q = d2 - d1 * ${s};\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n        vec4 dotProd = vec4(0.000000000000001);\n\n        ${y}\n\n        vec4 result = dotProd - vec4(0.000000000000001);\n        ${w}\n        ${x}\n        setOutput(result);\n      }\n    `}},kO={kernelName:Dt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:u,dimRoundingMode:l}=r;let c=u;null==c&&(c=[1,1]),ca.assert(Ap.eitherStridesOrDilationsAreOne(i,c),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${c}'`));const h=Ap.computeConv2DInfo(a.shape,s.shape,i,c,o,l,!0);let d;return d=Ue().getBool("WEBGL_PACK_DEPTHWISECONV")&&h.strideWidth<=2&&h.outChannels/h.inChannels==1?new vO(h):new wO(h),n.runWebGLProgram(d,[a,s],"float32")}},IO={kernelName:Mt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,dilations:o,pad:u,dimRoundingMode:l,filterShape:c}=r,h=Ap.computeConv2DInfo(a.shape,c,i,o,u,l,!0),d=new class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,a=e.padInfo.left,s=e.outChannels/e.inChannels;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${s} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${a};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(h);return n.runWebGLProgram(d,[a,s],"float32")}},SO={kernelName:Ot,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{strides:i,dilations:o,pad:u,dimRoundingMode:l,inputShape:c}=r,h=Ap.computeConv2DInfo(c,s.shape,i,o,u,l,!0),d=new class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s=t-1-e.padInfo.top,i=n-1-e.padInfo.left,o=e.outChannels/e.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${s}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${o}; dm++) {\n              int d2 = d1 * ${o} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(h);return n.runWebGLProgram(d,[a,s],"float32")}},NO={kernelName:Lt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,a=[...r.shape,...r.shape],s=ca.sizeFromShape(r.shape),i=PD({inputs:{x:r},backend:n,attrs:{shape:[s]}}),o=new class{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}(s),u=n.runWebGLProgram(o,[i],i.dtype),l=PD({inputs:{x:u},backend:n,attrs:{shape:a}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(u),l}},TO={kernelName:zt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:u}=r,l=Ap.computeDilation2DInfo(a.shape,s.shape,i,o,"NHWC",u);let c;const h=new class{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:n,padInfo:r,strideHeight:a,strideWidth:s,filterHeight:i,filterWidth:o,dilationHeight:u,dilationWidth:l}=e,{top:c,left:h}=r;this.userCode=`\n      const ivec2 strides = ivec2(${a}, ${s});\n      const ivec2 pads = ivec2(${c}, ${h});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${i}; h++) {\n          int hIn = hBeg + h * ${u};\n\n          if (hIn >= 0 && hIn < ${t}) {\n            for (int w = 0; w < ${o}; w++) {\n              int wIn = wBeg + w * ${l};\n\n              if (wIn >= 0 && wIn < ${n}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `}}(l);c=n.runWebGLProgram(h,[a,s],"float32");const d=PD({inputs:{x:c},backend:n,attrs:{shape:l.outShape}});return n.disposeIntermediateTensorInfo(c),d}},CO={kernelName:Vt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{equation:a}=r,s=t,{allDims:i,summedDims:o,idDims:u}=Ap.decodeEinsumEquation(a,s.length);Ap.checkEinsumDimSizes(i.length,u,s);const{path:l,steps:c}=Ap.getEinsumComputePath(o,u),h=c.length;let d=null,p=i.length;const f=[];for(let e=0;e<h;++e){for(const t of c[e]){const{permutationIndices:e,expandDims:r}=Ap.getEinsumPermutation(p,u[t]);let a;Ap.isIdentityPermutation(e)?a=s[t]:(a=qD({inputs:{x:s[t]},backend:n,attrs:{perm:e}}),f.push(a));const i=a.shape.slice();for(let e=0;e<r.length;++e)i.splice(r[e],0,1);ca.arraysEqual(a.shape,i)||(a=PD({inputs:{x:a},backend:n,attrs:{shape:i}}),f.push(a)),null===d?d=a:(d=LD({inputs:{a,b:d},backend:n}),f.push(d))}e<h-1&&(l[e]>=0&&(d=HD({inputs:{x:d},backend:n,attrs:{axis:l[e]-(i.length-p),keepDims:!1}}),f.push(d)),p--)}for(const e of f)e!==d&&n.disposeIntermediateTensorInfo(e);return d}},$O=AD({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),_O={kernelName:Ut,backendName:"webgl",kernelFunc:$O},EO={kernelName:Gt,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n}=e,{dy:r,y:a}=t,s=Ue().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new wD("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",r.shape,a.shape):new xD("return (b >= 1.0) ? a : a * (b + 1.0);",r.shape,a.shape);return n.runWebGLProgram(s,[r,a],r.dtype)}},AO=FD({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool",cpuKernelImpl:SR}),FO={kernelName:jt,backendName:"webgl",kernelFunc:AO},RO=AD({opSnippet:`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${Ap.ERF_P};\n  float a1 = ${Ap.ERF_A1};\n  float a2 = ${Ap.ERF_A2};\n  float a3 = ${Ap.ERF_A3};\n  float a4 = ${Ap.ERF_A4};\n  float a5 = ${Ap.ERF_A5};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`}),DO={kernelName:Ht,backendName:"webgl",kernelFunc:RO},MO="return exp(x);",OO=AD({opSnippet:MO,packedOpSnippet:MO,cpuKernelImpl:NR}),LO={kernelName:qt,backendName:"webgl",kernelFunc:OO};function zO(e){const{inputs:t,attrs:n,backend:r}=e,{dim:a}=n,{input:s}=t,i=s.shape.length,o=s.shape.slice();let u=a;return a<0&&(ca.assert(-(i+1)<=a,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),u=i+a+1),o.splice(u,0,1),PD({inputs:{x:s},backend:r,attrs:{shape:o}})}var PO={kernelName:Kt,backendName:"webgl",kernelFunc:zO},BO="return exp(x) - 1.0;",WO=AD({opSnippet:BO,packedOpSnippet:BO,cpuKernelImpl:TR}),VO={kernelName:Xt,backendName:"webgl",kernelFunc:WO},UO=class{constructor(e,t,n){this.variableNames=["real","imag"];const r=t[1];this.outputShape=t;const a=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,s=n?`${r}.0`:"1.0";let i;if("real"===e)i="return real * expR - imag * expI;";else{if("imag"!==e)throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);i="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${a};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${i}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${r});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${r}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${s};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}};function GO(e,t,n){const r=n.texData.get(e.dataId),a=ca.sizeFromShape(e.shape),s=e.shape[e.shape.length-1],i=PD({inputs:{x:e},backend:n,attrs:{shape:[a/s,s]}}),o=i.shape,u=new UO("real",o,t),l=new UO("imag",o,t),c=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:o},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:o}],h=n.runWebGLProgram(u,c,"float32"),d=n.runWebGLProgram(l,c,"float32"),p=ID({inputs:{real:h,imag:d},backend:n});n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d);const f=PD({inputs:{x:p},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(p),f}var HO={kernelName:Yt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return GO(r,!1,n)}};function jO(e){const{backend:t,attrs:n}=e,{shape:r,value:a}=n;let{dtype:s}=n;if(s=s||ca.inferDtype(a),"string"===s){const e=ca.getArrayFromDType(s,ca.sizeFromShape(r));return e.fill(a),t.makeTensorInfo(r,s,e)}{const e=new class{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode="\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}}(r,a),n=[[a]];return t.runWebGLProgram(e,[],s,n)}}var qO,KO={kernelName:Zt,backendName:"webgl",kernelFunc:jO},XO={kernelName:Jt,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{const{image:n}=e,r=t,a=new class{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${t} - x - 1;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${t}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}(n.shape);return r.runWebGLProgram(a,[n],n.dtype)}},YO="return floor(x);",ZO=AD({opSnippet:YO,packedOpSnippet:YO,cpuKernelImpl:CR}),JO={kernelName:Qt,backendName:"webgl",kernelFunc:ZO},QO=FD({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),eL={kernelName:en,backendName:"webgl",kernelFunc:QO},tL={kernelName:Kr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;let{pixels:a}=t;const{numChannels:s}=r,i="undefined"!=typeof HTMLVideoElement&&a instanceof HTMLVideoElement,o="undefined"!=typeof HTMLImageElement&&a instanceof HTMLImageElement,[u,l]=i?[a.videoWidth,a.videoHeight]:[a.width,a.height],c=[l,u],h=[l,u,s];(o||i)&&(null==qO&&(qO=document.createElement("canvas").getContext("2d")),qO.canvas.width=u,qO.canvas.height=l,qO.drawImage(a,0,0,u,l),a=qO.canvas);const d=n.makeTensorInfo(c,"int32");n.texData.get(d.dataId).usage=pF.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(d.dataId),a);const p=Ue().getBool("WEBGL_PACK")?new class{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=jF(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${r}.0, ${n}.0);\n            vec4 values = ${t.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${t.output} = result;\n      }\n    `}}(h):new class{constructor(e){this.variableNames=["A"];const t=jF(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${n}.0);\n\n        vec4 values = ${t.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}(h),f=n.runWebGLProgram(p,[d],"int32");return n.disposeData(d.dataId),f}},nL={kernelName:Zr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=r,m=Ap.convertConv2DDataFormat(c),g=Ap.computeConv2DInfo(a.shape,s.shape,u,h,l,d,!1,m);let y;const b=[];if(1!==g.filterHeight||1!==g.filterWidth||1!==g.dilationHeight||1!==g.dilationWidth||1!==g.strideHeight||1!==g.strideWidth||"SAME"!==g.padInfo.type&&"VALID"!==g.padInfo.type)if(Ue().getBool("WEBGL_CONV_IM2COL")&&1===a.shape[0])y=nO({x:a,filter:s,convInfo:g,backend:n,bias:i,activation:p,preluActivationWeights:o,leakyreluAlpha:f});else{const e=null!=i,t=null!=o,r="leakyrelu"===p,u=p?RD(p,!1):null,l=new eO(g,e,u,t,r),c=[a,s];if(i&&c.push(i),o&&c.push(o),r){const e=n.makeTensorInfo([],"float32",ca.createScalarValue(f,"float32"));c.push(e),b.push(e)}y=n.runWebGLProgram(l,c,"float32")}else y=tO({x:a,filter:s,convInfo:g,backend:n,bias:i,activation:p,preluActivationWeights:o,leakyreluAlpha:f});const x=PD({inputs:{x:y},backend:n,attrs:{shape:g.outShape}});return b.push(y),b.forEach((e=>n.disposeIntermediateTensorInfo(e))),x}},rL={kernelName:Jr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:u,pad:l,dilations:c,dimRoundingMode:h,activation:d,leakyreluAlpha:p}=r,f=[];let m=c;null==m&&(m=[1,1]),ca.assert(Ap.eitherStridesOrDilationsAreOne(u,m),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${u} and dilations '${m}'`));const g=Ap.computeConv2DInfo(a.shape,s.shape,u,m,l,h,!0),y=Ue().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels==1,b=d?RD(d,y):null,x=[a,s],w=null!=i,v=null!=o,k="leakyrelu"===d;if(w&&x.push(i),v&&x.push(o),k){const e=n.makeTensorInfo([],"float32",ca.createScalarValue(p,"float32"));x.push(e),f.push(e)}let I;I=y?new vO(g,w,b,v,k):new wO(g,w,b,v,k);const S=n.runWebGLProgram(I,x,"float32");return f.forEach((e=>n.disposeIntermediateTensorInfo(e))),S}},aL={kernelName:rn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:r,indices:a}=t,s=a.shape,i=s[s.length-1],o=ca.sizeFromShape(r.shape),[u,l,c,h]=Ap.prepareAndValidate(r,a),d=PD({inputs:{x:a},backend:n,attrs:{shape:[l,i]}}),p=PD({inputs:{x:r},backend:n,attrs:{shape:[ca.sizeFromShape(r.shape)/c,c]}});if(n.shouldExecuteOnCPU([r,a])||"string"===r.dtype){const e=n.readSync(a.dataId),t=n.bufferSync(r),s=$R(e,t,r.dtype,l,i,c,h,r.shape,o);return n.makeTensorInfo(u,r.dtype,s.values)}const f=new class{constructor(e,t,n){this.sliceDim=e,this.strides=t,this.variableNames=["x","indices"],this.outputShape=n;const r=pR(t.length),a=pR(n.length),s=this.sliceDim>1?"strides[j]":"strides";this.userCode=`\n        ${r} strides = ${r}(${this.strides});\n         void main() {\n          ${a} coords = getOutputCoords();\n          int flattenIndex = 0;\n          for (int j = 0; j < ${this.sliceDim}; j++) {\n            int index = round(getIndices(coords[0], j));\n            flattenIndex += index * ${s};\n          }\n          setOutput(getX(flattenIndex, coords[1]));\n        }\n      `}}(i,h,[l,c]),m=n.runWebGLProgram(f,[p,d],p.dtype),g=PD({inputs:{x:m},backend:n,attrs:{shape:u}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(m),g}};function sL(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,indices:s}=t,{axis:i,batchDims:o}=r,u=ca.parseAxisParam(i,a.shape)[0],l=Ap.segment_util.collectGatherOpShapeInfo(a,s,u,o),c=ca.sizeFromShape(s.shape),h=[],d=PD({inputs:{x:a},backend:n,attrs:{shape:[l.batchSize,l.outerSize,l.dimSize,l.sliceSize]}}),p=PD({inputs:{x:s},backend:n,attrs:{shape:[l.batchSize,c/l.batchSize]}});h.push(d),h.push(p);const f=[l.batchSize,l.outerSize,c/l.batchSize,l.sliceSize];if(n.shouldExecuteOnCPU([a,s])||"string"===a.dtype){const e=n.bufferSync(p),t=n.bufferSync(d),r=_R(t,e,f);return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(l.outputShape,r.dtype,r.values)}const m=new class{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const n=pR(this.rank),r=function(e,t){const n=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[];for(let t=0;t<e.length;t++)2===t?r.push("int(getIndices(resRC.x, resRC.z))"):r.push(`${n[t]}`);return r.join()}(e);this.userCode=`\n      void main() {\n        ${n} resRC = getOutputCoords();\n        setOutput(getA(${r}));\n      }\n    `}}(d.shape,f),g=n.runWebGLProgram(m,[d,p],d.dtype);h.push(g);const y=PD({inputs:{x:g},backend:n,attrs:{shape:l.outputShape}});return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}var iL={kernelName:nn,backendName:"webgl",kernelFunc:sL},oL=FD({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:ER,dtype:"bool"}),uL={kernelName:an,backendName:"webgl",kernelFunc:oL},lL=FD({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool",cpuKernelImpl:AR}),cL={kernelName:sn,backendName:"webgl",kernelFunc:lL},hL={kernelName:un,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return GO(r,!0,n)}},dL=AD({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),pL={kernelName:cn,backendName:"webgl",kernelFunc:dL},fL=AD({opSnippet:"return float(isinf(x));",dtype:"bool"}),mL={kernelName:hn,backendName:"webgl",kernelFunc:fL},gL=AD({opSnippet:"return float(isnan(x));",dtype:"bool"}),yL={kernelName:dn,backendName:"webgl",kernelFunc:gL},bL=FD({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:FR,dtype:"bool"}),xL={kernelName:fn,backendName:"webgl",kernelFunc:bL},wL=FD({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",cpuKernelImpl:RR,dtype:"bool"}),vL={kernelName:mn,backendName:"webgl",kernelFunc:wL},kL={kernelName:gn,backendName:"webgl",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:a,num:s}=n,i=DR(r,a,s);return t.makeTensorInfo([i.length],"float32",i)}},IL=AD({opSnippet:"if (x < 0.0) return NAN;\n  return log(x);",packedOpSnippet:"\n  vec4 result = log(x);\n  vec4 isNaN = vec4(lessThan(x, vec4(0.0)));\n  result.r = isNaN.r == 1.0 ? NAN : result.r;\n  result.g = isNaN.g == 1.0 ? NAN : result.g;\n  result.b = isNaN.b == 1.0 ? NAN : result.b;\n  result.a = isNaN.a == 1.0 ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:MR}),SL={kernelName:yn,backendName:"webgl",kernelFunc:IL},NL=AD({opSnippet:"return log(1.0 + x);"}),TL={kernelName:bn,backendName:"webgl",kernelFunc:NL},CL=FD({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),$L={kernelName:xn,backendName:"webgl",kernelFunc:CL},_L=AD({opSnippet:"return float(!(x >= 1.0));"}),EL={kernelName:wn,backendName:"webgl",kernelFunc:_L},AL=FD({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),FL={kernelName:vn,backendName:"webgl",kernelFunc:AL},RL={kernelName:In,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{depthRadius:s,bias:i,alpha:o,beta:u}=r,l=Ue().getBool("WEBGL_PACK_NORMALIZATION")?new class{constructor(e,t,n,r,a){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const s=t,i=e[3]-1;let o;this.outputShape=e;const u=`float(${n}) + float(${r}) * sum`;o=.5===a?`inversesqrt(${u})`:1===a?`1.0/(${u})`:`exp(log(${u}) * float(-${a}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${s};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${s}; j <= ${s}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${o};\n        setOutput(result);\n      }\n    `}}(a.shape,s,i,o,u):new class{constructor(e,t,n,r,a){this.variableNames=["x"],this.outputShape=[];const s=t,i=e[3]-1;let o;this.outputShape=e;const u=`float(${n}) + float(${r}) * sum`;o=.5===a?`inversesqrt(${u})`:1===a?`1.0/(${u})`:`exp(log(${u}) * float(-${a}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${s}; j <= ${s}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${i}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${o};\n        setOutput(val);\n      }\n    `}}(a.shape,s,i,o,u);return n.runWebGLProgram(l,[a],a.dtype)}},DL={kernelName:Sn,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a,y:s,dy:i}=t,{depthRadius:o,bias:u,alpha:l,beta:c}=r,h=new class{constructor(e,t,n,r,a){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=r,this.beta=a,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${t})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${t} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${r}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${r})\n                * float(${a})\n                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${a});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}(a.shape,o,u,l,c);return n.runWebGLProgram(h,[a,s,i],a.dtype)}};function ML(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reductionIndices:s,keepDims:i}=r,o=a.shape.length,u=ca.parseAxisParam(s,a.shape);let l=u;const c=Ap.getAxesPermutation(l,o),h=null!=c,d=n.shouldExecuteOnCPU([a]);let p=a;if(h){if(d){const e=n.texData.get(p.dataId).values,t=new Array(o);for(let e=0;e<t.length;e++)t[e]=a.shape[c[e]];const r=rD(e,a.shape,a.dtype,c,t);p=n.makeTensorInfo(t,a.dtype),n.texData.get(p.dataId).values=r}else p=GD(a,c,n);l=Ap.getInnerMostAxes(l.length,o)}Ap.assertAxesAreInnerMostDims("max",l,o);const[f,m]=Ap.computeOutAndReduceShapes(p.shape,l);let g,y=f;if(i&&(y=Ap.expandShapeToKeepDim(f,u)),d){const e=n.texData.get(p.dataId).values,t=OR(e,ca.sizeFromShape(m),y,a.dtype);g=n.makeTensorInfo(y,a.dtype),n.texData.get(g.dataId).values=t}else g=function(e,t,n,r){const a=ca.sizeFromShape(t),s=PD({inputs:{x:e},attrs:{shape:[ca.sizeFromShape(e.shape)/a,a]},backend:r}),i=UD(s,e.dtype,"max",r),o=PD({inputs:{x:i},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(i),o}(p,m,y,n);return h&&n.disposeIntermediateTensorInfo(p),g}var OL={kernelName:Nn,backendName:"webgl",kernelFunc:ML},LL=FD({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:LR}),zL={kernelName:Tn,backendName:"webgl",kernelFunc:LL},PL={kernelName:Cn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t;GF(a,"maxPool");const{filterSize:s,strides:i,pad:o,dimRoundingMode:u}=r;ca.assert(Ap.eitherStridesOrDilationsAreOne(i,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const l=Ap.computePool2DInfo(a.shape,s,i,1,o,u);if(1===l.filterWidth&&1===l.filterHeight&&ca.arraysEqual(l.inShape,l.outShape))return vD({inputs:{x:a},backend:n});const c=new SM(l,"max",!1);return n.runWebGLProgram(c,[a],a.dtype)}},BL={kernelName:_n,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dataFormat:u,dimRoundingMode:l}=r,c=Ap.computePool3DInfo(a.shape,s,i,[1,1,1],o,l,u),h=new NM(c,"max",!1);return n.runWebGLProgram(h,[a],a.dtype)}},WL={kernelName:En,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,i=s,{filterSize:o,strides:u,pad:l,dimRoundingMode:c}=r,h=Ap.computePool3DInfo(i.shape,o,u,[1,1,1],l,c),d=new NM(h,"max",!0),p=n.runWebGLProgram(d,[i],i.dtype),f=new class{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,a=e.dilationDepth,s=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterDepth,u=e.effectiveFilterHeight,l=e.effectiveFilterWidth,c=o-1-e.padInfo.front,h=u-1-e.padInfo.top,d=l-1-e.padInfo.left,p=o*u*l-1;this.userCode=`\n      const ivec3 pads = ivec3(${c}, ${h}, ${d});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${o};\n           wD += ${a}) {\n          float dyD = float(dyDCorner + wD) / ${t}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${u};\n              wR += ${s}) {\n            float dyR = float(dyRCorner + wR) / ${n}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${l};\n                wC += ${i}) {\n              float dyC = float(dyCCorner + wC) / ${r}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${p} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${u} * ${l} +\n                  wR * ${l} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(h),m=n.runWebGLProgram(f,[a,p],i.dtype);return n.disposeIntermediateTensorInfo(p),m}},VL={kernelName:$n,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s,output:i}=t,o=s;GF([s,i],"maxPoolGrad");const{filterSize:u,strides:l,pad:c,dimRoundingMode:h}=r,d=Ap.computePool2DInfo(o.shape,u,l,1,c,h),p=new SM(d,"max",!0),f=n.runWebGLProgram(p,[o],o.dtype),m=new class{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,n=e.strideWidth,r=e.dilationHeight,a=e.effectiveFilterHeight,s=e.effectiveFilterWidth,i=a-1-e.padInfo.top,o=s-1-e.padInfo.left,u=a*s-1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${a};\n          wR += ${r}) {\n          float dyR = float(dyRCorner + wR) / ${t}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${s}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${u} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${s} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(d),g=n.runWebGLProgram(m,[a,f],o.dtype);return n.disposeIntermediateTensorInfo(f),g}},UL={kernelName:An,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{filterSize:a,strides:s,pad:i,includeBatchInIndex:o}=t,u=n;ca.assert(4===r.shape.length,(()=>`Error in maxPool: input must be rank 4 but got rank ${r.shape.length}.`));const l=[1,1];ca.assert(Ap.eitherStridesOrDilationsAreOne(s,l),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${s} and dilations '${l}'`));const c=Ap.computePool2DInfo(r.shape,a,s,l,i),[h,d]=function(e,t,n,r){let a=new SM(n,"max",!1);const s=r.runWebGLProgram(a,[e],"float32");return a=new SM(n,"max",!0,!0,t),[s,r.runWebGLProgram(a,[e],"float32")]}(r,o,c,u);return[h,d]}},GL={kernelName:Fn,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{keepDims:a,axis:s}=t,i=n,o=r.shape.length,u=ca.parseAxisParam(s,r.shape);let l=u;const c=Ap.getAxesPermutation(l,o),h=null!=c,d=i.shouldExecuteOnCPU([r]),p=[];let f=r;if(h){if(d){const e=i.texData.get(f.dataId).values,t=new Array(o);for(let e=0;e<t.length;e++)t[e]=r.shape[c[e]];const n=rD(e,r.shape,r.dtype,c,t);f=i.makeTensorInfo(t,r.dtype),i.texData.get(f.dataId).values=n}else f=GD(r,c,i);p.push(f),l=Ap.getInnerMostAxes(l.length,o)}Ap.assertAxesAreInnerMostDims("sum",l,o);const[m,g]=Ap.computeOutAndReduceShapes(f.shape,l);let y=m;a&&(y=Ap.expandShapeToKeepDim(m,u));const b=function(e,t,n,r){const a=ca.sizeFromShape(t),s=PD({inputs:{x:e},attrs:{shape:[ca.sizeFromShape(e.shape)/a,a]},backend:r}),i=UD(s,"float32","mean",r),o=PD({inputs:{x:i},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(i),o}(f,g,y,i);for(const e of p)i.disposeIntermediateTensorInfo(e);return b}},HL={kernelName:Rn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=a.shape.length,u=ca.parseAxisParam(s,a.shape);let l=u;const c=Ap.getAxesPermutation(l,o);let h=a;null!=c&&(h=qD({inputs:{x:a},backend:n,attrs:{perm:c}}),l=Ap.getInnerMostAxes(l.length,a.shape.length)),Ap.assertAxesAreInnerMostDims("min",l,o);const[d,p]=Ap.computeOutAndReduceShapes(h.shape,l),f=PD({inputs:{x:h},backend:n,attrs:{shape:[-1,ca.sizeFromShape(p)]}}),m=UD(f,f.dtype,"min",n);let g;return g=PD(i?{inputs:{x:m},backend:n,attrs:{shape:Ap.expandShapeToKeepDim(d,u)}}:{inputs:{x:m},backend:n,attrs:{shape:d}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),g}},jL=FD({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:zR}),qL={kernelName:Dn,backendName:"webgl",kernelFunc:jL},KL={kernelName:Mn,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r}=e,{paddings:a,mode:s}=n,i=Ue().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new class{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,a=pR(r),s=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=iD("rc",r),u=iD("source",r),l=`${o[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${u.slice(-2).join()})`,h="reflect"===n?0:1;let d="";if(1===r){const e=`\n        ${a} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${h};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${h};\n        }\n        source -= start;\n      `;d=`\n        ${a} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${u.join()}), ${c});\n        ${o[r-1]} += 1;\n        if(${l}) {\n          ${e}\n          result[1] = getChannel(getX(${u.join()}), ${c});\n        }\n      `}else{const e=`\n        ${a} source = rc;\n        ${a} lt = ${a}(lessThan(source, start));\n        ${a} gte = ${a}(greaterThanEqual(source, end));\n        ${a} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${h}) +\n                gte * ((end - 1) * 2 - source + ${h});\n        source -= start;\n      `;d=`\n        ${a} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${u.join()}), ${c});\n        ${o[r-1]} += 1;\n        if(${l}) {\n          ${e}\n          result[1] = getChannel(getX(${u.join()}), ${c});\n        }\n        rc = outputLoc;\n        ${o[r-2]} += 1;\n        if(${o[r-2]} < ${this.outputShape[r-2]}) {\n          ${e}\n          result[2] = getChannel(getX(${u.join()}), ${c});\n          ${o[r-1]} += 1;\n          if(${l}) {\n            ${e}\n            result[3] = getChannel(getX(${u.join()}), ${c});\n          }\n        }\n      `}this.userCode=`\n      const ${a} start = ${a}(${s});\n      const ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${d}\n        setOutput(result);\n      }\n    `}}(r.shape,a,s):new class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,a=pR(r),s=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),u="reflect"===n?0:1;this.userCode=1!==r?`\n      ${a} start = ${a}(${s});\n      ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outC = getOutputCoords();\n        for (int i = 0; i < ${r}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${u};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${u};\n          }\n        }\n        ${a} coords = outC - start;\n        setOutput(getX(${o}));\n      }\n    `:`\n        int start = ${s};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${u};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${u};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}(r.shape,a,s);return t.runWebGLProgram(i,[r],r.dtype)}},XL=FD({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  vec4 isNaN = vec4(equal(b, vec4(0.0)));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),YL={kernelName:On,backendName:"webgl",kernelFunc:XL},ZL=FD({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),JL={kernelName:Wt,backendName:"webgl",kernelFunc:ZL},QL="return a - b;",ez=FD({opSnippet:QL,packedOpSnippet:QL,supportsComplex:!0,cpuKernelImpl:eD}),tz={kernelName:Or,backendName:"webgl",kernelFunc:ez};function nz(e){const{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{dim:s}=r,i=ca.parseAxisParam([s],a.shape),o=ML({inputs:{x:a},backend:n,attrs:{reductionIndices:i,keepDims:!1}}),u=Ap.expandShapeToKeepDim(o.shape,i),l=PD({inputs:{x:o},backend:n,attrs:{shape:u}}),c=ez({inputs:{a,b:l},backend:n}),h=OO({inputs:{x:c},backend:n}),d=HD({inputs:{x:h},backend:n,attrs:{axis:i,keepDims:!1}}),p=PD({inputs:{x:d},backend:n,attrs:{shape:u}}),f=ZL({inputs:{a:h,b:p},backend:n});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),f}var rz={kernelName:Sr,backendName:"webgl",kernelFunc:nz},az={kernelName:Ln,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{numSamples:s,seed:i,normalized:o}=r,u=o?a:nz({inputs:{logits:a},backend:n,attrs:{dim:a.shape.length-1}}),l=u.shape[0],c=u.shape[1],h=new class{constructor(e,t,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,n],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${t-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${t-1}));\n      }\n    `}}(l,c,s),d=[[i]],p=n.runWebGLProgram(h,[u],"int32",d);return o||n.disposeIntermediateTensorInfo(u),p}},sz="return -x;",iz={kernelName:Pn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])){const e=n.texData.get(r.dataId),[t,a]=BR(e.values,r.shape,r.dtype);return n.makeTensorInfo(a,r.dtype,t)}let a;return a=Ue().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new fD(r.shape,sz):new hD(r.shape,sz),n.runWebGLProgram(a,[r],r.dtype)}},oz=vf.nonMaxSuppressionV3Impl,uz={kernelName:Wn,backendName:"webgl",kernelFunc:function(e){Ap.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u}=r,l=n.readSync(a.dataId),c=n.readSync(s.dataId),{selectedIndices:h}=oz(l,c,i,o,u);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},lz=vf.nonMaxSuppressionV4Impl,cz={kernelName:Vn,backendName:"webgl",kernelFunc:function(e){Ap.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,padToMaxOutputSize:l}=r,c=n.readSync(a.dataId),h=n.readSync(s.dataId),{selectedIndices:d,validOutputs:p}=lz(c,h,i,o,u,l);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}},hz=vf.nonMaxSuppressionV5Impl,dz={kernelName:Un,backendName:"webgl",kernelFunc:function(e){Ap.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,softNmsSigma:l}=r,c=n.readSync(a.dataId),h=n.readSync(s.dataId),d=i,p=o,f=u,m=l,{selectedIndices:g,selectedScores:y}=hz(c,h,d,p,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}},pz={kernelName:Hn,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{indices:a}=t,{depth:s,onValue:i,offValue:o}=r,u=ca.sizeFromShape(a.shape),l=new class{constructor(e,t,n,r){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${r}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}}(u,s,i,o),c=PD({inputs:{x:a},backend:n,attrs:{shape:[u]}}),h=n.runWebGLProgram(l,[c],a.dtype);n.disposeIntermediateTensorInfo(c);const d=PD({inputs:{x:h},backend:n,attrs:{shape:[...a.shape,s]}});return n.disposeIntermediateTensorInfo(h),d}};function fz(e){const{inputs:t,backend:n}=e,{x:r}=t;if("complex64"===r.dtype){const e=PM({inputs:{input:r},backend:n}),t=fz({inputs:{x:e},backend:n}),a=XM({inputs:{input:r},backend:n}),s=fz({inputs:{x:a},backend:n}),i=ID({inputs:{real:t,imag:s},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),i}return jO({attrs:{shape:r.shape,dtype:r.dtype,value:"string"===r.dtype?"":0},backend:n})}var mz={kernelName:jr,backendName:"webgl",kernelFunc:fz},gz={kernelName:Gn,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:a}=n;if("string"===a.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===a.dtype){const t=PM({inputs:{input:a},backend:r}),n=e({inputs:{x:t},backend:r}),s=XM({inputs:{input:a},backend:r}),i=fz({inputs:{x:s},backend:r}),o=ID({inputs:{real:n,imag:i},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(i),o}return jO({attrs:{shape:a.shape,dtype:a.dtype,value:1},backend:r})}},yz={kernelName:jn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{axis:a}=r;if(1===t.length)return zO({inputs:{input:t[0]},backend:n,attrs:{dim:a}});const s=t[0].shape,i=t[0].dtype;t.forEach((e=>{ca.assertShapesMatch(s,e.shape,"All tensors passed to stack must have matching shapes"),ca.assert(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const o=[],u=JM({inputs:t.map((e=>{const t=zO({inputs:{input:e},backend:n,attrs:{dim:a}});return o.push(t),t})),backend:n,attrs:{axis:a}});return o.forEach((e=>n.disposeIntermediateTensorInfo(e))),u}},bz=e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{paddings:s,constantValue:i}=r,o=Ue().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new class{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,a=pR(r),s=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=iD("rc",r),u=iD("source",r),l=`${o[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${u.slice(-2).join()})`,h=[`${a} rc = outputLoc;`,`${o[r-1]} += 1;\n       if(${l}) {\n      `,1===r?"":`}\n       rc = outputLoc;\n       ${o[r-2]} += 1;\n       if(${o[r-2]} < ${this.outputShape[r-2]}) {`,1===r?"":`  ${o[r-1]} += 1;\n         if(${l}) {`],d=1===r?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let p="";for(let e=0,t=1===r?2:4;e<t;e++)p+=`\n        ${h[e]}\n        if (${d}) {\n          result[${e}] = float(value);\n        } else {\n          ${a} source = rc - start;\n          result[${e}] = getChannel(getX(${u.join()}), ${c});\n        }\n      `;p+=1===r?"} ":"}}",this.userCode=`\n      const ${a} start = ${a}(${s});\n      const ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${p}\n        setOutput(result);\n      }\n    `}}(a.shape,s,i):new class{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,a=pR(r),s=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);this.userCode=1!==r?`\n      ${a} start = ${a}(${s});\n      ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ${a} coords = outC - start;\n          setOutput(getX(${o}));\n        }\n      }\n    `:`\n        int start = ${s};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}}(a.shape,s,i),u=[[i]];return n.runWebGLProgram(o,[a],a.dtype,u)},xz={kernelName:qn,backendName:"webgl",kernelFunc:bz},wz=FD({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),vz={kernelName:Xn,backendName:"webgl",kernelFunc:wz},kz={kernelName:Zn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=a.shape.length,u=[],l=ca.parseAxisParam(s,a.shape);let c=l;const h=Ap.getAxesPermutation(c,o);let d,p=a;if(null!=h&&(p=qD({inputs:{x:a},backend:n,attrs:{perm:h}}),c=Ap.getInnerMostAxes(c.length,o),u.push(p)),Ap.assertAxesAreInnerMostDims("prod",c,o),n.shouldExecuteOnCPU([p])){const e=n.texData.get(p.dataId).values,{outVals:t,outShape:r,outDtype:a}=VR(p.shape,p.dtype,e,c);d=n.makeTensorInfo(r,a,t)}else{const[e,t]=Ap.computeOutAndReduceShapes(p.shape,c),r=ca.sizeFromShape(t),s=PD({inputs:{x:p},backend:n,attrs:{shape:[-1,r]}}),i=UD(s,ns(a.dtype),"prod",n);d=PD({inputs:{x:i},backend:n,attrs:{shape:e}}),u.push(s),u.push(i)}if(i){u.push(d);const e=Ap.expandShapeToKeepDim(d.shape,l);d=PD({inputs:{x:d},backend:n,attrs:{shape:e}})}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}},Iz=e=>{const{backend:t,attrs:n}=e,{start:r,stop:a,step:s,dtype:i}=n,o=UR(r,a,s,i);return t.makeTensorInfo([o.length],i,o)},Sz={kernelName:Jn,backendName:"webgl",kernelFunc:Iz},Nz=AD({opSnippet:"return 1.0 / x;"}),Tz={kernelName:er,backendName:"webgl",kernelFunc:Nz},Cz=AD({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),$z={kernelName:tr,backendName:"webgl",kernelFunc:Cz},_z=AD({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),Ez={kernelName:or,backendName:"webgl",kernelFunc:_z},Az={kernelName:sr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r,[u,l]=o,c=Ue().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new class{constructor(e,t,n,r,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[s,i,o,u]=e;this.outputShape=[s,t,n,u];const l=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n];let h;h=a?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]},\n          ${l[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${u-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}(a.shape,u,l,s,i):new class{constructor(e,t,n,r,a){this.variableNames=["A"],this.outputShape=[];const[s,i,o,u]=e;this.outputShape=[s,t,n,u];const l=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n];let h;h=a?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}(a.shape,u,l,s,i);return n.runWebGLProgram(c,[a],"float32")}},Fz={kernelName:ir,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r,o=new class{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,a]=t,[,s,i]=e,o=[n&&s>1?r-1:r,n&&i>1?a-1:a],u=[n&&s>1?s-1:s,n&&i>1?i-1:i],l=o[0]/u[0],c=o[1]/u[1],h=1/l,d=1/c,p=2*Math.ceil(h)+2,f=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${l});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${s}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${a-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}(s.shape,a.shape,i);return n.runWebGLProgram(o,[s],s.dtype)}},Rz={kernelName:rr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r,[u,l]=o,c=Ue().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new class{constructor(e,t,n,r,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[s,i,o,u]=e;this.outputShape=[s,t,n,u];const l=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n],h=r?"0.5":"0.0";let d;d=a?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]},\n          ${l[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${d};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec3 sourceNearestRC = ivec3(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${u-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        vec4 newValue = vec4(\n          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),\n          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);\n\n        setOutput(newValue);\n      }\n    `}}(a.shape,u,l,s,i):new class{constructor(e,t,n,r,a){this.variableNames=["A"],this.outputShape=[];const[s,i,o,u]=e;this.outputShape=[s,t,n,u];const l=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n],h=r?"0.5":"0.0";let d;d=a?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${d};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}(a.shape,u,l,s,i);return n.runWebGLProgram(c,[a],a.dtype)}},Dz={kernelName:ar,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r,o=new class{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,a]=t,[,s,i]=e,o=[n&&s>1?r-1:r,n&&i>1?a-1:a],u=[n&&s>1?s-1:s,n&&i>1?i-1:i],l=o[0]/u[0],c=o[1]/u[1],h=1/l,d=1/c,p=2*Math.ceil(h)+2,f=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${l});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${s}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${o[0]}) *\n                (float(dyR) / float(${u[0]}));\n\n            float sourceFracCol =\n                float(${o[1]}) *\n                  (float(dyC) / float(${u[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${a}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}(s.shape,a.shape,i);return n.runWebGLProgram(o,[s],s.dtype)}},Mz={kernelName:ur,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dims:s}=r,i=a.shape.length,o=ca.parseAxisParam(s,a.shape);if(0===i)return vD({inputs:{x:a},backend:n});const u=Ue().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new class{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;const r=iD("rc",n),a=`${r[n-1]} + 1 < ${this.outputShape[n-1]}`,s=`${r[n-2]} + 1 < ${this.outputShape[n-2]}`,i=pR(n);var o;function u(n){const r=e.map(((r,a)=>function(n,r){return-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - ${r[n]} - 1`:`${r[n]}`}(a,n)));return`getChannel(getX(${r.join(",")}), vec2(${r.slice(-2).join(",")}))`}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${e[0]} - rc - 1),\n            ${e[0]} - rc - 1);\n          if(${a}){\n              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),\n                ${e[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${i} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${o=r.slice(),u(o)};\n          if(${a}){\n            result.g = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",u(e)}(r.slice())};\n          }\n          if(${s}) {\n            result.b = ${function(e){return e[n-2]="("+e[n-2]+" + 1)",u(e)}(r.slice())};\n            if(${a}) {\n              result.a = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",e[n-2]="("+e[n-2]+" + 1)",u(e)}(r.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}(a.shape,o):new class{constructor(e,t){this.variableNames=["x"];const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${e[0]} - coord - 1));\n        }\n      `);const r=e.map(((n,r)=>(n=>-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - coords[${n}] - 1`:`coords[${n}]`)(r))).join(","),a=pR(n);this.userCode=`\n      void main() {\n        ${a} coords = getOutputCoords();\n        setOutput(getX(${r}));\n      }\n    `}}(a.shape,o);return n.runWebGLProgram(u,[a],a.dtype)}},Oz={kernelName:Xr,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,{radians:a,fillValue:s,center:i}=t,o=n,u=new class{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const n=e[1],r=e[2];this.outputShape=e;let a="";a="number"==typeof t?`float outputValue = ${t.toFixed(2)};`:`\n        vec3 fill = vec3(${t.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ${a}\n          if(coordX >= 0 && coordX < ${r} && coordY >= 0 && coordY < ${n}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}(r.shape,s),[l,c]=Ap.getImageCenter(i,r.shape[1],r.shape[2]),h=[[l,c,Math.sin(a),Math.cos(a)]];return o.runWebGLProgram(u,[r],r.dtype,h)}},Lz=AD({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),zz={kernelName:lr,backendName:"webgl",kernelFunc:Lz},Pz=AD({opSnippet:"return inversesqrt(x);",cpuKernelImpl:GR}),Bz={kernelName:cr,backendName:"webgl",kernelFunc:Pz},Wz=class{constructor(e,t,n,r,a,s,i=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=s;const o=pR(a.length),u=pR(s.length);let l="";1===n?l="i":2===n&&(l="i, j");const c=`getIndices(${l})`;let h="";1===r?h="i":2===r&&(h="i, coords[1]");const d=`getUpdates(${h})`,p=t>1?"strides[j]":"strides";this.userCode=`\n        ${o} strides = ${o}(${a});\n\n        void main() {\n          ${u} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${e}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${t}; j++) {\n              int index = round(${c});\n              flattenedIndex += index * ${p};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${d};\n              found = true;\n            }\n          }\n          setOutput(mix(getDefaultValue(), sum, float(found)));\n        }\n      `}},Vz={kernelName:hr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:a,updates:s}=t,{shape:i}=r,{sliceRank:o,numUpdates:u,sliceSize:l,strides:c,outputSize:h}=Ap.calculateShapes(s,a,i),d=[h/l,l];if(0===h)return n.makeTensorInfo(i,a.dtype);const p=PD({inputs:{x:a},backend:n,attrs:{shape:[u,o]}}),f=PD({inputs:{x:s},backend:n,attrs:{shape:[u,l]}}),m=n.makeTensorInfo([],"float32",new Float32Array([0])),g=new Wz(u,o,p.shape.length,f.shape.length,c,d),y=n.runWebGLProgram(g,[f,p,m],f.dtype),b=PD({inputs:{x:y},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(m),b}},Uz={kernelName:dr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:a,e:s}=t,i=new class{constructor(e,t,n){let r,a;if(this.variableNames=["c","a","b"],this.outputShape=t,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)a="resRC",r="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[],i=[];for(let r=0;r<t.length;r++)i.push(`${n[r]}`),r<e&&s.push(`${n[r]}`);r=s.join(),a=i.join()}const s=pR(n);this.userCode=`\n      void main() {\n        ${s} resRC = getOutputCoords();\n        float cVal = getC(${r});\n        if (cVal >= 1.0) {\n          setOutput(getA(${a}));\n        } else {\n          setOutput(getB(${a}));\n        }\n      }\n    `}}(r.shape.length,a.shape,a.shape.length);return n.runWebGLProgram(i,[r,a,s],ts(a.dtype,s.dtype))}},Gz=AD({opSnippet:`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${Ap.SELU_SCALEALPHA};\n  float scale = ${Ap.SELU_SCALE};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`}),Hz={kernelName:pr,backendName:"webgl",kernelFunc:Gz},jz=AD({opSnippet:"return 1.0 / (1.0 + exp(-1.0 * x));"}),qz={kernelName:br,backendName:"webgl",kernelFunc:jz},Kz=AD({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),Xz={kernelName:yr,backendName:"webgl",kernelFunc:Kz},Yz=AD({opSnippet:"if (isnan(x)) return x;\n  return sin(x);\n"}),Zz={kernelName:mr,backendName:"webgl",kernelFunc:Yz},Jz=AD({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),Qz={kernelName:gr,backendName:"webgl",kernelFunc:Jz},eP=AD({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),tP={kernelName:xr,backendName:"webgl",kernelFunc:eP},nP={kernelName:kr,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,paddings:i}=r;ca.assert(a.shape.length<=4,(()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"));const o=s.reduce(((e,t)=>e*t)),u=[[0,0]];u.push(...i);for(let e=1+s.length;e<a.shape.length;++e)u.push([0,0]);const l=[],c=bz({inputs:{x:a},backend:n,attrs:{paddings:u,constantValue:0}}),h=Ap.getReshaped(c.shape,s,o,!1),d=Ap.getPermuted(h.length,s.length,!1),p=Ap.getReshapedPermuted(c.shape,s,o,!1),f=PD({inputs:{x:c},backend:n,attrs:{shape:h}}),m=qD({inputs:{x:f},backend:n,attrs:{perm:d}}),g=PD({inputs:{x:m},backend:n,attrs:{shape:p}});return l.push(c),l.push(f),l.push(m),l.forEach((e=>n.disposeIntermediateTensorInfo(e))),g}},rP={kernelName:Nr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:r,values:a,denseShape:s,defaultValue:i}=t;if(1!==s.shape.length)throw new Error(`Dense shape must be a vector, saw:\n         ${s.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n         ${r.shape}`);if(1!==a.shape.length)throw new Error(`Values must be a vector, saw:\n         ${a.shape}`);if(0!==i.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${i.shape}`);const o=n.readSync(r.dataId),u=n.readSync(a.dataId),l=n.readSync(s.dataId),c=n.readSync(i.dataId)[0],[h,d,p,f,m]=qR(o,r.shape,r.dtype,u,a.dtype,l,c);return[n.makeTensorInfo(d,r.dtype,h),n.makeTensorInfo([d[0]],a.dtype,p),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}},aP={kernelName:Tr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:r,inputShape:a,newShape:s}=t;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape ${r.shape}`);if(1!==a.shape.length)throw new Error(`Input shape should be a vector but received shape ${a.shape}`);if(1!==s.shape.length)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);const i=Array.from(n.readSync(a.dataId)),o=n.readSync(r.dataId),u=Array.from(n.readSync(s.dataId)),[l,c,h]=KR(o,r.shape,r.dtype,i,u);return[n.makeTensorInfo(c,r.dtype,l),n.makeTensorInfo([h.length],s.dtype,new Int32Array(h))]}},sP={kernelName:Cr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error(`Indices should be a vector but received shape\n              ${a.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n              ${s.shape}`);const i=n.readSync(r.dataId),o=n.readSync(a.dataId),u=n.readSync(s.dataId),[l,c]=XR(i,r.shape,r.dtype,o,u,!0);return n.makeTensorInfo(c,r.dtype,l)}},iP={kernelName:$r,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error(`Indices should be a vector but received shape\n             ${a.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n             ${s.shape}`);const i=n.readSync(r.dataId),o=n.readSync(a.dataId),u=n.readSync(s.dataId),[l,c]=XR(i,r.shape,r.dtype,o,u);return n.makeTensorInfo(c,r.dtype,l)}},oP={kernelName:_r,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sparseIndices:a,sparseValues:s,defaultValue:i}=t,{outputShape:o}=r,{sliceRank:u,numUpdates:l,strides:c,outputSize:h}=Ap.calculateShapes(s,a,o),d=new Wz(l,u,a.shape.length,s.shape.length,c,[h,1],!1),p=n.runWebGLProgram(d,[s,a,i],s.dtype),f=PD({inputs:{x:p},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(p),f}},uP={kernelName:Ir,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{numOrSizeSplits:s,axis:i}=r,o=ca.parseAxisParam(i,a.shape)[0],u=Ap.prepareSplitSize(a,s,o),l=a.shape.length,c=new Array(l).fill(0),h=a.shape.slice();return u.map((e=>{const t=[...h];t[o]=e;const r=RM({inputs:{x:a},backend:n,attrs:{begin:c,size:t}});return c[o]+=e,r}))}},lP=AD({opSnippet:"return sqrt(x);"}),cP={kernelName:wr,backendName:"webgl",kernelFunc:lP},hP=AD({opSnippet:"return x * x;"}),dP={kernelName:Ar,backendName:"webgl",kernelFunc:hP},pP="return (a - b) * (a - b);",fP=FD({opSnippet:pP,packedOpSnippet:pP}),mP={kernelName:Er,backendName:"webgl",kernelFunc:fP},gP={kernelName:qr,backendName:"webgl",kernelFunc:function({inputs:e,attrs:t,backend:n}){const{x:r}=e,a=`if (isnan(x)) return x;\n    return x > 0.0 ? 1.0 : float(${t.alpha});\n  `,s=new hD(r.shape,a);return n.runWebGLProgram(s,[r],r.dtype)}},yP={kernelName:Fr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:s,end:i,strides:o,beginMask:u,endMask:l,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:d}=r,{nonStrided:p,$begin:f,$strides:m,size:g,newShape:y,outShape:b}=ro.sliceInfo(a.shape,s,i,o,u,l,c,h,d),x=PD({inputs:{x:a},backend:n,attrs:{shape:y}});let w;if(p){const e=RM({inputs:{x},backend:n,attrs:{begin:f,size:g}});w=PD({inputs:{x:e},backend:n,attrs:{shape:b}}),n.disposeIntermediateTensorInfo(e)}else if(b.some((e=>0===e)))w=n.makeTensorInfo(b,a.dtype,[]);else if(n.shouldExecuteOnCPU([x])){const e=n.texData.get(x.dataId).values,t=xi(x.shape,x.dtype,e),r=YR(b,t,m,f);w=n.makeTensorInfo(b,x.dtype,r.values)}else{const e=new class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;const r=n.length,a=pR(n.length),s=pR(n.length);let i="";if(1===r)i="coords * strides + begin";else{let e=0;i=n.map(((t,r)=>(e++,1===n.length?`coords * strides[${r}] + begin[${r}]`:`coords[${e-1}] * strides[${r}] + begin[${r}]`))).join(",")}this.userCode=`\n      ${a} begin = ${a}(${e});\n      ${a} strides = ${a}(${t});\n\n      void main() {\n        ${s} coords = getOutputCoords();\n        setOutput(getX(${i}));\n      }\n    `}}(f,m,b);w=n.runWebGLProgram(e,[x],x.dtype)}const v=PD({inputs:{x:w},backend:n,attrs:{shape:b}});return n.disposeIntermediateTensorInfo(x),n.disposeIntermediateTensorInfo(w),v}},bP={kernelName:Rr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{separator:a,nGramWidths:s,leftPad:i,rightPad:o,padWidth:u,preserveShortSequences:l}=r,{data:c,dataSplits:h}=t,d=n.readSync(c.dataId),p=n.readSync(h.dataId),[f,m]=ZR(d,p,a,s,i,o,u,l);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",m)]}},xP={kernelName:Dr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{skipEmpty:a}=r,{input:s,delimiter:i}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(1!==s.shape.length)throw new Error(`Input must be a vector, got shape: ${s.shape}`);if(0!==i.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);const o=n.readSync(s.dataId),u=n.readSync(i.dataId)[0],[l,c,h]=JR(o,u,a),d=c.length;return[n.makeTensorInfo([d,2],"int32",l),n.makeTensorInfo([d],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(h))]}},wP={kernelName:Mr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{numBuckets:a}=r,{input:s}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(a<=0)throw new Error("Number of buckets must be at least 1");const i=n.readSync(s.dataId),o=QR(i,a);return n.makeTensorInfo(s.shape,"int32",o)}},vP=AD({opSnippet:"return tan(x);"}),kP={kernelName:Lr,backendName:"webgl",kernelFunc:vP},IP=AD({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),SP={kernelName:zr,backendName:"webgl",kernelFunc:IP};function NP(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reps:s}=r;if("string"===a.dtype||a.shape.length>5){const e=n.readSync(a.dataId),t="string"===a.dtype?e.map((e=>ca.decodeString(e))):e,r=xi(a.shape,a.dtype,t),i=tD(r,s);return n.makeTensorInfo(i.shape,i.dtype,i.values)}const i=new class{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[r]*t[r];this.outputShape=n,this.rank=n.length;const r=pR(this.rank),a=function(e){const t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(1===t)return`imod(resRC, ${e[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let t=0;t<e.length;t++)r.push(`imod(${n[t]}, ${e[t]})`);return r.join()}(e);this.userCode=`\n      void main() {\n        ${r} resRC = getOutputCoords();\n        setOutput(getA(${a}));\n      }\n    `}}(a.shape,s);return n.runWebGLProgram(i,[a],a.dtype)}var TP={kernelName:Pr,backendName:"webgl",kernelFunc:NP},CP=class{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode="\n    void main() {\n         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // The output size is half of the previous size.\n         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),\n         // we only need to output the indices at positions |, the indices at\n         // positions _ can be thrown away, see Figure5(b) After Phase 2\n         // (Merge phase) in the Bitonic Top K paper referenced above.\n         // For example, the paper shows we only need to output the orange bars.\n         // The output sequence should look like this | | | | | | | |.\n         // Because the sequence is halved, to map the output index back\n         // to the previous sequence to find the corresponding value,\n         // we need to double the index. When we double the index,\n         // we basically interpolate a position, so 2i looks like\n         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position\n         // of each 2k positions by - elemIdx % k. E.g. for output at\n         // index 4,5,6,7, we want to get the corresponding element at\n         // original index 8,9,10,11, for output at index 8,9,10,11,\n         // we want to get the corresponding element at original index\n         // 16,17,18,19, so on and so forth.\n\n         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));\n\n         float x0 = getX(batch, i0);\n         float x1 = i1 < n ? getX(batch, i1) : x0;\n\n         setOutput(x0 >= x1 ? float(i0) : float(i1));\n       }\n     "}};function $P(e,t){null!==t&&e.disposeIntermediateTensorInfo(t)}function _P(e){let t=1;for(;t<e;)t*=2;return t}var EP=[RL,DL,YD,JD,eM,nM,sM,iM,oM,uM,dM,pM,mM,yM,vM,xM,IM,CM,TM,$M,_M,EM,AM,MM,OM,WM,GM,HM,qM,SD,QM,aO,sO,rO,oO,uO,iO,cO,dO,pO,yO,bO,xO,IO,SO,kO,NO,TO,CO,_O,EO,FO,DO,LO,PO,VO,HO,KO,XO,JO,eL,tL,nL,rL,aL,iL,uL,cL,kD,hL,YM,pL,mL,yL,CD,xL,vL,kL,TL,SL,$L,EL,FL,OL,BL,PL,WL,VL,UL,zL,GL,HL,qL,KL,YL,az,zD,iz,uz,cz,dz,zM,pz,gz,yz,xz,vz,ED,kz,Sz,BM,JL,Tz,Ez,$z,BD,Az,Fz,Rz,Dz,Mz,Oz,zz,Bz,Vz,Uz,Hz,qz,Xz,Zz,Qz,DM,rz,tP,nP,rP,aP,sP,iP,oP,uP,cP,dP,mP,gP,yP,bP,xP,wP,tz,jD,kP,SP,TP,{kernelName:Br,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{k:s,sorted:i}=r,o=Ue().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),u=Ue().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),l=a.shape,c=l[l.length-1];if(n.shouldExecuteOnCPU([a])||c<o||s>u){const e=n.readSync(a.dataId),[t,r]=nD(e,l,a.dtype,s,i);return[n.makeTensorInfo(t.shape,t.dtype,t.values),n.makeTensorInfo(r.shape,r.dtype,r.values)]}if(0===s)return l[l.length-1]=0,[n.makeTensorInfo(l,a.dtype,[]),n.makeTensorInfo(l,"int32",[])];if(1===c)return[a,jO({attrs:{shape:l,dtype:"int32",value:0},backend:n})];const h=n.texData.get(a.dataId),d=null!==h&&h.isPacked,p=d?n.unpackTensor(a):a,f=ca.sizeFromShape(l)/c,m=PD({inputs:{x:p},attrs:{shape:[f,c]},backend:n});d&&$P(n,p);const g=_P(s),y=_P(c);let b=null;const x=()=>null===b?[m,m]:[m,b],w=(e,t,r)=>{const a=x(),s=new class{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode="\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // We compare elements pair-wise within a group of size 2 * inc.\n         // The comparing rule for each group alternates between ascending\n         // and descending. Within each group, we compare each pair at\n         // positions i and i+inc. To decide whether an element at position i\n         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than\n         // inc, it is in the first half of the group, we denote it as x0,\n         // otherwise we denote it as x1.\n         // For example, as shown in the Bitonic top K paper referenced above,\n         // Figure5(a) shows that element[1] is in the\n         // second half of the group when group size is 2, but it is in the\n         // first half of the group when group size is 4.\n\n         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;\n         int i = isFirstInPair ? elemIdx : elemIdx - inc;\n\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));\n         float x0 = i0 < n ? getX(batch, i0) : negativeInf;\n         float x1 = i1 < n ? getX(batch, i1) : negativeInf;\n\n         // Denotes which direction indices are in (ascending or descending).\n         bool reverse = imod(elemIdx, 2 * dir) >= dir;\n         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);\n         if (reverse == isGreater) { // Elements in opposite order of direction\n           int iTemp = i0;\n           i0 = i1;\n           i1 = iTemp;\n         }\n         if (isFirstInPair) {\n            setOutput(float(i0));\n         } else {\n            setOutput(float(i1));\n         }\n       }\n     "}}(r),i=[[c],[null===b?1:0],[Number.NEGATIVE_INFINITY],[e],[t]],o=b;b=n.runWebGLProgram(s,a,"int32",i),$P(n,o)};for(let e=1;e<g;e*=2){const t=2*e;for(let n=e;n>=1;n/=2)w(t,n,[f,y])}for(let e=y;e>g;e/=2){const t=x(),r=new CP([f,e/2]),a=[[c],[null===b?1:0],[g]],s=b;b=n.runWebGLProgram(r,t,"int32",a),$P(n,s);const i=g/2,o=2*i;for(let e=i;e>=1;e/=2)w(o,e,b.shape)}let v=b;b=RM({inputs:{x:b},backend:n,attrs:{begin:0,size:[f,s]}}),$P(n,v);let k=sL({inputs:{x:m,indices:b},backend:n,attrs:{axis:1,batchDims:1}});$P(n,m);const I=l.slice(0,-1);I.push(s),v=b,b=PD({inputs:{x:b},attrs:{shape:I},backend:n}),$P(n,v);const S=k;return k=PD({inputs:{x:k},attrs:{shape:I},backend:n}),$P(n,S),[k,b]}},{kernelName:Wr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:a,transforms:s}=t,{interpolation:i,fillMode:o,fillValue:u,outputShape:l}=r,[c,h,d,p]=a.shape,[f,m]=null!=l?l:[h,d],g=[c,f,m,p],y=new class{constructor(e,t,n,r,a,s){this.variableNames=["Image","Transforms"],this.outputShape=s;const i="nearest"===n?1:2;let o;switch(r){case"constant":o=1;break;case"reflect":o=2;break;case"wrap":o=3;break;case"nearest":o=4;break;default:o=1}this.userCode=`\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(${o} == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(${a});\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(${a});\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(${t}));\n                float mapY = mapCoord(inY, float(${e}));\n\n                if (${i} == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        `}}(h,d,i,o,u,g);return n.runWebGLProgram(y,[a,s],"float32")}},KD,{kernelName:Ur,backendName:"webgl",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:a}=n,{x:s}=t;GF(s,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const i=r.readSync(s.dataId),{outputValues:o,outputShape:u,indices:l}=aD(i,a,s.shape,s.dtype);return[r.makeTensorInfo(u,s.dtype,o),r.makeTensorInfo([l.length],"int32",l)]}},{kernelName:Gr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:a}=t;let{axis:s}=r;s<0&&(s+=a.shape.length);const i=a,o=i.shape.length,u=a.shape[s],l=new Array(o-1);let c=0;for(let e=0;e<o;e++)e!==s&&(l[c++]=i.shape[e]);const h=[],d=new Array(o).fill(0),p=i.shape.slice();p[s]=1;const f=new Array(u);for(let e=0;e<f.length;e++){d[s]=e;const t=RM({inputs:{x:i},backend:n,attrs:{begin:d,size:p}}),r=PD({inputs:{x:t},backend:n,attrs:{shape:l}});f[e]=r,h.push(t)}return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}},{kernelName:Hr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,segmentIds:s}=t,{numSegments:i}=r,o=a.shape.length,u=[];let l=0;const c=Ap.getAxesPermutation([l],o);let h=a;null!=c&&(h=qD({inputs:{x:a},backend:n,attrs:{perm:c}}),u.push(h),l=Ap.getInnerMostAxes(1,o)[0]);const d=Ap.segment_util.computeOutShape(h.shape,l,i),p=ca.sizeFromShape([h.shape[l]]),f=PD({inputs:{x:h},backend:n,attrs:{shape:[-1,p]}});u.push(f);const m=ns(a.dtype),g=(e,t,r,a,s)=>{const i=e.shape[0],o=e.shape[1],l=Ap.segment_util.segOpComputeOptimalWindowSize(o,s),c={windowSize:l,inSize:o,batchSize:i,numSegments:s},h=new class{constructor(e,t){this.variableNames=["x","segmentIds"];const n=e.windowSize,r=e.batchSize,a=e.inSize,s=e.numSegments,i=s*Math.ceil(a/n);this.outputShape=[r,i];const o=4*Math.floor(n/4),u=n%4,l="\n        sumValue += dot(values, segFilter);\n    ";let c="";a%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return initializationValue;\n        }\n      `);let h="";a%n>0&&(h=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${h}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${s})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${s})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${l}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${l}\n        } else if (${2===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${l}\n        } else if (${3===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${l}\n        }\n        setOutput(sumValue);\n      }\n    `}}(c,t),d=n.compileAndRun(h,[e,r],a);if(u.push(d),d.shape[1]===s)return d;const p=Iz({backend:n,attrs:{start:0,stop:s,step:1,dtype:"float32"}}),f=NP({inputs:{x:p},backend:n,attrs:{reps:[o/l]}});return u.push(p),u.push(f),g(d,t,f,a,s)},y=PD({inputs:{x:g(f,"unsortedSegmentSum",s,m,i)},backend:n,attrs:{shape:d}});let b=y;if(null!=c){u.push(y);const e=Ap.getUndoAxesPermutation(c);b=qD({inputs:{x:b},backend:n,attrs:{perm:e}})}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),b}},mz];for(const e of EP)aa(e);var AP,FP,RP,DP,MP,OP={"tfjs-core":Lo,"tfjs-backend-cpu":"3.8.0","tfjs-backend-webgl":"3.8.0","tfjs-data":hT,"tfjs-layers":Xb,"tfjs-converter":eN,tfjs:"3.8.0"};(FP=AP||(AP={}))[FP.float32=0]="float32",FP[FP.int32=1]="int32",FP[FP.bool=2]="bool",FP[FP.string=3]="string",FP[FP.complex64=4]="complex64",(DP=RP||(RP={}))[DP.linear=0]="linear",DP[DP.relu=1]="relu",DP[DP.relu6=2]="relu6",DP[DP.prelu=3]="prelu",DP[DP.leakyrelu=4]="leakyrelu",DP[DP.sigmoid=5]="sigmoid";var LP={kernelName:Yr,backendName:"wasm",setupFunc:function(e){MP=e.wasm.cwrap(Yr,null,["number","array","number","number","array","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a,b:s,bias:i,preluActivationWeights:o}=t;if("float32"!==a.dtype||"float32"!==s.dtype)throw new Error("_FusedMatMul for non non-float32 tensors not yet supported.");const{transposeA:u,transposeB:l,activation:c,leakyreluAlpha:h}=r,d=n.dataIdMap.get(a.dataId).id,p=n.dataIdMap.get(s.dataId).id;let f=0;if(null!=i){const e=n.dataIdMap.get(i.dataId);if(1!==e.shape.length)throw new Error(`_FusedMatMul only supports rank-1 bias but got rank ${e.shape.length}.`);f=e.id}const m=null==o?0:n.dataIdMap.get(o.dataId).id,g=RP[c];if(null==g)throw new Error(`${c} activation not yet supported for FusedConv2D in the wasm backend.`);const y=u?a.shape[2]:a.shape[1],b=l?s.shape[1]:s.shape[2],x=a.shape[0],w=n.makeOutput([x,y,b],a.dtype),v=n.dataIdMap.get(w.dataId).id,k=new Uint8Array(new Int32Array(a.shape).buffer),I=new Uint8Array(new Int32Array(s.shape).buffer);return MP(d,k,a.shape.length,p,I,s.shape.length,u,l,g,f,m,h||0,v),w}};function zP(e){let t;return{kernelName:e,backendName:"wasm",setupFunc:function(n){t=n.wasm.cwrap(e,null,["number","number"])},kernelFunc:function(e){const{backend:n,inputs:{x:r}}=e,a=n.dataIdMap.get(r.dataId).id,s=n.makeOutput(r.shape,r.dtype),i=n.dataIdMap.get(s.dataId).id;return 0===ca.sizeFromShape(s.shape)||t(a,i),s}}}var PP=zP(Ke);function BP(e,t,n){let r;return{kernelName:e,backendName:"wasm",setupFunc:function(t){r=t.wasm.cwrap(e,null,["number","array","number","number","array","number","number","number"])},kernelFunc:function(a){const{backend:s,inputs:i}=a,{a:o,b:u}=i,l=s.dataIdMap.get(o.dataId).id,c=s.dataIdMap.get(u.dataId).id,h=null!=n?n:o.dtype,d=Ap.assertAndGetBroadcastShape(o.shape,u.shape),p=s.makeOutput(d,h);if(0===ca.sizeFromShape(d))return p;const f=new Uint8Array(new Int32Array(o.shape).buffer),m=new Uint8Array(new Int32Array(u.shape).buffer),g=s.dataIdMap.get(p.dataId).id,y=()=>r(l,f,o.shape.length,c,m,u.shape.length,AP[o.dtype],g);if(t&&"float32"===o.dtype)return y(),p;const b=Ap.getBroadcastDims(o.shape,d),x=Ap.getBroadcastDims(u.shape,d),w=b.every(((e,t)=>e===t)),v=x.every(((e,t)=>e===t));if(w&&v)return y(),p;throw new Error(`Broadcasting along outer dims is not yet supported for ${o.dtype} ${e}.`)}}}var WP,VP=BP(Ze,!0),UP={kernelName:Je,backendName:"wasm",setupFunc:function(e){WP=e.wasm.cwrap(Je,null,["array","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n}=e,r=n.makeOutput(t[0].shape,t[0].dtype);if(0===ca.sizeFromShape(r.shape))return r;const a=t.map((e=>n.dataIdMap.get(e.dataId).id)),s=new Uint8Array(new Int32Array(a).buffer),i=n.dataIdMap.get(r.dataId).id;return WP(s,a.length,AP[r.dtype],i),r}};function GP(e){const{inputs:{x:t},backend:n}=e,r=n.makeOutput(t.shape,t.dtype),a=n.typedArrayFromHeap(t);return n.typedArrayFromHeap(r).set(a),r}var HP,jP={kernelName:on,backendName:"wasm",kernelFunc:GP};function qP(e){const{inputs:t,backend:n,attrs:r}=e,[a,s]=function(e,t){const n=[],r=[];for(let a=0;a<e.length;++a)1!==e[a]&&n.push(e[a]),1!==e[t[a]]&&r.push(t[a]);for(let e=0;e<r.length;++e){let t=-1;for(let n=0;n<r.length;++n)r[n]>=e&&(-1===t||r[t]>r[n])&&(t=n);r[t]=e}return[n,r]}(t.x.shape,r.perm);let i=!0;for(let e=0;e<s.length;e++)s[e]!==e&&(i=!1);const o=function(e,t){const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];return n}(t.x.shape,r.perm),u={dataId:t.x.dataId,shape:a,dtype:t.x.dtype};if(i){const e=GP({inputs:t,backend:n});return e.shape=o,e}const l=n.makeOutput(o,u.dtype),c=n.dataIdMap.get(u.dataId).id,h=n.dataIdMap.get(l.dataId).id,d=new Uint8Array(new Int32Array(s).buffer),p=new Uint8Array(new Int32Array(u.shape).buffer);return HP(c,p,u.shape.length,AP[u.dtype],h,d,s.length),l}var KP,XP={kernelName:Vr,backendName:"wasm",kernelFunc:qP,setupFunc:function(e){HP=e.wasm.cwrap(Vr,null,["number","array","number","number","number","array","number"])}};function YP(e,t,n){const r=e.shape,a=e.shape.length,s=ca.parseAxisParam(t,r);let i=s;const o=Ap.getAxesPermutation(i,a);let u=null,l=!1;if(null!=o){const t=new Array(a);for(let e=0;e<t.length;e++)t[e]=r[o[e]];i=Ap.getInnerMostAxes(i.length,a),u=qP({inputs:{x:e},attrs:{perm:o},backend:n});const s=n.dataIdMap.get(e.dataId).id;n.dataIdMap.get(u.dataId).id!==s&&(l=!0)}return{transposed:u,originalAxes:s,axes:i,inputWasTransposed:l}}var ZP,JP,QP,eB={kernelName:Qe,backendName:"wasm",setupFunc:function(e){KP=e.wasm.cwrap(Qe,null,["number, number, number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n;let o=t.dataIdMap.get(i.dataId).id,u=i;const{transposed:l,axes:c,originalAxes:h,inputWasTransposed:d}=YP(i,a,t);d&&(u=l,o=t.dataIdMap.get(l.dataId).id);const p=u.shape.length;Ap.assertAxesAreInnerMostDims("all",c,p);const[f,m]=Ap.computeOutAndReduceShapes(u.shape,c),g=ca.sizeFromShape(m),y=t.makeOutput(f,i.dtype);if(0!==ca.sizeFromShape(u.shape)){const e=t.dataIdMap.get(y.dataId).id;KP(o,g,e)}if(d&&t.disposeData(l.dataId),s){const e=Ap.expandShapeToKeepDim(y.shape,h);y.shape=e}return y}},tB={kernelName:et,backendName:"wasm",setupFunc:function(e){ZP=e.wasm.cwrap(et,null,["number, number, number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n;let o=t.dataIdMap.get(i.dataId).id,u=i;const{transposed:l,axes:c,originalAxes:h,inputWasTransposed:d}=YP(i,a,t);d&&(u=l,o=t.dataIdMap.get(l.dataId).id);const p=u.shape.length;Ap.assertAxesAreInnerMostDims("any",c,p);const[f,m]=Ap.computeOutAndReduceShapes(u.shape,c),g=ca.sizeFromShape(m),y=t.makeOutput(f,i.dtype);if(0!==ca.sizeFromShape(u.shape)){const e=t.dataIdMap.get(y.dataId).id;ZP(o,g,e)}if(d&&t.disposeData(l.dataId),s){const e=Ap.expandShapeToKeepDim(y.shape,h);y.shape=e}return y}},nB={kernelName:tt,backendName:"wasm",kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{axis:a}=r,{x:s}=n,i=t.dataIdMap.get(s.dataId).id;let o=i,u=s;const{transposed:l,axes:c,inputWasTransposed:h}=YP(s,a,t);if(h){const e=t.dataIdMap.get(l.dataId).id;e!==i&&(u=l,o=e)}const d=u.shape.slice(0,-1),p=t.makeOutput(d,"int32"),f=t.dataIdMap.get(p.dataId).id,m=ca.sizeFromShape(p.shape),g=u.shape[c[0]];return JP(o,AP[u.dtype],m,g,f),h&&t.disposeData(l.dataId),p},setupFunc:function(e){JP=e.wasm.cwrap(tt,null,["number","number","number","number","number"])}},rB={kernelName:ut,backendName:"wasm",setupFunc:function(e){QP=e.wasm.cwrap(ut,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,a=t.x,s=r.dataIdMap.get(a.dataId).id,{filterSize:i,strides:o,pad:u,dimRoundingMode:l}=n,c=Ap.computePool2DInfo(a.shape,i,o,1,u,l),h=c.filterHeight,d=c.filterWidth,p=c.padInfo.top,f=c.padInfo.right,m=c.padInfo.bottom,g=c.padInfo.left,y=c.strideHeight,b=c.strideWidth,x=c.inChannels;if("channelsLast"!==c.dataFormat)throw new Error(`wasm backend does not support dataFormat:'${c.dataFormat}'. Please use 'channelsLast'.`);if(1!==c.dilationWidth||1!==c.dilationHeight)throw new Error(`was backend only supports average pooling with dilation = [1, 1], got [${c.dilationHeight}, ${c.dilationWidth}].`);const w=r.makeOutput(c.outShape,"float32"),v=r.dataIdMap.get(w.dataId).id;return QP(s,a.shape[0],a.shape[1],a.shape[2],h,d,p,f,m,g,y,b,x,v),w}};function aB(e){const{inputs:t,attrs:n}=e,{x:r}=t,{shape:a}=n,s=ca.sizeFromShape(r.shape),i=ca.inferFromImplicitShape(a,s);return ca.assert(s===ca.sizeFromShape(i),(()=>`new shape: ${i}, old shape: ${r.shape}. New shape and old shape must have the same number of elements.`)),e.backend.incRef(r.dataId),{dataId:r.dataId,shape:i,dtype:r.dtype}}var sB,iB={kernelName:nr,backendName:"wasm",kernelFunc:aB},oB={kernelName:dt,backendName:"wasm",setupFunc:function(e){sB=e.wasm.cwrap(dt,null,["number","array","number","number","array","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a,b:s}=t,{transposeA:i,transposeB:o}=r;if("float32"!==a.dtype||"float32"!==s.dtype)throw new Error("BatchMatMul for non non-float32 tensors not yet supported.");const u=a.shape.length,l=s.shape.length,c=i?a.shape[u-2]:a.shape[u-1],h=o?s.shape[l-1]:s.shape[l-2],d=i?a.shape[u-1]:a.shape[u-2],p=o?s.shape[l-2]:s.shape[l-1],f=a.shape.slice(0,-2),m=s.shape.slice(0,-2),g=ca.sizeFromShape(f),y=ca.sizeFromShape(m),b=g===y||1===g||1===y;ca.assert(u>=2&&l>=2&&b,(()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${f}) and (${m}).`));const x=(g>y?a.shape.slice(0,-2):s.shape.slice(0,-2)).concat([d,p]);ca.assert(c===h,(()=>`Error in matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${a.shape} and ${s.shape} and transposeA=${i} and transposeB=${o} must match.`));const w=o?[y,p,h]:[y,h,p],v=aB({inputs:{x:a},backend:n,attrs:{shape:i?[g,c,d]:[g,d,c]}}),k=aB({inputs:{x:s},backend:n,attrs:{shape:w}}),I=n.dataIdMap.get(v.dataId).id,S=n.dataIdMap.get(k.dataId).id,N=i?v.shape[2]:v.shape[1],T=o?k.shape[1]:k.shape[2],C=Math.max(g,y),$=n.makeOutput([C,N,T],v.dtype),_=n.dataIdMap.get($.dataId).id,E=new Uint8Array(new Int32Array(v.shape).buffer),A=new Uint8Array(new Int32Array(k.shape).buffer);return sB(I,E,v.shape.length,S,A,k.shape.length,i,o,_),n.disposeData(v.dataId),n.disposeData(k.dataId),$.shape=x,$}};function uB(e,t,n,r,a){const s=ro.isSliceContinous(r,t,n),i=ca.sizeFromShape(n),o=ca.computeStrides(r);if(s){const n=ro.computeFlatOffset(t,o);return"string"===a?e.slice(n,n+i):e.subarray(n,n+i)}const u=xi(r,a,"string"===a?Ap.fromUint8ToStringArray(e):e),l=xi(n,a);for(let e=0;e<l.size;++e){const n=l.indexToLoc(e),r=n.map(((e,n)=>e+t[n]));l.set(u.get(...r),...n)}return"string"===a?Ap.fromStringArrayToUint8(l.values):l.values}function lB(e){const{inputs:{x:t},attrs:{begin:n,size:r},backend:a}=e,[s,i]=ro.parseSliceParams(t,n,r),o=ro.isSliceContinous(t.shape,s,i),u=a.readSync(t.dataId),l=a.makeOutput(i,t.dtype),c=ca.computeStrides(t.shape),h=a.dataIdMap.get(l.dataId);if(o){const e=ro.computeFlatOffset(s,c);return"string"===t.dtype?h.stringBytes=u.slice(e,e+ca.sizeFromShape(i)):a.typedArrayFromHeap(l).set(u.subarray(e,e+ca.sizeFromShape(i))),l}if("string"===t.dtype){const e=uB(u,s,i,t.shape,t.dtype);return h.stringBytes=e,l}const d=a.typedArrayFromHeap(l),p=t.shape.length;if(2===p)!function(e,t,n,r,a){let s=0;const i=r[0],o=r[1],u=i+a[0];for(let r=i;r<u;r++){const i=r*t+o;n.set(e.subarray(i,i+a[1]),s),s+=a[1]}}(u,c[0],d,s,i);else if(3===p)!function(e,t,n,r,a,s){let i=0;const o=a[0],u=a[1],l=a[2],c=o+s[0],h=u+s[1];for(let a=o;a<c;a++)for(let o=u;o<h;o++){const u=a*t+o*n+l;r.set(e.subarray(u,u+s[2]),i),i+=s[2]}}(u,c[0],c[1],d,s,i);else if(4===p)!function(e,t,n,r,a,s,i){let o=0;const u=s[0],l=s[1],c=s[2],h=u+i[0],d=l+i[1],p=c+i[2],f=s[3];for(let s=u;s<h;s++)for(let u=l;u<d;u++)for(let l=c;l<p;l++){const c=s*t+u*n+l*r+f;a.set(e.subarray(c,c+i[3]),o),o+=i[3]}}(u,c[0],c[1],c[2],d,s,i);else{const e=uB(u,s,i,t.shape,t.dtype);d.set(e)}return l}var cB={kernelName:fr,backendName:"wasm",kernelFunc:lB},hB={kernelName:pt,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,crops:i}=r,o=s.reduce(((e,t)=>e*t)),u=Ap.getReshaped(a.shape,s,o),l=Ap.getPermuted(u.length,s.length),c=Ap.getReshapedPermuted(a.shape,s,o),h=Ap.getSliceBeginCoords(i,s.length),d=Ap.getSliceSize(c,i,s.length),p=aB({inputs:{x:a},backend:n,attrs:{shape:u}}),f=qP({inputs:{x:p},backend:n,attrs:{perm:l}}),m=lB({inputs:{x:aB({inputs:{x:f},backend:n,attrs:{shape:c}})},backend:n,attrs:{begin:h,size:d}});return n.disposeData(p.dataId),n.disposeData(f.dataId),n.disposeData(p.dataId),m}};function dB(e){const{inputs:{x:t},attrs:{dtype:n},backend:r}=e,a=r.makeOutput(t.shape,n),s=r.typedArrayFromHeap(t);return r.typedArrayFromHeap(a).set(s),a}var pB,fB={kernelName:gt,backendName:"wasm",kernelFunc:dB},mB=zP(yt),gB={kernelName:bt,backendName:"wasm",setupFunc:function(e){pB=e.wasm.cwrap(bt,null,["number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{clipValueMin:s,clipValueMax:i}=r,o=n.dataIdMap.get(a.dataId).id,u=n.makeOutput(a.shape,a.dtype),l=n.dataIdMap.get(u.dataId).id;return pB(o,s,i,l),u}};function yB(e){const{inputs:t,backend:n}=e,r=ca.parseAxisParam(e.attrs.axis,t[0].shape)[0];let a=Ap.computeOutShape(t.map((e=>e.shape)),r);const s=t.filter((e=>ca.sizeFromShape(e.shape)>0));if(1===s.length)return GP({inputs:{x:s[0]},backend:n});const i=n.makeOutput(a,t[0].dtype);if(0===ca.sizeFromShape(a))return i;const o=s.map((e=>e.shape));if(Ap.assertParamsConsistent(o,r),"string"===s[0].dtype){const e=s.map((e=>{const t=ca.sizeFromShape(e.shape.slice(r));return aB({inputs:{x:e},backend:n,attrs:{shape:[-1,t]}})})),o=e.map((e=>({vals:n.readSync(e.dataId),shape:e.shape})));a=Ap.computeOutShape(e.map((e=>e.shape)),1);const u=1===e[0].shape[0],l=function(e,t,n,r){const a=ca.getArrayFromDType(n,ca.sizeFromShape(t));if(r&&"string"!==n){let t=0;e.forEach((e=>{const n=ca.sizeFromShape(e.shape);a.set(e.vals,t),t+=n}))}else{let r=0;e.forEach((e=>{const s="string"===n?Ap.fromUint8ToStringArray(e.vals):e.vals;let i=0;for(let n=0;n<e.shape[0];++n){const o=n*t[1]+r;for(let t=0;t<e.shape[1];++t)a[o+t]=s[i++]}r+=e.shape[1]}))}return a}(o,a,t[0].dtype,u),c=Ap.computeOutShape(s.map((e=>e.shape)),r);return i.shape=c,n.dataIdMap.get(i.dataId).stringBytes=Ap.fromStringArrayToUint8(l),e.forEach((e=>n.disposeData(e.dataId))),i}const u=ca.sizeFromShape(s[0].shape.slice(0,r));let l=0;const c=s.map((e=>{const t=ca.sizeFromShape(e.shape.slice(r));return l+=t,t})),h=s.map((e=>n.typedArrayFromHeap(e))),d=n.typedArrayFromHeap(i);for(let e=0;e<u;e++){let t=e*l;for(let n=0;n<h.length;n++){const r=c[n],a=e*r,s=h[n].subarray(a,a+r);d.set(s,t),t+=r}}return i}var bB,xB,wB,vB,kB,IB={kernelName:vt,backendName:"wasm",kernelFunc:yB},SB={kernelName:kt,backendName:"wasm",setupFunc:function(e){bB=e.wasm.cwrap(kt,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{x:a,filter:s}=t,i=r.dataIdMap.get(a.dataId).id,o=r.dataIdMap.get(s.dataId).id,{strides:u,dilations:l,pad:c,dimRoundingMode:h,dataFormat:d}=n,p=Ap.convertConv2DDataFormat(d),f=Ap.computeConv2DInfo(a.shape,s.shape,u,l,c,h,!1,p),m=f.filterHeight,g=f.filterWidth,y=f.padInfo.top,b=f.padInfo.right,x=f.padInfo.bottom,w=f.padInfo.left,v=f.dilationHeight,k=f.dilationWidth,I=f.strideHeight,S=f.strideWidth,N=f.inChannels,T=f.outChannels,C="SAME"===f.padInfo.type?1:0;if("channelsLast"!==f.dataFormat)throw new Error(`wasm backend Conv2D does not support dataFormat:'${f.dataFormat}'. Please use 'channelsLast'.`);const $=r.makeOutput(f.outShape,"float32"),_=r.dataIdMap.get($.dataId).id;return bB(i,a.shape[0],a.shape[1],a.shape[2],o,m,g,y,b,x,w,C,v,k,I,S,N,T,_),$}},NB={kernelName:St,backendName:"wasm",setupFunc:function(e){xB=e.wasm.cwrap(St,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{dy:a,filter:s}=n,{strides:i,pad:o,dataFormat:u,dimRoundingMode:l,inputShape:c}=r,h=Ap.convertConv2DDataFormat(u),d=Ap.computeConv2DInfo(c,s.shape,i,1,o,l,!1,h),{batchSize:p,filterHeight:f,filterWidth:m,inChannels:g,inHeight:y,inWidth:b,outChannels:x,outHeight:w,outWidth:v,strideHeight:k,strideWidth:I}=d,S=f-1-d.padInfo.top,N=m-1-d.padInfo.left,T="channelsLast"===d.dataFormat,C=ca.computeStrides(d.inShape),$=ca.computeStrides(a.shape),[_,E,A]=ca.computeStrides(s.shape),F=C[0],R=T?C[1]:C[2],D=T?C[2]:1,M=T?1:C[1],O=$[0],L=T?$[1]:$[2],z=T?$[2]:1,P=T?1:$[1],B=t.makeOutput(d.inShape,"float32"),W=t.dataIdMap.get(B.dataId).id,V=t.dataIdMap.get(a.dataId).id,U=t.dataIdMap.get(s.dataId).id;return xB(V,U,p,f,m,y,b,g,w,v,x,k,I,S,N,_,E,A,F,R,D,M,O,L,z,P,W),B}},TB=zP($t),CB=zP(_t);(vB=wB||(wB={}))[vB.bilinear=0]="bilinear",vB[vB.nearest=1]="nearest";var $B,_B,EB,AB={kernelName:At,backendName:"wasm",setupFunc:function(e){kB=e.wasm.cwrap(At,null,["number","number","number","number","array","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{method:a,extrapolationValue:s,cropSize:i}=r,{image:o,boxes:u,boxInd:l}=n,c=u.shape[0],[h,d]=i,p=[c,h,d,o.shape[3]];let f,m=t.dataIdMap.get(o.dataId);"float32"!==o.dtype&&(f=dB({backend:t,inputs:{x:o},attrs:{dtype:"float32"}}),m=t.dataIdMap.get(f.dataId));const g=m.id,y=t.dataIdMap.get(u.dataId).id,b=t.dataIdMap.get(l.dataId).id,x=t.makeOutput(p,"float32"),w=t.dataIdMap.get(x.dataId).id,v=new Uint8Array(new Int32Array(o.shape).buffer);return kB(g,y,b,c,v,h,d,wB[a],s,w),null!=f&&t.disposeData(f.dataId),x}},FB={kernelName:Et,backendName:"wasm",setupFunc:function(e){$B=e.wasm.cwrap(Et,null,["number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r,u=a.shape.length;ca.assert("float32"===a.dtype||"int32"===a.dtype,(()=>`cumsum does not support ${a.dtype} tensors in the WASM backend`));const l=Ap.getAxesPermutation([s],u);let c=a;null!==l&&(c=qP({inputs:{x:a},attrs:{perm:l},backend:n}));const h=Ap.getInnerMostAxes(1,u)[0];Ap.assertAxesAreInnerMostDims("cumsum",[h],u);const d=n.makeOutput(c.shape,c.dtype),p=c.shape[h],f=n.dataIdMap.get(c.dataId).id,m=n.dataIdMap.get(d.dataId).id;$B(f,i?1:0,o?1:0,p,m,AP[a.dtype]);let g=d;return null!==l&&(g=qP({inputs:{x:d},attrs:{perm:Ap.getUndoAxesPermutation(l)},backend:n}),n.disposeData(c.dataId),n.disposeData(d.dataId)),g}},RB={kernelName:Rt,backendName:"wasm",setupFunc:function(e){_B=e.wasm.cwrap(Rt,null,["number","number","number","array","number","array","array","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{x:a}=n,{blockSize:s,dataFormat:i}=r;ca.assert(s>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${s}`));const o=a.shape[0],u="NHWC"===i?a.shape[1]:a.shape[2],l="NHWC"===i?a.shape[2]:a.shape[3],c="NHWC"===i?a.shape[3]:a.shape[1],h=u*s,d=l*s,p=c/(s*s),f="NHWC"===i?[o,h,d,p]:[o,p,h,d],m=t.makeOutput(f,"float32"),g=t.dataIdMap.get(a.dataId).id,y=new Uint8Array(new Int32Array(ca.computeStrides(a.shape)).buffer),b=new Uint8Array(new Int32Array(f).buffer),x=new Uint8Array(new Int32Array(ca.computeStrides(f)).buffer),w=t.dataIdMap.get(m.dataId).id;return _B(g,s,"NHWC"===i?1:0,y,a.shape.length-1,b,x,f.length,w),m}},DB={kernelName:Dt,backendName:"wasm",setupFunc:function(e){EB=e.wasm.cwrap(Dt,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{x:a,filter:s}=t,i=r.dataIdMap.get(a.dataId).id,o=r.dataIdMap.get(s.dataId).id,{strides:u,dilations:l,pad:c,dimRoundingMode:h}=n,d=null==l?[1,1]:l,p=Ap.computeConv2DInfo(a.shape,s.shape,u,d,c,h,!0),f=p.filterHeight,m=p.filterWidth,g=p.padInfo.top,y=p.padInfo.right,b=p.padInfo.bottom,x=p.padInfo.left,w=p.dilationHeight,v=p.dilationWidth,k=p.strideHeight,I=p.strideWidth,S=p.inChannels,N=p.outChannels,T="SAME"===p.padInfo.type?1:0;if("channelsLast"!==p.dataFormat)throw new Error(`wasm backend DepthwiseConv2dNative does not support dataFormat:'${p.dataFormat}'. Please use 'channelsLast'.`);const C=r.makeOutput(p.outShape,"float32"),$=r.dataIdMap.get(C.dataId).id;return EB(i,a.shape[0],a.shape[1],a.shape[2],o,f,m,g,y,b,x,T,w,v,k,I,S,N,$),C}},MB=BP(jt,!1,"bool"),OB=zP(qt);function LB(e){const{inputs:t,attrs:n,backend:r}=e,{input:a}=t,{dim:s}=n,i=a.shape.length,o=a.shape.slice();let u=s;return s<0&&(ca.assert(-(i+1)<=s,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),u=i+s+1),o.splice(u,0,1),aB({inputs:{x:a},backend:r,attrs:{shape:o}})}var zB,PB,BB,WB,VB,UB,GB,HB,jB,qB,KB,XB,YB,ZB,JB={kernelName:Kt,backendName:"wasm",kernelFunc:LB},QB={kernelName:Zt,backendName:"wasm",kernelFunc:function(e){const{attrs:{shape:t,value:n,dtype:r},backend:a}=e,s=a.makeOutput(t,r);return a.typedArrayFromHeap(s).fill(n),s}},eW={kernelName:Jt,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n}=e,{image:r}=t,a=n.makeOutput(r.shape,r.dtype),s=n.dataIdMap.get(r.dataId).id,i=n.dataIdMap.get(a.dataId).id,[o,u,l,c]=r.shape;return zB(s,o,u,l,c,i),a},setupFunc:function(e){zB=e.wasm.cwrap(Jt,null,["number","number","number","number","number","number"])}},tW=zP(Qt),nW=BP(en,!1),rW={kernelName:tn,backendName:"wasm",setupFunc:function(e){PB=e.wasm.cwrap(tn,null,["number","number","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{varianceEpsilon:a}=r,{x:s,mean:i,variance:o,offset:u,scale:l}=n,c=t.dataIdMap.get(s.dataId).id,h=t.dataIdMap.get(i.dataId).id,d=t.dataIdMap.get(o.dataId).id,p=null!=u?t.dataIdMap.get(u.dataId).id:0,f=null!=l?t.dataIdMap.get(l.dataId).id:0,m=t.makeOutput(s.shape,s.dtype);if(0===ca.sizeFromShape(s.shape))return m;const g=t.dataIdMap.get(m.dataId).id;return PB(c,h,d,p,f,a,g),m}},aW={kernelName:Zr,backendName:"wasm",setupFunc:function(e){BB=e.wasm.cwrap(Zr,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:u,pad:l,dilations:c,dataFormat:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=n,m=Ap.computeConv2DInfo(a.shape,s.shape,u,c,l,d),g=RP[p];if(null==g)throw new Error(`${p} activation not yet supported for FusedConv2D in the wasm backend.`);const y=r.dataIdMap.get(a.dataId).id,b=r.dataIdMap.get(s.dataId).id,x=m.outChannels;let w=0;if(null!=i){const e=r.dataIdMap.get(i.dataId);if(1!==e.shape.length)throw new Error(`FusedConv2D only supports rank-1 bias but got rank ${e.shape.length}.`);if(e.shape[0]!==x)throw new Error(`FusedConv2D bias shape (${e.shape}) does not match the number of output channels (${x})`);w=e.id}const v=m.filterHeight,k=m.filterWidth,I=m.padInfo.top,S=m.padInfo.right,N=m.padInfo.bottom,T=m.padInfo.left,C=m.dilationHeight,$=m.dilationWidth,_=m.strideHeight,E=m.strideWidth,A=m.inChannels,F="SAME"===m.padInfo.type?1:0,R=m.batchSize,D=m.inHeight,M=m.inWidth;if("NHWC"!==h)throw new Error(`wasm backend FusedConv2D does not support dataFormat:'${h}'. Please use 'NHWC'.`);const O=r.makeOutput(m.outShape,"float32"),L=r.dataIdMap.get(O.dataId).id,z=null==o?0:r.dataIdMap.get(o.dataId).id;return BB(y,R,D,M,b,v,k,w,I,S,N,T,F,C,$,_,E,A,x,g,z,f||0,L),O}},sW={kernelName:Jr,backendName:"wasm",setupFunc:function(e){WB=e.wasm.cwrap(Jr,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:u,pad:l,dilations:c,dataFormat:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=n,m=Ap.computeConv2DInfo(a.shape,s.shape,u,c,l,d,!0),g=RP[p];if(null==g)throw new Error(`${p} activation not yet supported for FusedDepthwiseConv2D in the wasm backend.`);const y=r.dataIdMap.get(a.dataId).id,b=r.dataIdMap.get(s.dataId).id,x=m.outChannels;let w=0;if(null!=i){const e=r.dataIdMap.get(i.dataId);if(1!==e.shape.length)throw new Error(`FusedDepthwiseConv2D only supports rank-1 bias but got rank ${e.shape.length}.`);if(e.shape[0]!==x)throw new Error(`FusedDepthwiseConv2D bias shape (${e.shape}) does not match the number of output channels (${x})`);w=e.id}const v=m.filterHeight,k=m.filterWidth,I=m.padInfo.top,S=m.padInfo.right,N=m.padInfo.bottom,T=m.padInfo.left,C=m.dilationHeight,$=m.dilationWidth,_=m.strideHeight,E=m.strideWidth,A=m.inChannels,F="SAME"===m.padInfo.type?1:0,R=m.batchSize,D=m.inHeight,M=m.inWidth;if("NHWC"!==h)throw new Error(`wasm backend FusedDepthwiseConv2D does not support dataFormat:'${h}'. Please use 'NHWC'.`);const O=r.makeOutput(m.outShape,"float32"),L=r.dataIdMap.get(O.dataId).id,z=null==o?0:r.dataIdMap.get(o.dataId).id;return WB(y,R,D,M,b,v,k,w,I,S,N,T,F,C,$,_,E,A,x,g,z,f||0,L),O}},iW={kernelName:rn,backendName:"wasm",setupFunc:function(e){VB=e.wasm.cwrap(rn,null,["number","number","number","number","number","number","array","number"])},kernelFunc:function(e){const{backend:t,inputs:n}=e,{params:r,indices:a}=n,[s,i,o,u]=Zi.prepareAndValidate(r,a),l=t.makeOutput(s,r.dtype);if(0===i)return l;const c=a.shape,h=c[c.length-1],d=t.dataIdMap.get(r.dataId).id,p=t.dataIdMap.get(a.dataId).id,f=new Uint8Array(new Int32Array(u).buffer),m=t.dataIdMap.get(l.dataId).id;return VB(d,AP[r.dtype],p,i,h,o,f,m),l}},oW={kernelName:nn,backendName:"wasm",setupFunc:function(e){UB=e.wasm.cwrap("Gather",null,["number","number","array","number","number","number","array","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{x:a,indices:s}=n,{axis:i,batchDims:o}=r,u=ca.parseAxisParam(i,a.shape)[0],l=Ap.segment_util.collectGatherOpShapeInfo(a,s,u,o),c=aB({inputs:{x:a},attrs:{shape:[l.batchSize,l.outerSize,l.dimSize,l.sliceSize]},backend:t}),h=ca.sizeFromShape(s.shape),d=aB({inputs:{x:s},attrs:{shape:[l.batchSize,h/l.batchSize]},backend:t}),p=[l.batchSize,l.outerSize,h/l.batchSize,l.sliceSize],f=t.makeOutput(p,a.dtype);if(0===ca.sizeFromShape(a.shape))return f;const m=c.shape.length-1,g=t.dataIdMap.get(c.dataId).id,y=t.dataIdMap.get(d.dataId).id,b=t.dataIdMap.get(f.dataId).id,x=new Uint8Array(new Int32Array(ca.computeStrides(c.shape)).buffer),w=new Uint8Array(new Int32Array(ca.computeStrides(p)).buffer);return UB(g,AP[a.dtype],x,m,y,l.batchSize,w,b),t.disposeData(c.dataId),t.disposeData(d.dataId),f.shape=l.outputShape,f}},uW=BP(an,!1,"bool"),lW=BP(sn,!1,"bool"),cW={kernelName:pn,backendName:"wasm",setupFunc:function(e){GB=e.wasm.cwrap(pn,null,["number","number","number"])},kernelFunc:function(e){const{inputs:{x:t},attrs:{alpha:n},backend:r}=e,a=r.dataIdMap.get(t.dataId).id,s=r.makeOutput(t.shape,t.dtype);if(0!==ca.sizeFromShape(t.shape)){const e=r.dataIdMap.get(s.dataId).id;GB(a,n,e)}return s}},hW=BP(fn,!1,"bool"),dW=BP(mn,!1,"bool"),pW=zP(yn),fW=BP(xn,!1,"bool"),mW={kernelName:Nn,backendName:"wasm",setupFunc:function(e){HB=e.wasm.cwrap(Nn,null,["number, number, number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{reductionIndices:a,keepDims:s}=r,{x:i}=n;let o=t.dataIdMap.get(i.dataId).id,u=i;const{transposed:l,axes:c,originalAxes:h,inputWasTransposed:d}=YP(i,a,t);d&&(u=l,o=t.dataIdMap.get(l.dataId).id);const p=u.shape.length;Ap.assertAxesAreInnerMostDims("max",c,p);const[f,m]=Ap.computeOutAndReduceShapes(u.shape,c),g=ca.sizeFromShape(m),y=t.makeOutput(f,i.dtype);if(0!==ca.sizeFromShape(u.shape)){const e=t.dataIdMap.get(y.dataId).id;HB(o,g,e)}if(d&&t.disposeData(l.dataId),s){const e=Ap.expandShapeToKeepDim(y.shape,h);y.shape=e}return y}},gW=BP(Tn,!1),yW={kernelName:Cn,backendName:"wasm",setupFunc:function(e){jB=e.wasm.cwrap(Cn,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,a=t.x,s=r.dataIdMap.get(a.dataId).id,{filterSize:i,strides:o,pad:u,dimRoundingMode:l}=n,c=Ap.computePool2DInfo(a.shape,i,o,1,u,l),h=c.filterHeight,d=c.filterWidth,p=c.padInfo.top,f=c.padInfo.right,m=c.padInfo.bottom,g=c.padInfo.left,y=c.dilationHeight,b=c.dilationWidth,x=c.strideHeight,w=c.strideWidth,v=c.inChannels,k=c.outChannels;if("channelsLast"!==c.dataFormat)throw new Error(`wasm backend does not support dataFormat:'${c.dataFormat}'. Please use 'channelsLast'.`);const I=r.makeOutput(c.outShape,"float32"),S=r.dataIdMap.get(I.dataId).id;return jB(s,a.shape[0],a.shape[1],a.shape[2],h,d,p,f,m,g,y,b,x,w,v,k,S),I}},bW={kernelName:Fn,backendName:"wasm",setupFunc:function(e){qB=e.wasm.cwrap(Fn,null,["number, number, number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id;let u=o,l=i;const{transposed:c,axes:h,originalAxes:d,inputWasTransposed:p}=YP(i,a,t);let f=h;if(p){const e=t.dataIdMap.get(c.dataId).id;e!==o&&(l=c,u=e,f=Ap.getInnerMostAxes(f.length,l.shape.length))}Ap.assertAxesAreInnerMostDims("mean",f,l.shape.length);const[m,g]=Ap.computeOutAndReduceShapes(l.shape,f),y=ca.sizeFromShape(g);let b=l;"float32"!==l.dtype&&(b=dB({backend:t,inputs:{x:l},attrs:{dtype:"float32"}}),u=t.dataIdMap.get(b.dataId).id);const x=t.makeOutput(m,"float32");if(0!==ca.sizeFromShape(l.shape)){const e=t.dataIdMap.get(x.dataId).id;qB(u,y,e)}if(p&&t.disposeData(c.dataId),s){const e=Ap.expandShapeToKeepDim(x.shape,d);x.shape=e}return"float32"!==l.dtype&&t.disposeData(b.dataId),x}},xW={kernelName:Rn,backendName:"wasm",setupFunc:function(e){KB=e.wasm.cwrap(Rn,null,["number, number, number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id;let u=o,l=i;const{transposed:c,axes:h,originalAxes:d,inputWasTransposed:p}=YP(i,a,t);if(p){const e=t.dataIdMap.get(c.dataId).id;e!==o&&(l=c,u=e)}const f=l.shape.length;Ap.assertAxesAreInnerMostDims("min",h,f);const[m,g]=Ap.computeOutAndReduceShapes(l.shape,h),y=ca.sizeFromShape(g),b=t.makeOutput(m,l.dtype);if(0!==ca.sizeFromShape(l.shape)){const e=t.dataIdMap.get(b.dataId).id;KB(u,y,e)}if(p&&t.disposeData(c.dataId),s){const e=Ap.expandShapeToKeepDim(b.shape,d);b.shape=e}return b}},wW=BP(Dn,!1);(YB=XB||(XB={}))[YB.reflect=0]="reflect",YB[YB.symmetric=1]="symmetric";var vW,kW={kernelName:Mn,backendName:"wasm",kernelFunc:function(e){const{inputs:{x:t},backend:n,attrs:{paddings:r,mode:a}}=e,s=r.map(((e,n)=>e[0]+t.shape[n]+e[1])),i=n.dataIdMap.get(t.dataId).id,o=n.makeOutput(s,t.dtype),u=n.dataIdMap.get(o.dataId).id,l=new Uint8Array(new Int32Array(t.shape).buffer),c=r.map((e=>e[0])),h=r.map((e=>e[1])),d=new Uint8Array(new Int32Array(c).buffer),p=new Uint8Array(new Int32Array(h).buffer);return ZB(i,l,t.shape.length,AP[t.dtype],d,p,XB[a],u),o},setupFunc:function(e){ZB=e.wasm.cwrap(Mn,null,["number","array","number","number","array","array","number","number"])}},IW=BP(zn,!0),SW=zP(Pn);function NW(e,t){const n=new Int32Array(e.wasm.HEAPU8.buffer,t,4),r=n[0],a=n[1],s=n[2],i=n[3];return e.wasm._free(t),{pSelectedIndices:r,selectedSize:a,pSelectedScores:s,pValidOutputs:i}}var TW,CW,$W,_W,EW,AW,FW,RW,DW,MW,OW,LW,zW,PW,BW,WW,VW,UW,GW,HW={kernelName:Wn,backendName:"wasm",setupFunc:function(e){vW=e.wasm.cwrap(Wn,"number",["number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{iouThreshold:a,maxOutputSize:s,scoreThreshold:i}=r,{boxes:o,scores:u}=n,l=t.dataIdMap.get(o.dataId).id,c=t.dataIdMap.get(u.dataId).id,h=vW(l,c,s,a,i),{pSelectedIndices:d,selectedSize:p,pSelectedScores:f,pValidOutputs:m}=NW(t,h);return t.wasm._free(f),t.wasm._free(m),t.makeOutput([p],"int32",d)}},jW={kernelName:Vn,backendName:"wasm",setupFunc:function(e){TW=e.wasm.cwrap(Vn,"number",["number","number","number","number","number","bool"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{iouThreshold:a,maxOutputSize:s,scoreThreshold:i,padToMaxOutputSize:o}=r,{boxes:u,scores:l}=n,c=t.dataIdMap.get(u.dataId).id,h=t.dataIdMap.get(l.dataId).id,d=TW(c,h,s,a,i,o),{pSelectedIndices:p,selectedSize:f,pSelectedScores:m,pValidOutputs:g}=NW(t,d);return t.wasm._free(m),[t.makeOutput([f],"int32",p),t.makeOutput([],"int32",g)]}},qW={kernelName:Un,backendName:"wasm",setupFunc:function(e){CW=e.wasm.cwrap(Un,"number",["number","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{iouThreshold:a,maxOutputSize:s,scoreThreshold:i,softNmsSigma:o}=r,{boxes:u,scores:l}=n,c=t.dataIdMap.get(u.dataId).id,h=t.dataIdMap.get(l.dataId).id,d=CW(c,h,s,a,i,o),{pSelectedIndices:p,selectedSize:f,pSelectedScores:m,pValidOutputs:g}=NW(t,d);return t.wasm._free(g),[t.makeOutput([f],"int32",p),t.makeOutput([f],"float32",m)]}},KW=BP(Bn,!1,"bool"),XW={kernelName:Hn,backendName:"wasm",setupFunc:function(e){$W=e.wasm.cwrap(Hn,null,["number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:a}=t,{depth:s,onValue:i,offValue:o}=r,u=n.makeOutput([...a.shape,s],"int32"),l=n.dataIdMap.get(u.dataId).id,c=n.dataIdMap.get(a.dataId).id;return $W(c,s,i,o,l),u}},YW={kernelName:Gn,backendName:"wasm",kernelFunc:function(e){const{inputs:{x:t},backend:n}=e,r=n.makeOutput(t.shape,t.dtype);return n.typedArrayFromHeap(r).fill(1),r}},ZW={kernelName:jn,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{axis:a}=r;if(1===t.length)return LB({inputs:{input:t[0]},backend:n,attrs:{dim:a}});const s=t[0].shape,i=t[0].dtype;t.forEach((e=>{ca.assertShapesMatch(s,e.shape,"All tensors passed to stack must have matching shapes"),ca.assert(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const o=[],u=yB({inputs:t.map((e=>{const t=LB({inputs:{input:e},backend:n,attrs:{dim:a}});return o.push(t),t})),backend:n,attrs:{axis:a}});return o.forEach((e=>n.disposeData(e.dataId))),u}},JW={kernelName:qn,backendName:"wasm",kernelFunc:function(e){const{inputs:{x:t},backend:n,attrs:{paddings:r,constantValue:a}}=e,s=r.map(((e,n)=>e[0]+t.shape[n]+e[1])),i=n.dataIdMap.get(t.dataId).id,o=n.makeOutput(s,t.dtype),u=n.dataIdMap.get(o.dataId).id,l=new Uint8Array(new Int32Array(t.shape).buffer),c=r.map((e=>e[0])),h=r.map((e=>e[1])),d=new Uint8Array(new Int32Array(c).buffer),p=new Uint8Array(new Int32Array(h).buffer);return _W(i,l,t.shape.length,AP[t.dtype],d,p,a,u),o},setupFunc:function(e){_W=e.wasm.cwrap(qn,null,["number","array","number","number","array","array","number","number"])}},QW=BP(Xn,!1),eV={kernelName:Yn,backendName:"wasm",setupFunc:function(e){EW=e.wasm.cwrap(Yn,null,["number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r,alpha:a}=t,s=n.dataIdMap.get(r.dataId).id,i=n.dataIdMap.get(a.dataId).id,o=n.makeOutput(r.shape,"float32"),u=n.dataIdMap.get(o.dataId).id;return EW(s,i,u),o}},tV={kernelName:Zn,backendName:"wasm",setupFunc:function(e){AW=e.wasm.cwrap(Zn,null,["number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id;let u=o,l=i;const{transposed:c,axes:h,originalAxes:d,inputWasTransposed:p}=YP(i,a,t);let f=h;if(p){const e=t.dataIdMap.get(c.dataId).id;e!==o&&(l=c,u=e,f=Ap.getInnerMostAxes(f.length,l.shape.length))}Ap.assertAxesAreInnerMostDims("prod",f,l.shape.length);const[m,g]=Ap.computeOutAndReduceShapes(l.shape,f),y=ca.sizeFromShape(g),b=t.makeOutput(m,l.dtype);if(0!==ca.sizeFromShape(l.shape)){const e=t.dataIdMap.get(b.dataId).id;AW(u,y,AP[b.dtype],e)}if(p&&t.disposeData(c.dataId),s){const e=Ap.expandShapeToKeepDim(b.shape,d);b.shape=e}return b}},nV={kernelName:Jn,backendName:"wasm",kernelFunc:e=>{const{backend:t,attrs:n}=e,{start:r,stop:a,step:s,dtype:i}=n,o=function(e,t,n,r){if(e===t||e<t&&n<0||t<e&&n>1)return ca.makeZerosTypedArray(0,r);const a=Math.abs(Math.ceil((t-e)/n)),s=ca.makeZerosTypedArray(a,r);t<e&&1===n&&(n=-1),s[0]=e;for(let e=1;e<s.length;e++)s[e]=s[e-1]+n;return s}(r,a,s,i),u=t.makeOutput([o.length],i);return t.typedArrayFromHeap(u).set(o),u}},rV=BP(Wt,!0),aV=zP(tr),sV=zP(or),iV={kernelName:sr,backendName:"wasm",setupFunc:function(e){FW=e.wasm.cwrap(sr,null,["number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{images:a}=n,{alignCorners:s,halfPixelCenters:i,size:o}=r,[u,l]=o,[c,h,d,p]=a.shape,f=[c,u,l,p];let m,g=t.dataIdMap.get(a.dataId);"float32"!==g.dtype&&(m=dB({backend:t,inputs:{x:a},attrs:{dtype:"float32"}}),g=t.dataIdMap.get(m.dataId));const y=g.id,b=t.makeOutput(f,"float32");if(0===ca.sizeFromShape(a.shape))return b;const x=t.dataIdMap.get(b.dataId).id;return FW(y,c,h,d,p,u,l,s?1:0,i?1:0,x),null!=m&&t.disposeData(m.dataId),b}},oV={kernelName:ur,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dims:s}=r,i=ca.parseAxisParam(s,a.shape);if(0===a.shape.length)return GP({inputs:{x:a},backend:n});const o=n.makeOutput(a.shape,a.dtype),u=n.dataIdMap.get(a.dataId).id,l=n.dataIdMap.get(o.dataId).id,c=new Uint8Array(new Int32Array(i).buffer),h=new Uint8Array(new Int32Array(a.shape).buffer);RW(u,c,i.length,h,a.shape.length,l);const d=aB({inputs:{x:o},attrs:{shape:a.shape},backend:n});return n.disposeData(o.dataId),d},setupFunc:function(e){RW=e.wasm.cwrap(ur,null,["number","array","number","array","number","number"])}},uV={kernelName:Xr,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:a}=t,{radians:s,fillValue:i,center:o}=r,u=n.makeOutput(a.shape,a.dtype),l=n.dataIdMap.get(a.dataId).id,c=n.dataIdMap.get(u.dataId).id,[h,d,p,f]=a.shape,[m,g]=Ap.getImageCenter(o,d,p),y="number"==typeof i?[i,i,i,0===i?0:255]:[...i,255],b=new Uint8Array(new Int32Array(y).buffer);return DW(l,h,d,p,f,s,m,g,b,y.length,c),u},setupFunc:function(e){DW=e.wasm.cwrap(Xr,null,["number","number","number","number","number","number","number","number","array","number","number"])}},lV=zP(lr),cV=zP(cr),hV={kernelName:hr,backendName:"wasm",setupFunc:function(e){MW=e.wasm.cwrap(hr,null,["number","number","number","number","number","number","array","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{indices:a,updates:s}=n,{shape:i}=r,o=t.makeOutput(i,s.dtype);if(0===ca.sizeFromShape(i))return o;const{sliceRank:u,numUpdates:l,sliceSize:c,strides:h,outputSize:d}=Qi.calculateShapes(s,a,i),p=t.dataIdMap.get(a.dataId).id,f=t.dataIdMap.get(s.dataId).id,m=new Uint8Array(new Int32Array(h).buffer),g=t.dataIdMap.get(o.dataId).id;return MW(p,f,AP[s.dtype],u,l,c,m,d,g),o}},dV={kernelName:dr,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:a,e:s}=t,i=n.dataIdMap.get(r.dataId).id,o=n.dataIdMap.get(a.dataId).id,u=n.dataIdMap.get(s.dataId).id,l=n.makeOutput(a.shape,a.dtype),c=n.dataIdMap.get(l.dataId).id,h=r.shape.length,d=a.shape.length,p=0===h||h>1||1===d?1:ca.sizeFromShape(a.shape.slice(1));return OW(i,o,u,p,c),l},setupFunc:function(e){OW=e.wasm.cwrap("SelectV2",null,["number","number","number","number","number"])}},pV={kernelName:"Sigmoid",backendName:"wasm",setupFunc:function(e){LW=e.wasm.cwrap(br,null,["number","number"])},kernelFunc:function(e){const{backend:t,inputs:{x:n}}=e,r=t.dataIdMap.get(n.dataId).id,a=t.makeOutput(n.shape,n.dtype),s=t.dataIdMap.get(a.dataId).id;return 0===ca.sizeFromShape(a.shape)||LW(r,s),a}},fV=zP(mr),mV={kernelName:Sr,backendName:"wasm",setupFunc:function(e){zW=e.wasm.cwrap(Sr,null,["number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:{logits:n},attrs:{dim:r}}=e,a=t.dataIdMap.get(n.dataId).id,s=t.makeOutput(n.shape,n.dtype),i=t.dataIdMap.get(s.dataId).id,o=n.shape[r],u=ca.sizeFromShape(n.shape)/o;return 0===ca.sizeFromShape(s.shape)||zW(a,i,o,u),s}},gV={kernelName:kr,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,paddings:i}=r,o=ca.sizeFromShape(s),u=[[0,0]];u.push(...i);for(let e=1+s.length;e<a.shape.length;++e)u.push([0,0]);const l=JW.kernelFunc({inputs:{x:a},backend:n,attrs:{paddings:u,constantValue:0}}),c=Ap.getReshaped(l.shape,s,o,!1),h=Ap.getPermuted(c.length,s.length,!1),d=Ap.getReshapedPermuted(l.shape,s,o,!1),p=aB({inputs:{x:l},backend:n,attrs:{shape:c}}),f=qP({inputs:{x:p},backend:n,attrs:{perm:h}}),m=aB({inputs:{x:f},backend:n,attrs:{shape:d}});return n.disposeData(l.dataId),n.disposeData(p.dataId),n.disposeData(f.dataId),m}},yV={kernelName:Ir,backendName:"wasm",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{x:a}=t,{numOrSizeSplits:s,axis:i}=n,o=ca.parseAxisParam(i,a.shape)[0],u=Ap.prepareSplitSize(a,s,o),l=new Array(a.shape.length).fill(0),c=a.shape.slice();return u.map((e=>{const t=[...c];t[o]=e;const n=lB({inputs:{x:a},attrs:{begin:l,size:t},backend:r});return l[o]+=e,n}))}},bV=zP(wr),xV=zP(Ar),wV=BP(Er,!0),vV={kernelName:qr,backendName:"wasm",setupFunc:function(e){PW=e.wasm.cwrap(qr,null,["number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{alpha:a}=r,{x:s}=n,i=t.dataIdMap.get(s.dataId).id,o=t.makeOutput(s.shape,s.dtype),u=t.dataIdMap.get(o.dataId).id;return PW(i,a,u),o}},kV={kernelName:Fr,backendName:"wasm",setupFunc:function(e){BW=e.wasm.cwrap(Fr,null,["number","array","number","array","array","array","array","array","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{x:a}=n;let{begin:s,end:i,strides:o}=r;null==o&&(o=new Array(s.length));const{beginMask:u,endMask:l,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:d}=r,p=Ap.slice_util.maskToAxes(c);if(p.length>1)throw new Error("Multiple ellipses in slice is not allowed.");if(0!==c&&0!==h)throw new Error("Using both ellipsisMask and newAxisMask is not yet supported.");if(0!==c&&0!==d)throw new Error("Using both ellipsisMask and shrinkAxisMask is not yet supported.");const f=a.shape.length-s.length,m=Ap.slice_util.maskToAxes(h),g=a.shape.slice();m.forEach((e=>{s[e]=0,i[e]=1,g.splice(e,0,1)}));const y=aB({inputs:{x:a},attrs:{shape:g},backend:t}),{begin:b,end:x,strides:w}=Ap.slice_util.getNormalizedAxes(y.shape,p,f,s,i,o,u,l,c);s=b,i=x,o=w;const v=Ap.slice_util.maskToAxes(d);v.forEach((e=>{i[e]=s[e]+1,o[e]=1}));const k=Ap.slice_util.computeOutShape(s,i,o),I=k.filter(((e,t)=>-1===v.indexOf(t)));if(o.every((e=>1===e))){const e=lB({inputs:{x:y},attrs:{begin:s,size:k},backend:t});t.disposeData(y.dataId);const n=aB({inputs:{x:e},attrs:{shape:I},backend:t});return t.disposeData(e.dataId),n}const S=t.makeOutput(I,"float32");if(!I.some((e=>0===e))){const e=t.dataIdMap.get(y.dataId).id,n=new Uint8Array(new Int32Array(ca.computeStrides(y.shape)).buffer),r=new Uint8Array(new Int32Array(s).buffer),a=new Uint8Array(new Int32Array(i).buffer),u=new Uint8Array(new Int32Array(o).buffer),l=new Uint8Array(new Int32Array(I).buffer),c=new Uint8Array(new Int32Array(ca.computeStrides(I)).buffer),h=t.dataIdMap.get(S.dataId).id;BW(e,n,y.shape.length,r,a,u,l,c,I.length,h)}t.disposeData(y.dataId);const N=aB({inputs:{x:S},attrs:{shape:I},backend:t});return t.disposeData(S.dataId),N}},IV=BP(Or,!0),SV={kernelName:vr,backendName:"wasm",setupFunc:function(e){WW=e.wasm.cwrap(vr,null,["number, number, number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id;let u=o,l=i;const{transposed:c,axes:h,originalAxes:d,inputWasTransposed:p}=YP(i,a,t);let f=h;if(p){const e=t.dataIdMap.get(c.dataId).id;e!==o&&(l=c,u=e,f=Ap.getInnerMostAxes(f.length,l.shape.length))}Ap.assertAxesAreInnerMostDims("sum",f,l.shape.length);const[m,g]=Ap.computeOutAndReduceShapes(l.shape,f),y=ca.sizeFromShape(g),b=t.makeOutput(m,l.dtype);if(0!==ca.sizeFromShape(l.shape)){const e=t.dataIdMap.get(b.dataId).id;WW(u,y,e)}if(p&&t.disposeData(c.dataId),s){const e=Ap.expandShapeToKeepDim(b.shape,d);b.shape=e}return b}},NV=zP(Lr),TV=zP(zr),CV=[PP,VP,UP,eB,tB,nB,rB,oB,hB,fB,mB,gB,IB,SB,NB,TB,CB,AB,FB,RB,DB,MB,OB,JB,QB,eW,tW,nW,LP,rW,aW,sW,iW,oW,uW,lW,jP,cW,hW,dW,pW,fW,mW,gW,yW,bW,xW,wW,kW,IW,SW,HW,jW,qW,KW,XW,YW,ZW,JW,QW,eV,tV,nV,rV,aV,sV,iB,iV,oV,uV,cV,lV,hV,dV,pV,fV,cB,mV,gV,yV,bV,xV,wV,vV,kV,IV,SV,NV,TV,{kernelName:Pr,backendName:"wasm",setupFunc:function(e){VW=e.wasm.cwrap(Pr,null,["number","array","number","array","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,s=n.dataIdMap.get(a.dataId).id,{reps:i}=r,o=new Array(a.shape.length);for(let e=0;e<o.length;e++)o[e]=a.shape[e]*i[e];const u=new Uint8Array(new Int32Array(a.shape).buffer),l=new Uint8Array(new Int32Array(o).buffer),c=n.makeOutput(o,a.dtype),h=n.dataIdMap.get(c.dataId).id;return VW(s,u,a.shape.length,l,o.length,AP[c.dtype],h),c}},{kernelName:Br,backendName:"wasm",setupFunc:function(e){UW=e.wasm.cwrap(Br,null,["number","array","number","number","number","bool","number","number"])},kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r}=e,{k:a,sorted:s}=n,i=t.dataIdMap.get(r.dataId).id,o=new Uint8Array(new Int32Array(r.shape).buffer),u=r.shape.slice();u[u.length-1]=a;const l=t.makeOutput(u,r.dtype),c=t.dataIdMap.get(l.dataId).id,h=t.makeOutput(u,"int32"),d=t.dataIdMap.get(h.dataId).id;return UW(i,o,r.shape.length,AP[r.dtype],a,s,c,d),[l,h]}},{kernelName:Wr,backendName:"wasm",setupFunc:function(e){GW=e.wasm.cwrap(Wr,null,["number","number","bool","number","number","number","number","number","number","array","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{image:a,transforms:s}=n,{interpolation:i,fillMode:o,fillValue:u,outputShape:l}=r,[c,h,d,p]=a.shape,[f,m]=null!=l?l:[h,d],g=[c,f,m,p],y=new Uint8Array(new Int32Array(ca.computeStrides(a.shape)).buffer),b=t.makeOutput(g,a.dtype),x=t.dataIdMap.get(b.dataId).id,w=t.dataIdMap.get(a.dataId).id,v=t.dataIdMap.get(s.dataId).id,k="nearest"===i?1:2;let I;switch(o){case"constant":I=1;break;case"reflect":I=2;break;case"wrap":I=3;break;case"nearest":I=4;break;default:I=1}return GW(w,v,s.shape[0]>1,c,f,m,p,d,h,y,a.shape.length-1,k,I,u,x),b}},XP,{kernelName:Gr,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:a}=t;let{axis:s}=r;s<0&&(s+=a.shape.length);const i=a.shape[s],o=a.shape.length,u=new Array(o-1);let l=0;for(let e=0;e<o;e++)e!==s&&(u[l++]=a.shape[e]);const c=new Array(i),h=new Array(o).fill(0),d=a.shape.slice();d[s]=1;for(let e=0;e<c.length;e++)h[s]=e,c[e]=lB({inputs:{x:a},attrs:{begin:h,size:d},backend:n});return c.map((({dataId:e,dtype:t})=>({dataId:e,dtype:t,shape:u})))}},{kernelName:jr,backendName:"wasm",kernelFunc:function(e){const{inputs:{x:t},backend:n}=e,r=n.makeOutput(t.shape,t.dtype);return n.typedArrayFromHeap(r).fill(0),r}}];for(const e of CV)aa(e);var $V=Ue();$V.registerFlag("WASM_HAS_SIMD_SUPPORT",(async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11])))),$V.registerFlag("WASM_HAS_MULTITHREAD_SUPPORT",(async()=>{if($V.get("IS_NODE"))return!1;try{return(new MessageChannel).port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch(e){return!1}}));var _V=b(V()),EV=b(U()),AV=class extends H{constructor(e){super(),this.wasm=e,this.dataIdNextNumber=1,this.wasm.tfjs.init(),this.dataIdMap=new G(this,Uo())}write(e,t,n){const r={id:this.dataIdNextNumber++};return this.move(r,e,t,n,1),r}numDataIds(){return this.dataIdMap.numDataIds()}async time(e){const t=ca.now();return e(),{kernelMs:ca.now()-t}}move(e,t,n,r,a){const s=this.dataIdNextNumber++;if("string"===r){const i=t;return void this.dataIdMap.set(e,{id:s,stringBytes:i,shape:n,dtype:r,memoryOffset:null,refCount:a})}const i=ca.sizeFromShape(n),o=i*ca.bytesPerElement(r),u=this.wasm._malloc(o);this.dataIdMap.set(e,{id:s,memoryOffset:u,shape:n,dtype:r,refCount:a}),this.wasm.tfjs.registerTensor(s,i,u),null!=t&&this.wasm.HEAPU8.set(new Uint8Array(t.buffer,t.byteOffset,o),u)}async read(e){return this.readSync(e)}readSync(e){const{memoryOffset:t,dtype:n,shape:r,stringBytes:a}=this.dataIdMap.get(e);return"string"===n?a:function(e,t){switch(t){case"float32":return new Float32Array(e);case"int32":return new Int32Array(e);case"bool":return new Uint8Array(e);default:throw new Error(`Unknown dtype ${t}`)}}(this.wasm.HEAPU8.slice(t,t+ca.sizeFromShape(r)*ca.bytesPerElement(n)).buffer,n)}disposeData(e,t=!1){if(this.dataIdMap.has(e)){const n=this.dataIdMap.get(e);if(n.refCount--,!t&&n.refCount>0)return!1;this.wasm._free(n.memoryOffset),this.wasm.tfjs.disposeData(n.id),this.dataIdMap.delete(e)}return!0}refCount(e){return this.dataIdMap.has(e)?this.dataIdMap.get(e).refCount:0}incRef(e){const t=this.dataIdMap.get(e);null!=t&&t.refCount++}floatPrecision(){return 32}getMemoryOffset(e){return this.dataIdMap.get(e).memoryOffset}dispose(){this.wasm.tfjs.dispose(),"PThread"in this.wasm&&this.wasm.PThread.terminateAllThreads(),this.wasm=null}memory(){return{unreliable:!1}}makeOutput(e,t,n){let r;if(null==n)r=this.write(null,e,t);else{const a=this.dataIdNextNumber++;r={id:a},this.dataIdMap.set(r,{id:a,memoryOffset:n,shape:e,dtype:t,refCount:1});const s=ca.sizeFromShape(e);this.wasm.tfjs.registerTensor(a,s,n)}return{dataId:r,shape:e,dtype:t}}typedArrayFromHeap({shape:e,dtype:t,dataId:n}){const r=this.wasm.HEAPU8.buffer,{memoryOffset:a}=this.dataIdMap.get(n),s=ca.sizeFromShape(e);switch(t){case"float32":return new Float32Array(r,a,s);case"int32":return new Int32Array(r,a,s);case"bool":return new Uint8Array(r,a,s);default:throw new Error(`Unknown dtype ${t}`)}}};function FV(e,t,n){if(null!=DV)return DV;let r="tfjs-backend-wasm.wasm";return e&&t?r="tfjs-backend-wasm-threaded-simd.wasm":e&&(r="tfjs-backend-wasm-simd.wasm"),null!=OV&&null!=OV[r]?OV[r]:n+r}var RV=["tfjs-backend-wasm.wasm","tfjs-backend-wasm-simd.wasm","tfjs-backend-wasm-threaded-simd.wasm"],DV=null,MV=null,OV={},LV=!1,zV=!1;function PV(e,t=!1){if(Wo("setWasmPath has been deprecated in favor of setWasmPaths and will be removed in a future release."),LV)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPath()` before you call `tf.setBackend()` or `tf.ready()`");DV=e,zV=t}function BV(e,t=!1){if(LV)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPaths()` before you call `tf.setBackend()` or `tf.ready()`");if("string"==typeof e)MV=e;else{OV=e;const t=RV.filter((e=>null==OV[e]));if(t.length>0)throw new Error(`There were no entries found for the following binaries: ${t.join(",")}. Please either call setWasmPaths with a map providing a path for each binary, or with a string indicating the directory where all the binaries can be found.`)}zV=t}var WV="3.8.0";nu("wasm",(async()=>{const{wasm:e}=await async function(){const[e,t]=await Promise.all([Ue().getAsync("WASM_HAS_SIMD_SUPPORT"),Ue().getAsync("WASM_HAS_MULTITHREAD_SUPPORT")]);return new Promise(((n,r)=>{const a={};var s;a.locateFile=(n,r)=>{if(n.endsWith(".worker.js")){const e=new Blob(['var Module={};function threadPrintErr(){var text=Array.prototype.slice.call(arguments).join(" ");console.error(text)}function threadAlert(){var text=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:text,threadId:Module["_pthread_self"]()})}var err=threadPrintErr;this.alert=threadAlert;Module["instantiateWasm"]=function(info,receiveInstance){var instance=new WebAssembly.Instance(Module["wasmModule"],info);Module["wasmModule"]=null;receiveInstance(instance);return instance.exports};function moduleLoaded(){}this.onmessage=function(e){try{if(e.data.cmd==="load"){Module["wasmModule"]=e.data.wasmModule;Module["wasmMemory"]=e.data.wasmMemory;Module["buffer"]=Module["wasmMemory"].buffer;Module["ENVIRONMENT_IS_PTHREAD"]=true;if(typeof e.data.urlOrBlob==="string"){importScripts(e.data.urlOrBlob)}else{var objectUrl=URL.createObjectURL(e.data.urlOrBlob);importScripts(objectUrl);URL.revokeObjectURL(objectUrl)}WasmBackendModuleThreadedSimd(Module).then(function(instance){Module=instance;moduleLoaded()})}else if(e.data.cmd==="objectTransfer"){Module["PThread"].receiveObjectTransfer(e.data)}else if(e.data.cmd==="run"){Module["__performance_now_clock_drift"]=performance.now()-e.data.time;Module["__emscripten_thread_init"](e.data.threadInfoStruct,0,0);var max=e.data.stackBase;var top=e.data.stackBase+e.data.stackSize;Module["establishStackSpace"](top,max);Module["_emscripten_tls_init"]();Module["PThread"].receiveObjectTransfer(e.data);Module["PThread"].setThreadStatus(Module["_pthread_self"](),1);try{var result=Module["invokeEntryPoint"](e.data.start_routine,e.data.arg);if(!Module["getNoExitRuntime"]())Module["PThread"].threadExit(result)}catch(ex){if(ex==="Canceled!"){Module["PThread"].threadCancel()}else if(ex!="unwind"){if(ex instanceof Module["ExitStatus"]){if(Module["getNoExitRuntime"]()){}else{Module["PThread"].threadExit(ex.status)}}else{Module["PThread"].threadExit(-2);throw ex}}}}else if(e.data.cmd==="cancel"){if(Module["_pthread_self"]()){Module["PThread"].threadCancel()}}else if(e.data.target==="setimmediate"){}else if(e.data.cmd==="processThreadQueue"){if(Module["_pthread_self"]()){Module["_emscripten_current_thread_process_queued_calls"]()}}else{err("worker.js received unknown command "+e.data.cmd);err(e.data)}}catch(ex){err("worker.js onmessage() captured an uncaught exception: "+ex);if(ex&&ex.stack)err(ex.stack);throw ex}};if(typeof process==="object"&&typeof process.versions==="object"&&typeof process.versions.node==="string"){self={location:{href:__filename}};var onmessage=this.onmessage;var nodeWorkerThreads=require("worker_threads");global.Worker=nodeWorkerThreads.Worker;var parentPort=nodeWorkerThreads.parentPort;parentPort.on("message",function(data){onmessage({data:data})});var nodeFS=require("fs");var nodeRead=function(filename){return nodeFS.readFileSync(filename,"utf8")};function globalEval(x){global.require=require;global.Module=Module;eval.call(null,x)}importScripts=function(f){globalEval(nodeRead(f))};postMessage=function(msg){parentPort.postMessage(msg)};if(typeof performance==="undefined"){performance={now:function(){return Date.now()}}}}'],{type:"application/javascript"});return URL.createObjectURL(e)}return n.endsWith(".wasm")?FV(e,t,null!=MV?MV:r):r+n},zV&&(a.instantiateWasm=(s=FV(e,t,null!=MV?MV:""),(e,t)=>(ca.fetch(s,{credentials:"same-origin"}).then((n=>{n.ok||e.env.a(`failed to load wasm binary file at '${s}'`),n.arrayBuffer().then((n=>{WebAssembly.instantiate(n,e).then((e=>{t(e.instance,e.module)}))}))})),{})));let i,o=!1;a.onAbort=()=>{o||LV||(LV=!0,r({message:"Make sure the server can serve the `.wasm` file relative to the bundled js file. For more details see https://github.com/tensorflow/tfjs/blob/master/tfjs-backend-wasm/README.md#using-bundlers"}))},t&&e&&null==DV?(a.mainScriptUrlOrBlob=new Blob(["var WasmBackendModuleThreadedSimd = "+_V.default.toString()],{type:"text/javascript"}),i=(0,_V.default)(a)):i=(0,EV.default)(a),i.then((e=>{o=!0,LV=!1,e.tfjs={init:e.cwrap("init",null,[]),registerTensor:e.cwrap("register_tensor",null,["number","number","number"]),disposeData:e.cwrap("dispose_data",null,["number"]),dispose:e.cwrap("dispose",null,[])},n({wasm:e})}))}))}();return new AV(e)}),2);var VV={};function UV(e,t,n=!1){if(e.beginPath(),t.slice(1).forEach((({x:n,y:r},a)=>{const s=t[a];e.moveTo(s.x,s.y),e.lineTo(n,r)})),n){const n=t[t.length-1],r=t[0];if(!n||!r)return;e.moveTo(n.x,n.y),e.lineTo(r.x,r.y)}e.stroke()}i(VV,{AnchorPosition:()=>LU,DrawBox:()=>HU,DrawBoxOptions:()=>GU,DrawFaceLandmarks:()=>UG,DrawFaceLandmarksOptions:()=>VG,DrawTextField:()=>UU,DrawTextFieldOptions:()=>VU,drawContour:()=>UV,drawDetections:()=>jU,drawFaceExpressions:()=>PG,drawFaceLandmarks:()=>GG});var GV={};i(GV,{computeReshapedDimensions:()=>tU,getCenterPoint:()=>nU,isDimensions:()=>eU,isEven:()=>JV,isFloat:()=>ZV,isTensor:()=>jV,isTensor1D:()=>qV,isTensor2D:()=>KV,isTensor3D:()=>XV,isTensor4D:()=>YV,isValidNumber:()=>aU,isValidProbablitiy:()=>sU,range:()=>rU,round:()=>QV});var HV=class{constructor(e,t){if(!aU(e)||!aU(t))throw new Error(`Dimensions.constructor - expected width and height to be valid numbers, instead have ${JSON.stringify({width:e,height:t})}`);this._width=e,this._height=t}get width(){return this._width}get height(){return this._height}reverse(){return new HV(1/this.width,1/this.height)}};function jV(e,t){return e instanceof Ba&&e.shape.length===t}function qV(e){return jV(e,1)}function KV(e){return jV(e,2)}function XV(e){return jV(e,3)}function YV(e){return jV(e,4)}function ZV(e){return e%1!=0}function JV(e){return e%2==0}function QV(e,t=2){const n=10**t;return Math.floor(e*n)/n}function eU(e){return e&&e.width&&e.height}function tU({width:e,height:t},n){const r=n/Math.max(t,e);return new HV(Math.round(e*r),Math.round(t*r))}function nU(e){return e.reduce(((e,t)=>e.add(t)),new iU(0,0)).div(new iU(e.length,e.length))}function rU(e,t,n){return Array(e).fill(0).map(((e,r)=>t+r*n))}function aU(e){return!!e&&e!==1/0&&e!==-1/0&&!Number.isNaN(e)||0===e}function sU(e){return aU(e)&&e>=0&&e<=1}var iU=class{constructor(e,t){this._x=e,this._y=t}get x(){return this._x}get y(){return this._y}add(e){return new iU(this.x+e.x,this.y+e.y)}sub(e){return new iU(this.x-e.x,this.y-e.y)}mul(e){return new iU(this.x*e.x,this.y*e.y)}div(e){return new iU(this.x/e.x,this.y/e.y)}abs(){return new iU(Math.abs(this.x),Math.abs(this.y))}magnitude(){return Math.sqrt(this.x**2+this.y**2)}floor(){return new iU(Math.floor(this.x),Math.floor(this.y))}},oU=class{static isRect(e){return!!e&&[e.x,e.y,e.width,e.height].every(aU)}static assertIsValidBox(e,t,n=!1){if(!oU.isRect(e))throw new Error(`${t} - invalid box: ${JSON.stringify(e)}, expected object with properties x, y, width, height`);if(!n&&(e.width<0||e.height<0))throw new Error(`${t} - width (${e.width}) and height (${e.height}) must be positive numbers`)}constructor(e,t=!0){const n=e||{},r=[n.left,n.top,n.right,n.bottom].every(aU),a=[n.x,n.y,n.width,n.height].every(aU);if(!a&&!r)throw new Error(`Box.constructor - expected box to be IBoundingBox | IRect, instead have ${JSON.stringify(n)}`);const[s,i,o,u]=a?[n.x,n.y,n.width,n.height]:[n.left,n.top,n.right-n.left,n.bottom-n.top];oU.assertIsValidBox({x:s,y:i,width:o,height:u},"Box.constructor",t),this._x=s,this._y=i,this._width=o,this._height=u}get x(){return this._x}get y(){return this._y}get width(){return this._width}get height(){return this._height}get left(){return this.x}get top(){return this.y}get right(){return this.x+this.width}get bottom(){return this.y+this.height}get area(){return this.width*this.height}get topLeft(){return new iU(this.left,this.top)}get topRight(){return new iU(this.right,this.top)}get bottomLeft(){return new iU(this.left,this.bottom)}get bottomRight(){return new iU(this.right,this.bottom)}round(){const[e,t,n,r]=[this.x,this.y,this.width,this.height].map((e=>Math.round(e)));return new oU({x:e,y:t,width:n,height:r})}floor(){const[e,t,n,r]=[this.x,this.y,this.width,this.height].map((e=>Math.floor(e)));return new oU({x:e,y:t,width:n,height:r})}toSquare(){let{x:e,y:t,width:n,height:r}=this;const a=Math.abs(n-r);return n<r&&(e-=a/2,n+=a),r<n&&(t-=a/2,r+=a),new oU({x:e,y:t,width:n,height:r})}rescale(e){const t=eU(e)?e.width:e,n=eU(e)?e.height:e;return new oU({x:this.x*t,y:this.y*n,width:this.width*t,height:this.height*n})}pad(e,t){const[n,r,a,s]=[this.x-e/2,this.y-t/2,this.width+e,this.height+t];return new oU({x:n,y:r,width:a,height:s})}clipAtImageBorders(e,t){const{x:n,y:r,right:a,bottom:s}=this,i=Math.max(n,0),o=Math.max(r,0),u=a-i,l=s-o,c=Math.min(u,e-i),h=Math.min(l,t-o);return new oU({x:i,y:o,width:c,height:h}).floor()}shift(e,t){const{width:n,height:r}=this,a=this.x+e,s=this.y+t;return new oU({x:a,y:s,width:n,height:r})}padAtBorders(e,t){const n=this.width+1,r=this.height+1;let a=n,s=r,i=this.left,o=this.top,u=this.right,l=this.bottom;return u>t&&(a=-u+t+n,u=t),l>e&&(s=-l+e+r,l=e),i<1&&(s=2-i,i=1),o<1&&(s=2-o,o=1),{dy:1,edy:s,dx:1,edx:a,y:o,ey:l,x:i,ex:u,w:n,h:r}}calibrate(e){return new oU({left:this.left+e.left*this.width,top:this.top+e.top*this.height,right:this.right+e.right*this.width,bottom:this.bottom+e.bottom*this.height}).toSquare().round()}},uU=class extends oU{constructor(e,t,n,r,a=!1){super({left:e,top:t,right:n,bottom:r},a)}},lU=class{constructor(e,t,n,r,a){this._imageDims=new HV(a.width,a.height),this._score=e,this._classScore=t,this._className=n,this._box=new oU(r).rescale(this._imageDims)}get score(){return this._score}get classScore(){return this._classScore}get className(){return this._className}get box(){return this._box}get imageDims(){return this._imageDims}get imageWidth(){return this.imageDims.width}get imageHeight(){return this.imageDims.height}get relativeBox(){return new oU(this._box).rescale(this.imageDims.reverse())}forSize(e,t){return new lU(this.score,this.classScore,this.className,this.relativeBox,{width:e,height:t})}},cU=class extends lU{constructor(e,t,n){super(e,e,"",t,n)}forSize(e,t){const{score:n,relativeBox:r,imageDims:a}=super.forSize(e,t);return new cU(n,r,a)}};function hU(e,t,n=!0){const r=Math.max(0,Math.min(e.right,t.right)-Math.max(e.left,t.left))*Math.max(0,Math.min(e.bottom,t.bottom)-Math.max(e.top,t.top));return n?r/(e.area+t.area-r):r/Math.min(e.area,t.area)}function dU(e){const t=e.map((e=>e.x)),n=e.map((e=>e.y)),r=t.reduce(((e,t)=>t<e?t:e),1/0),a=n.reduce(((e,t)=>t<e?t:e),1/0),s=t.reduce(((e,t)=>e<t?t:e),0),i=n.reduce(((e,t)=>e<t?t:e),0);return new uU(r,a,s,i)}function pU(e,t,n,r=!0){let a=t.map(((e,t)=>({score:e,boxIndex:t}))).sort(((e,t)=>e.score-t.score)).map((e=>e.boxIndex));const s=[];for(;a.length>0;){const t=a.pop();s.push(t);const i=a,o=[];for(let n=0;n<i.length;n++){const a=i[n],s=e[t],u=e[a];o.push(hU(s,u,r))}a=a.filter(((e,t)=>o[t]<=n))}return s}function fU(e,t){return jo((()=>{const[n,r,a]=t,s=Rl([...e.shape.slice(0,3),1],n,"float32"),i=Rl([...e.shape.slice(0,3),1],r,"float32"),o=Rl([...e.shape.slice(0,3),1],a,"float32"),u=zu([s,i,o],3);return ic(e,u)}))}function mU(e,t=!1){return jo((()=>{const[n,r]=e.shape.slice(1);if(n===r)return e;const a=Math.abs(n-r),s=Math.round(a*(t?.5:1)),i=n>r?2:1,o=t=>{const n=e.shape.slice();return n[i]=t,Rl(n,0,"float32")},u=o(s),l=a-u.shape[i],c=[t&&l?o(l):null,e,u].filter((e=>!!e)).map((e=>wi(e,"float32")));return zu(c,i)}))}function gU(e){const t=e.slice();for(let e=t.length-1;e>0;e--){const n=Math.floor(Math.random()*(e+1)),r=t[e];t[e]=t[n],t[n]=r}return t}function yU(e){return 1/(1+Math.exp(-e))}function bU(e){return Math.log(e/(1-e))}var xU,wU=class extends oU{constructor(e,t,n,r,a=!1){super({x:e,y:t,width:n,height:r},a)}},vU=class{constructor(e,t,n=new iU(0,0)){const{width:r,height:a}=t;this._imgDims=new HV(r,a),this._shift=n,this._positions=e.map((e=>e.mul(new iU(r,a)).add(n)))}get shift(){return new iU(this._shift.x,this._shift.y)}get imageWidth(){return this._imgDims.width}get imageHeight(){return this._imgDims.height}get positions(){return this._positions}get relativePositions(){return this._positions.map((e=>e.sub(this._shift).div(new iU(this.imageWidth,this.imageHeight))))}forSize(e,t){return new this.constructor(this.relativePositions,{width:e,height:t})}shiftBy(e,t){return new this.constructor(this.relativePositions,this._imgDims,new iU(e,t))}shiftByPoint(e){return this.shiftBy(e.x,e.y)}align(e,t={}){if(e){const n=e instanceof cU?e.box.floor():new oU(e);return this.shiftBy(n.x,n.y).align(null,t)}const{useDlibAlignment:n,minBoxPadding:r}={useDlibAlignment:!1,minBoxPadding:.2,...t};return n?this.alignDlib():this.alignMinBbox(r)}alignDlib(){const e=this.getRefPointsForAlignment(),[t,n,r]=e,a=e=>r.sub(e).magnitude(),s=(a(t)+a(n))/2,i=Math.floor(s/.45),o=nU(e),u=Math.floor(Math.max(0,o.x-.5*i)),l=Math.floor(Math.max(0,o.y-.43*i));return new wU(u,l,Math.min(i,this.imageWidth+u),Math.min(i,this.imageHeight+l))}alignMinBbox(e){const t=dU(this.positions);return t.pad(t.width*e,t.height*e)}getRefPointsForAlignment(){throw new Error("getRefPointsForAlignment not implemented by base class")}},kU=class extends vU{getRefPointsForAlignment(){const e=this.positions;return[e[0],e[1],nU([e[3],e[4]])]}},IU=class extends vU{getJawOutline(){return this.positions.slice(0,17)}getLeftEyeBrow(){return this.positions.slice(17,22)}getRightEyeBrow(){return this.positions.slice(22,27)}getNose(){return this.positions.slice(27,36)}getLeftEye(){return this.positions.slice(36,42)}getRightEye(){return this.positions.slice(42,48)}getMouth(){return this.positions.slice(48,68)}getRefPointsForAlignment(){return[this.getLeftEye(),this.getRightEye(),this.getMouth()].map(nU)}},SU=class{constructor(e,t){this._label=e,this._distance=t}get label(){return this._label}get distance(){return this._distance}toString(e=!0){return`${this.label}${e?` (${QV(this.distance)})`:""}`}},NU=class extends oU{static assertIsValidLabeledBox(e,t){if(oU.assertIsValidBox(e,t),!aU(e.label))throw new Error(`${t} - expected property label (${e.label}) to be a number`)}constructor(e,t){super(e),this._label=t}get label(){return this._label}},TU=class{constructor(e,t){if("string"!=typeof e)throw new Error("LabeledFaceDescriptors - constructor expected label to be a string");if(!Array.isArray(t)||t.some((e=>!(e instanceof Float32Array))))throw new Error("LabeledFaceDescriptors - constructor expected descriptors to be an array of Float32Array");this._label=e,this._descriptors=t}get label(){return this._label}get descriptors(){return this._descriptors}toJSON(){return{label:this.label,descriptors:this.descriptors.map((e=>Array.from(e)))}}static fromJSON(e){const t=e.descriptors.map((e=>new Float32Array(e)));return new TU(e.label,t)}},CU=class extends NU{static assertIsValidPredictedBox(e,t){if(NU.assertIsValidLabeledBox(e,t),!sU(e.score)||!sU(e.classScore))throw new Error(`${t} - expected properties score (${e.score}) and (${e.classScore}) to be a number between [0, 1]`)}constructor(e,t,n,r){super(e,t),this._score=n,this._classScore=r}get score(){return this._score}get classScore(){return this._classScore}};function $U(e){return e.detection instanceof cU}function _U(e,t){return{...e,detection:t}}function EU(){const e=window.fetch;if(!e)throw new Error("fetch - missing fetch implementation for browser environment");return{Canvas:HTMLCanvasElement,CanvasRenderingContext2D,Image:HTMLImageElement,ImageData,Video:HTMLVideoElement,createCanvasElement:()=>document.createElement("canvas"),createImageElement:()=>document.createElement("img"),createVideoElement:()=>document.createElement("video"),fetch:e,readFile:()=>{throw new Error("readFile - filesystem not available for browser environment")}}}function AU(e){let t="";if(!e)try{e=s("fs")}catch(e){t=e.toString()}return{readFile:e?t=>new Promise(((n,r)=>{e.readFile(t,((e,t)=>e?r(e):n(t)))})):()=>{throw new Error(`readFile - failed to require fs in nodejs environment with error: ${t}`)}}}function FU(){const e=n.g.Canvas||n.g.HTMLCanvasElement,t=n.g.Image||n.g.HTMLImageElement,r=n.g.Video||n.g.HTMLVideoElement,a=n.g.fetch,s=AU();return{Canvas:e||class{},CanvasRenderingContext2D:n.g.CanvasRenderingContext2D||class{},Image:t||class{},ImageData:n.g.ImageData||class{},Video:n.g.HTMLVideoElement||class{},createCanvasElement:()=>{if(e)return new e;throw new Error("createCanvasElement - missing Canvas implementation for nodejs environment")},createImageElement:()=>{if(t)return new t;throw new Error("createImageElement - missing Image implementation for nodejs environment")},createVideoElement:()=>{if(r)return new r;throw new Error("createVideoElement - missing Video implementation for nodejs environment")},fetch:a,...s}}function RU(){return"object"==typeof window&&"undefined"!=typeof document&&"undefined"!=typeof HTMLImageElement&&"undefined"!=typeof HTMLCanvasElement&&"undefined"!=typeof HTMLVideoElement&&"undefined"!=typeof ImageData&&"undefined"!=typeof CanvasRenderingContext2D}function DU(){return"object"==typeof n.g&&"undefined"!=typeof process&&!!process.version}function MU(e){xU=e}function OU(){return RU()?MU(EU()):DU()?MU(FU()):null}var LU,zU,PU={getEnv:function(){if(!xU)throw new Error("getEnv - environment is not defined, check isNodejs() and isBrowser()");return xU},setEnv:MU,initialize:OU,createBrowserEnv:EU,createFileSystem:AU,createNodejsEnv:FU,monkeyPatch:function(e){if(xU||OU(),!xU)throw new Error("monkeyPatch - environment is not defined, check isNodejs() and isBrowser()");const{Canvas:t=xU.Canvas,Image:n=xU.Image}=e;xU.Canvas=t,xU.Image=n,xU.createCanvasElement=e.createCanvasElement||(()=>new t),xU.createImageElement=e.createImageElement||(()=>new n),xU.ImageData=e.ImageData||xU.ImageData,xU.Video=e.Video||xU.Video,xU.fetch=e.fetch||xU.fetch,xU.readFile=e.readFile||xU.readFile},isBrowser:RU,isNodejs:DU};function BU(e){return PU.isNodejs()||"string"!=typeof e?e:document.getElementById(e)}function WU(e){const{Canvas:t,CanvasRenderingContext2D:n}=PU.getEnv();if(e instanceof n)return e;const r=BU(e);if(!(r instanceof t))throw new Error("resolveContext2d - expected canvas to be of instance of Canvas");const a=r.getContext("2d");if(!a)throw new Error("resolveContext2d - canvas 2d context is null");return a}OU(),(zU=LU||(LU={})).TOP_LEFT="TOP_LEFT",zU.TOP_RIGHT="TOP_RIGHT",zU.BOTTOM_LEFT="BOTTOM_LEFT",zU.BOTTOM_RIGHT="BOTTOM_RIGHT";var VU=class{constructor(e={}){const{anchorPosition:t,backgroundColor:n,fontColor:r,fontSize:a,fontStyle:s,padding:i}=e;this.anchorPosition=t||LU.TOP_LEFT,this.backgroundColor=n||"rgba(0, 0, 0, 0.5)",this.fontColor=r||"rgba(255, 255, 255, 1)",this.fontSize=a||14,this.fontStyle=s||"Georgia",this.padding=i||4}},UU=class{constructor(e,t,n={}){this.text="string"==typeof e?[e]:e instanceof UU?e.text:e,this.anchor=t,this.options=new VU(n)}measureWidth(e){const{padding:t}=this.options;return this.text.map((t=>e.measureText(t).width)).reduce(((e,t)=>e<t?t:e),0)+2*t}measureHeight(){const{fontSize:e,padding:t}=this.options;return this.text.length*e+2*t}getUpperLeft(e,t){const{anchorPosition:n}=this.options,r=n===LU.BOTTOM_RIGHT||n===LU.TOP_RIGHT,a=n===LU.BOTTOM_LEFT||n===LU.BOTTOM_RIGHT,s=this.measureWidth(e),i=this.measureHeight(),o=r?this.anchor.x-s:this.anchor.x,u=a?this.anchor.y-i:this.anchor.y;if(t){const{width:e,height:n}=t;return{x:Math.max(Math.min(o,e-s),0),y:Math.max(Math.min(u,n-i),0)}}return{x:o,y:u}}draw(e){const t=BU(e),n=WU(t),{backgroundColor:r,fontColor:a,fontSize:s,fontStyle:i,padding:o}=this.options;n.font=`${s}px ${i}`;const u=this.measureWidth(n),l=this.measureHeight();n.fillStyle=r;const c=this.getUpperLeft(n,t);n.fillRect(c.x,c.y,u,l),n.fillStyle=a,this.text.forEach(((e,t)=>{const r=o+c.x,a=o+c.y+(t+1)*s;n.fillText(e,r,a)}))}},GU=class{constructor(e={}){const{boxColor:t,lineWidth:n,label:r,drawLabelOptions:a}=e;this.boxColor=t||"rgba(0, 0, 255, 1)",this.lineWidth=n||2,this.label=r;const s={anchorPosition:LU.BOTTOM_LEFT,backgroundColor:this.boxColor};this.drawLabelOptions=new VU({...s,...a})}},HU=class{constructor(e,t={}){this.box=new oU(e),this.options=new GU(t)}draw(e){const t=WU(e),{boxColor:n,lineWidth:r}=this.options,{x:a,y:s,width:i,height:o}=this.box;t.strokeStyle=n,t.lineWidth=r,t.strokeRect(a,s,i,o);const{label:u}=this.options;u&&new UU([u],{x:a-r/2,y:s},this.options.drawLabelOptions).draw(e)}};function jU(e,t){(Array.isArray(t)?t:[t]).forEach((t=>{const n=t instanceof cU?t.score:$U(t)?t.detection.score:void 0,r=t instanceof cU?t.box:$U(t)?t.detection.box:new oU(t),a=n?`${QV(n)}`:void 0;new HU(r,{label:a}).draw(e)}))}function qU(e){const{Image:t,Video:n}=PU.getEnv();return e instanceof t&&e.complete||e instanceof n&&e.readyState>=3}function KU(e){return new Promise(((t,n)=>{if(e instanceof PU.getEnv().Canvas||qU(e))return t(null);function r(e){e.currentTarget&&(e.currentTarget.removeEventListener("load",a),e.currentTarget.removeEventListener("error",r),n(e))}function a(e){e.currentTarget&&(e.currentTarget.removeEventListener("load",a),e.currentTarget.removeEventListener("error",r),t(e))}e.addEventListener("load",a),e.addEventListener("error",r)}))}function XU(e){return new Promise(((t,n)=>{e instanceof Blob||n(new Error("bufferToImage - expected buf to be of type: Blob"));const r=new FileReader;r.onload=()=>{"string"!=typeof r.result&&n(new Error("bufferToImage - expected reader.result to be a string, in onload"));const e=PU.getEnv().createImageElement();e.onload=()=>t(e),e.onerror=n,e.src=r.result},r.onerror=n,r.readAsDataURL(e)}))}function YU(e){const{Image:t,Video:n}=PU.getEnv();return e instanceof t?new HV(e.naturalWidth,e.naturalHeight):e instanceof n?new HV(e.videoWidth,e.videoHeight):new HV(e.width,e.height)}function ZU({width:e,height:t}){const{createCanvasElement:n}=PU.getEnv(),r=n();return r.width=e,r.height=t,r}function JU(e,t){const{ImageData:n}=PU.getEnv();if(!(e instanceof n||qU(e)))throw new Error("createCanvasFromMedia - media has not finished loading yet");const{width:r,height:a}=t||YU(e),s=ZU({width:r,height:a});return e instanceof n?WU(s).putImageData(e,0,0):WU(s).drawImage(e,0,0,r,a),s}async function QU(e,t){const n=t||PU.getEnv().createCanvasElement(),[r,a,s]=e.shape.slice(YV(e)?1:0),i=jo((()=>e.as3D(r,a,s).toInt()));return await Hi.toPixels(i,n),i.dispose(),n}function eG(e){const{Image:t,Canvas:n,Video:r}=PU.getEnv();return e instanceof t||e instanceof n||e instanceof r}function tG(e,t,n=!1){const{Image:r,Canvas:a}=PU.getEnv();if(!(e instanceof r||e instanceof a))throw new Error("imageToSquare - expected arg0 to be HTMLImageElement | HTMLCanvasElement");if(t<=0)return ZU({width:1,height:1});const s=YU(e),i=t/Math.max(s.height,s.width),o=i*s.width,u=i*s.height,l=ZU({width:t,height:t}),c=e instanceof a?e:JU(e),h=Math.abs(o-u)/2,d=n&&o<u?h:0,p=n&&u<o?h:0;return c.width>0&&c.height>0&&WU(l).drawImage(c,d,p,o,u),l}var nG=class{constructor(e,t=!1){if(this._imageTensors=[],this._canvases=[],this._treatAsBatchInput=!1,this._inputDimensions=[],!Array.isArray(e))throw new Error(`NetInput.constructor - expected inputs to be an Array of TResolvedNetInput or to be instanceof tf.Tensor4D, instead have ${e}`);this._treatAsBatchInput=t,this._batchSize=e.length,e.forEach(((e,t)=>{if(XV(e))return this._imageTensors[t]=e,void(this._inputDimensions[t]=e.shape);if(YV(e)){const n=e.shape[0];if(1!==n)throw new Error(`NetInput - tf.Tensor4D with batchSize ${n} passed, but not supported in input array`);return this._imageTensors[t]=e,void(this._inputDimensions[t]=e.shape.slice(1))}const n=e instanceof PU.getEnv().Canvas?e:JU(e);this._canvases[t]=n,this._inputDimensions[t]=[n.height,n.width,3]}))}get imageTensors(){return this._imageTensors}get canvases(){return this._canvases}get isBatchInput(){return this.batchSize>1||this._treatAsBatchInput}get batchSize(){return this._batchSize}get inputDimensions(){return this._inputDimensions}get inputSize(){return this._inputSize}get reshapedInputDimensions(){return rU(this.batchSize,0,1).map(((e,t)=>this.getReshapedInputDimensions(t)))}getInput(e){return this.canvases[e]||this.imageTensors[e]}getInputDimensions(e){return this._inputDimensions[e]}getInputHeight(e){return this._inputDimensions[e][0]}getInputWidth(e){return this._inputDimensions[e][1]}getReshapedInputDimensions(e){if("number"!=typeof this.inputSize)throw new Error("getReshapedInputDimensions - inputSize not set, toBatchTensor has not been called yet");return tU({width:this.getInputWidth(e),height:this.getInputHeight(e)},this.inputSize)}toBatchTensor(e,t=!0){return this._inputSize=e,jo((()=>{const n=rU(this.batchSize,0,1).map((n=>{const r=this.getInput(n);if(r instanceof Ba){let n=YV(r)?r:_l(r);return n=mU(n,t),n.shape[1]===e&&n.shape[2]===e||(n=fp.resizeBilinear(n,[e,e],!1,!1)),n.as3D(e,e,3)}if(r instanceof PU.getEnv().Canvas)return Hi.fromPixels(tG(r,e,t));throw new Error(`toBatchTensor - at batchIdx ${n}, expected input to be instanceof tf.Tensor or instanceof HTMLCanvasElement, instead have ${r}`)}));return Mh(n.map((e=>wi(e,"float32")))).as4D(this.batchSize,e,e,3)}))}};async function rG(e){if(e instanceof nG)return e;const t=Array.isArray(e)?e:[e];if(!t.length)throw new Error("toNetInput - empty array passed as input");const n=t=>Array.isArray(e)?` at input index ${t}:`:"",r=t.map(BU);return r.forEach(((e,r)=>{if(!eG(e)&&!XV(e)&&!YV(e)){if("string"==typeof t[r])throw new Error(`toNetInput -${n(r)} string passed, but could not resolve HTMLElement for element id ${t[r]}`);throw new Error(`toNetInput -${n(r)} expected media to be of type HTMLImageElement | HTMLVideoElement | HTMLCanvasElement | tf.Tensor3D, or to be an element id`)}if(YV(e)){const t=e.shape[0];if(1!==t)throw new Error(`toNetInput -${n(r)} tf.Tensor4D with batchSize ${t} passed, but not supported in input array`)}})),await Promise.all(r.map((e=>eG(e)&&KU(e)))),new nG(r,Array.isArray(e))}async function aG(e,t){const{Canvas:n}=PU.getEnv();let r=e;if(!(e instanceof n)){const t=await rG(e);if(t.batchSize>1)throw new Error("extractFaces - batchSize > 1 not supported");const a=t.getInput(0);r=a instanceof n?a:await QU(a)}const a=WU(r);return t.map((e=>e instanceof cU?e.forSize(r.width,r.height).box.floor():e)).map((e=>e.clipAtImageBorders(r.width,r.height))).map((({x:e,y:t,width:n,height:r})=>{const s=ZU({width:n,height:r});return n>0&&r>0&&WU(s).putImageData(a.getImageData(e,t,n,r),0,0),s}))}async function sG(e,t){if(!XV(e)&&!YV(e))throw new Error("extractFaceTensors - expected image tensor to be 3D or 4D");if(YV(e)&&e.shape[0]>1)throw new Error("extractFaceTensors - batchSize > 1 not supported");return jo((()=>{const[n,r,a]=e.shape.slice(YV(e)?1:0);return t.map((e=>e instanceof cU?e.forSize(r,n).box:e)).map((e=>e.clipAtImageBorders(r,n))).map((({x:t,y:s,width:i,height:o})=>Sh(e.as3D(n,r,a),[s,t,0],[o,i,a])))}))}async function iG(e,t){const{fetch:n}=PU.getEnv(),r=await n(e,t);if(!(r.status<400))throw new Error(`failed to fetch: (${r.status}) ${r.statusText}, from url: ${r.url}`);return r}async function oG(e){const t=await iG(e),n=await t.blob();if(!n.type.startsWith("image/"))throw new Error(`fetchImage - expected blob type to be of type image/*, instead have: ${n.type}, for url: ${t.url}`);return XU(n)}async function uG(e){return(await iG(e)).json()}async function lG(e){return new Float32Array(await(await iG(e)).arrayBuffer())}async function cG(e){const t=await iG(e),n=await t.blob();if(!n.type.startsWith("video/"))throw new Error(`fetchVideo - expected blob type to be of type video/*, instead have: ${n.type}, for url: ${t.url}`);return r=n,new Promise(((e,t)=>{r instanceof Blob||t(new Error("bufferToVideo - expected buf to be of type: Blob"));const n=PU.getEnv().createVideoElement();n.oncanplay=()=>e(n),n.onerror=t,n.playsInline=!0,n.muted=!0,n.src=URL.createObjectURL(r),n.play()}));var r}function hG(e,t){const n=`${t}-weights_manifest.json`;if(!e)return{modelBaseUri:"",manifestUri:n};if("/"===e)return{modelBaseUri:"/",manifestUri:`/${n}`};const r=e.startsWith("http://")?"http://":e.startsWith("https://")?"https://":"",a=(e=e.replace(r,"")).split("/").filter((e=>e)),s=e.endsWith(".json")?a[a.length-1]:n;let i=r+(e.endsWith(".json")?a.slice(0,a.length-1):a).join("/");return i=e.startsWith("/")?`/${i}`:i,{modelBaseUri:i,manifestUri:"/"===i?`/${s}`:`${i}/${s}`}}async function dG(e,t){const{manifestUri:n,modelBaseUri:r}=hG(e,t),a=await uG(n);return Ii.loadWeights(a,r)}function pG(e,t,n=!1){const{width:r,height:a}=n?YU(t):t;return e.width=r,e.height=a,{width:r,height:a}}var fG=class{constructor(e){this._params=void 0,this._paramMappings=[],this._name=e}get params(){return this._params}get paramMappings(){return this._paramMappings}get isLoaded(){return!!this.params}getParamFromPath(e){const{obj:t,objProp:n}=this.traversePropertyPath(e);return t[n]}reassignParamFromPath(e,t){const{obj:n,objProp:r}=this.traversePropertyPath(e);n[r].dispose(),n[r]=t}getParamList(){return this._paramMappings.map((({paramPath:e})=>({path:e,tensor:this.getParamFromPath(e)})))}getTrainableParams(){return this.getParamList().filter((e=>e.tensor instanceof Va))}getFrozenParams(){return this.getParamList().filter((e=>!(e.tensor instanceof Va)))}variable(){this.getFrozenParams().forEach((({path:e,tensor:t})=>{this.reassignParamFromPath(e,t.variable())}))}freeze(){this.getTrainableParams().forEach((({path:e,tensor:t})=>{const n=Cs(t.dataSync());t.dispose(),this.reassignParamFromPath(e,n)}))}dispose(e=!0){this.getParamList().forEach((t=>{if(e&&t.tensor.isDisposed)throw new Error(`param tensor has already been disposed for path ${t.path}`);t.tensor.dispose()})),this._params=void 0}serializeParams(){return new Float32Array(this.getParamList().map((({tensor:e})=>Array.from(e.dataSync()))).reduce(((e,t)=>e.concat(t))))}async load(e){e instanceof Float32Array?this.extractWeights(e):await this.loadFromUri(e)}async loadFromUri(e){if(e&&"string"!=typeof e)throw new Error(`${this._name}.loadFromUri - expected model uri`);const t=await dG(e,this.getDefaultModelName());this.loadFromWeightMap(t)}async loadFromDisk(e){if(e&&"string"!=typeof e)throw new Error(`${this._name}.loadFromDisk - expected model file path`);const{readFile:t}=PU.getEnv(),{manifestUri:n,modelBaseUri:r}=hG(e,this.getDefaultModelName()),a=Ii.weightsLoaderFactory((e=>Promise.all(e.map((e=>t(e).then((e=>e.buffer))))))),s=JSON.parse((await t(n)).toString()),i=await a(s,r);this.loadFromWeightMap(i)}loadFromWeightMap(e){const{paramMappings:t,params:n}=this.extractParamsFromWeightMap(e);this._paramMappings=t,this._params=n}extractWeights(e){const{paramMappings:t,params:n}=this.extractParams(e);this._paramMappings=t,this._params=n}traversePropertyPath(e){if(!this.params)throw new Error("traversePropertyPath - model has no loaded params");const t=e.split("/").reduce(((t,n)=>{if(!t.nextObj.hasOwnProperty(n))throw new Error(`traversePropertyPath - object does not have property ${n}, for path ${e}`);return{obj:t.nextObj,objProp:n,nextObj:t.nextObj[n]}}),{nextObj:this.params}),{obj:n,objProp:r}=t;if(!(n&&r&&n[r]instanceof Ba))throw new Error(`traversePropertyPath - parameter is not a tensor, for path ${e}`);return{obj:n,objProp:r}}};function mG(e,t,n){return jo((()=>{let r=yh(e,t.depthwise_filter,t.pointwise_filter,n,"same");return r=su(r,t.bias),r}))}function gG(e,t,n=!1){return jo((()=>{const r=ih(n?su(nl(e,t.conv0.filters,[2,2],"same"),t.conv0.bias):mG(e,t.conv0,[2,2])),a=mG(r,t.conv1,[1,1]),s=mG(ih(su(r,a)),t.conv2,[1,1]);return ih(su(r,su(a,s)))}))}function yG(e,t,n=!1,r=!0){return jo((()=>{const a=ih(n?su(nl(e,t.conv0.filters,r?[2,2]:[1,1],"same"),t.conv0.bias):mG(e,t.conv0,r?[2,2]:[1,1])),s=mG(a,t.conv1,[1,1]),i=mG(ih(su(a,s)),t.conv2,[1,1]),o=mG(ih(su(a,su(s,i))),t.conv3,[1,1]);return ih(su(a,su(s,su(i,o))))}))}function bG(e,t,n="same",r=!1){return jo((()=>{const a=su(nl(e,t.filters,[1,1],n),t.bias);return r?ih(a):a}))}function xG(e,t){Object.keys(e).forEach((n=>{t.some((e=>e.originalPath===n))||e[n].dispose()}))}function wG(e,t){return(n,r,a,s)=>{const i=Wh(e(n*r*a*a),[a,a,n,r]),o=Ph(e(r));return t.push({paramPath:`${s}/filters`},{paramPath:`${s}/bias`}),{filters:i,bias:o}}}function vG(e,t){return(n,r,a)=>{const s=Bh(e(n*r),[n,r]),i=Ph(e(r));return t.push({paramPath:`${a}/weights`},{paramPath:`${a}/bias`}),{weights:s,bias:i}}}var kG=class{constructor(e,t,n){this.depthwise_filter=e,this.pointwise_filter=t,this.bias=n}};function IG(e,t){return(n,r,a)=>{const s=Wh(e(9*n),[3,3,n,1]),i=Wh(e(n*r),[1,1,n,r]),o=Ph(e(r));return t.push({paramPath:`${a}/depthwise_filter`},{paramPath:`${a}/pointwise_filter`},{paramPath:`${a}/bias`}),new kG(s,i,o)}}function SG(e){return t=>{const n=e(`${t}/depthwise_filter`,4),r=e(`${t}/pointwise_filter`,4),a=e(`${t}/bias`,1);return new kG(n,r,a)}}function NG(e,t){return(n,r,a)=>{const s=e[n];if(!jV(s,r))throw new Error(`expected weightMap[${n}] to be a Tensor${r}D, instead have ${s}`);return t.push({originalPath:n,paramPath:a||n}),s}}function TG(e){let t=e;return{extractWeights:function(e){const n=t.slice(0,e);return t=t.slice(e),n},getRemainingWeights:function(){return t}}}function CG(e,t){const n=wG(e,t),r=IG(e,t);function a(e,t,a,s=!1){return{conv0:s?n(e,t,3,`${a}/conv0`):r(e,t,`${a}/conv0`),conv1:r(t,t,`${a}/conv1`),conv2:r(t,t,`${a}/conv2`)}}return{extractDenseBlock3Params:a,extractDenseBlock4Params:function(e,t,n,s=!1){const{conv0:i,conv1:o,conv2:u}=a(e,t,n,s);return{conv0:i,conv1:o,conv2:u,conv3:r(t,t,`${n}/conv3`)}}}}function $G(e){return t=>({filters:e(`${t}/filters`,4),bias:e(`${t}/bias`,1)})}function _G(e,t){const n=NG(e,t),r=$G(n),a=SG(n);return{extractDenseBlock3Params:function(e,t=!1){return{conv0:t?r(`${e}/conv0`):a(`${e}/conv0`),conv1:a(`${e}/conv1`),conv2:a(`${e}/conv2`)}},extractDenseBlock4Params:function(e,t=!1){return{conv0:t?r(`${e}/conv0`):a(`${e}/conv0`),conv1:a(`${e}/conv1`),conv2:a(`${e}/conv2`),conv3:a(`${e}/conv3`)}}}}var EG=class extends fG{constructor(){super("FaceFeatureExtractor")}forwardInput(e){const{params:t}=this;if(!t)throw new Error("FaceFeatureExtractor - load model before inference");return jo((()=>{let n=yG(fU(wi(e.toBatchTensor(112,!0),"float32"),[122.782,117.001,104.298]).div(255),t.dense0,!0);return n=yG(n,t.dense1),n=yG(n,t.dense2),n=yG(n,t.dense3),n=Ou(n,[7,7],[2,2],"valid"),n}))}async forward(e){return this.forwardInput(await rG(e))}getDefaultModelName(){return"face_feature_extractor_model"}extractParamsFromWeightMap(e){return function(e){const t=[],{extractDenseBlock4Params:n}=_G(e,t),r={dense0:n("dense0",!0),dense1:n("dense1"),dense2:n("dense2"),dense3:n("dense3")};return xG(e,t),{params:r,paramMappings:t}}(e)}extractParams(e){return function(e){const t=[],{extractWeights:n,getRemainingWeights:r}=TG(e),{extractDenseBlock4Params:a}=CG(n,t),s=a(3,32,"dense0",!0),i=a(32,64,"dense1"),o=a(64,128,"dense2"),u=a(128,256,"dense3");if(0!==r().length)throw new Error(`weights remaing after extract: ${r().length}`);return{paramMappings:t,params:{dense0:s,dense1:i,dense2:o,dense3:u}}}(e)}};function AG(e,t){return jo((()=>su(Wi(e,t.weights),t.bias)))}function FG(e){const t={},n={};return Object.keys(e).forEach((r=>{(r.startsWith("fc")?n:t)[r]=e[r]})),{featureExtractorMap:t,classifierMap:n}}var RG=class extends fG{constructor(e,t){super(e),this._faceFeatureExtractor=t}get faceFeatureExtractor(){return this._faceFeatureExtractor}runNet(e){const{params:t}=this;if(!t)throw new Error(`${this._name} - load model before inference`);return jo((()=>{const n=e instanceof nG?this.faceFeatureExtractor.forwardInput(e):e;return AG(n.as2D(n.shape[0],-1),t.fc)}))}dispose(e=!0){this.faceFeatureExtractor.dispose(e),super.dispose(e)}loadClassifierParams(e){const{params:t,paramMappings:n}=this.extractClassifierParams(e);this._params=t,this._paramMappings=n}extractClassifierParams(e){return function(e,t,n){const r=[],{extractWeights:a,getRemainingWeights:s}=TG(e),i=vG(a,r)(t,n,"fc");if(0!==s().length)throw new Error(`weights remaing after extract: ${s().length}`);return{paramMappings:r,params:{fc:i}}}(e,this.getClassifierChannelsIn(),this.getClassifierChannelsOut())}extractParamsFromWeightMap(e){const{featureExtractorMap:t,classifierMap:n}=FG(e);return this.faceFeatureExtractor.loadFromWeightMap(t),function(e){const t=[],n=NG(e,t),r={fc:("fc",{weights:n("fc/weights",2),bias:n("fc/bias",1)})};return xG(e,t),{params:r,paramMappings:t}}(n)}extractParams(e){const t=this.getClassifierChannelsIn(),n=this.getClassifierChannelsOut(),r=n*t+n,a=e.slice(0,e.length-r),s=e.slice(e.length-r);return this.faceFeatureExtractor.extractWeights(a),this.extractClassifierParams(s)}},DG=["neutral","happy","sad","angry","fearful","disgusted","surprised"],MG=class{constructor(e){if(7!==e.length)throw new Error(`FaceExpressions.constructor - expected probabilities.length to be 7, have: ${e.length}`);DG.forEach(((t,n)=>{this[t]=e[n]}))}asSortedArray(){return DG.map((e=>({expression:e,probability:this[e]}))).sort(((e,t)=>t.probability-e.probability))}},OG=class extends RG{constructor(e=new EG){super("FaceExpressionNet",e)}forwardInput(e){return jo((()=>Th(this.runNet(e))))}async forward(e){return this.forwardInput(await rG(e))}async predictExpressions(e){const t=await rG(e),n=await this.forwardInput(t),r=await Promise.all(Kh(n).map((async e=>{const t=e.dataSync();return e.dispose(),t})));n.dispose();const a=r.map((e=>new MG(e)));return t.isBatchInput?a:a[0]}getDefaultModelName(){return"face_expression_model"}getClassifierChannelsIn(){return 256}getClassifierChannelsOut(){return 7}};function LG(e){return e.expressions instanceof MG}function zG(e,t){return{...e,expressions:t}}function PG(e,t,n=.1,r){(Array.isArray(t)?t:[t]).forEach((t=>{const a=t instanceof MG?t:LG(t)?t.expressions:void 0;if(!a)throw new Error("drawFaceExpressions - expected faceExpressions to be FaceExpressions | WithFaceExpressions<{}> or array thereof");const s=a.asSortedArray().filter((e=>e.probability>n)),i=$U(t)?t.detection.box.bottomLeft:r||new iU(0,0);new UU(s.map((e=>`${e.expression} (${QV(e.probability)})`)),i).draw(e)}))}function BG(e){return $U(e)&&e.landmarks instanceof vU&&e.unshiftedLandmarks instanceof vU&&e.alignedRect instanceof cU}function WG(e,t){const{box:n}=e.detection,r=t.shiftBy(n.x,n.y),a=r.align(),{imageDims:s}=e.detection,i={landmarks:r,unshiftedLandmarks:t,alignedRect:new cU(e.detection.score,a.rescale(s.reverse()),s),angle:function(e){const t=(e,t,n,r)=>Math.atan2(r-t,n-e)%Math.PI,n={roll:void 0,pitch:void 0,yaw:void 0};if(!e||!e._positions||68!==e._positions.length)return n;const r=e._positions;n.roll=-t(r[36]._x,r[36]._y,r[45]._x,r[45]._y),n.pitch=t(0,Math.abs(r[0]._x-r[30]._x)/r[30]._x,Math.PI,Math.abs(r[16]._x-r[30]._x)/r[30]._x);const a=r.reduce(((e,t)=>e<t._y?e:t._y),1/0),s=r.reduce(((e,t)=>e>t._y?e:t._y),-1/0);return n.yaw=Math.PI*(e._imgDims._height/(s-a)/1.4-1),n}(t)};return{...e,...i}}var VG=class{constructor(e={}){const{drawLines:t=!0,drawPoints:n=!0,lineWidth:r,lineColor:a,pointSize:s,pointColor:i}=e;this.drawLines=t,this.drawPoints=n,this.lineWidth=r||1,this.pointSize=s||2,this.lineColor=a||"rgba(0, 255, 255, 1)",this.pointColor=i||"rgba(255, 0, 255, 1)"}},UG=class{constructor(e,t={}){this.faceLandmarks=e,this.options=new VG(t)}draw(e){const t=WU(e),{drawLines:n,drawPoints:r,lineWidth:a,lineColor:s,pointSize:i,pointColor:o}=this.options;if(n&&this.faceLandmarks instanceof IU&&(t.strokeStyle=s,t.lineWidth=a,UV(t,this.faceLandmarks.getJawOutline()),UV(t,this.faceLandmarks.getLeftEyeBrow()),UV(t,this.faceLandmarks.getRightEyeBrow()),UV(t,this.faceLandmarks.getNose()),UV(t,this.faceLandmarks.getLeftEye(),!0),UV(t,this.faceLandmarks.getRightEye(),!0),UV(t,this.faceLandmarks.getMouth(),!0)),r){t.strokeStyle=o,t.fillStyle=o;const e=e=>{t.beginPath(),t.arc(e.x,e.y,i,0,2*Math.PI),t.fill()};this.faceLandmarks.positions.forEach(e)}}};function GG(e,t){(Array.isArray(t)?t:[t]).forEach((t=>{const n=t instanceof vU?t:BG(t)?t.landmarks:void 0;if(!n)throw new Error("drawFaceLandmarks - expected faceExpressions to be FaceLandmarks | WithFaceLandmarks<WithFaceDetection<{}>> or array thereof");new UG(n).draw(e)}))}function HG(e,t,n){return su(nl(e,t.filters,n,"same"),t.bias)}function jG(e,t,n=!0){let r=n?ih(e):e;return r=mG(r,t.separable_conv0,[1,1]),r=mG(ih(r),t.separable_conv1,[1,1]),r=kc(r,[3,3],[2,2],"same"),r=su(r,HG(e,t.expansion_conv,[2,2])),r}var qG,KG,XG=class extends fG{constructor(e){super("TinyXception"),this._numMainBlocks=e}forwardInput(e){const{params:t}=this;if(!t)throw new Error("TinyXception - load model before inference");return jo((()=>{const n=fU(wi(e.toBatchTensor(112,!0),"float32"),[122.782,117.001,104.298]).div(255);let r=ih(HG(n,t.entry_flow.conv_in,[2,2]));return r=jG(r,t.entry_flow.reduction_block_0,!1),r=jG(r,t.entry_flow.reduction_block_1),rU(this._numMainBlocks,0,1).forEach((e=>{r=function(e,t){let n=mG(ih(e),t.separable_conv0,[1,1]);return n=mG(ih(n),t.separable_conv1,[1,1]),n=mG(ih(n),t.separable_conv2,[1,1]),n=su(n,e),n}(r,t.middle_flow[`main_block_${e}`])})),r=jG(r,t.exit_flow.reduction_block),r=ih(mG(r,t.exit_flow.separable_conv,[1,1])),r}))}async forward(e){return this.forwardInput(await rG(e))}getDefaultModelName(){return"tiny_xception_model"}extractParamsFromWeightMap(e){return function(e,t){const n=[],{extractConvParams:r,extractSeparableConvParams:a,extractReductionBlockParams:s,extractMainBlockParams:i}=function(e,t){const n=NG(e,t),r=$G(n),a=SG(n);return{extractConvParams:r,extractSeparableConvParams:a,extractReductionBlockParams:function(e){return{separable_conv0:a(`${e}/separable_conv0`),separable_conv1:a(`${e}/separable_conv1`),expansion_conv:r(`${e}/expansion_conv`)}},extractMainBlockParams:function(e){return{separable_conv0:a(`${e}/separable_conv0`),separable_conv1:a(`${e}/separable_conv1`),separable_conv2:a(`${e}/separable_conv2`)}}}}(e,n),o={conv_in:r("entry_flow/conv_in"),reduction_block_0:s("entry_flow/reduction_block_0"),reduction_block_1:s("entry_flow/reduction_block_1")},u={};rU(t,0,1).forEach((e=>{u[`main_block_${e}`]=i(`middle_flow/main_block_${e}`)}));const l={reduction_block:s("exit_flow/reduction_block"),separable_conv:a("exit_flow/separable_conv")};return xG(e,n),{params:{entry_flow:o,middle_flow:u,exit_flow:l},paramMappings:n}}(e,this._numMainBlocks)}extractParams(e){return function(e,t){const n=[],{extractWeights:r,getRemainingWeights:a}=TG(e),{extractConvParams:s,extractSeparableConvParams:i,extractReductionBlockParams:o,extractMainBlockParams:u}=function(e,t){const n=wG(e,t),r=IG(e,t);return{extractConvParams:n,extractSeparableConvParams:r,extractReductionBlockParams:function(e,t,a){return{separable_conv0:r(e,t,`${a}/separable_conv0`),separable_conv1:r(t,t,`${a}/separable_conv1`),expansion_conv:n(e,t,1,`${a}/expansion_conv`)}},extractMainBlockParams:function(e,t){return{separable_conv0:r(e,e,`${t}/separable_conv0`),separable_conv1:r(e,e,`${t}/separable_conv1`),separable_conv2:r(e,e,`${t}/separable_conv2`)}}}}(r,n),l={conv_in:s(3,32,3,"entry_flow/conv_in"),reduction_block_0:o(32,64,"entry_flow/reduction_block_0"),reduction_block_1:o(64,128,"entry_flow/reduction_block_1")},c={};rU(t,0,1).forEach((e=>{c[`main_block_${e}`]=u(128,`middle_flow/main_block_${e}`)}));const h={reduction_block:o(128,256,"exit_flow/reduction_block"),separable_conv:i(256,512,"exit_flow/separable_conv")};if(0!==a().length)throw new Error(`weights remaing after extract: ${a().length}`);return{paramMappings:n,params:{entry_flow:l,middle_flow:c,exit_flow:h}}}(e,this._numMainBlocks)}};(KG=qG||(qG={})).FEMALE="female",KG.MALE="male";var YG=class extends fG{constructor(e=new XG(2)){super("AgeGenderNet"),this._faceFeatureExtractor=e}get faceFeatureExtractor(){return this._faceFeatureExtractor}runNet(e){const{params:t}=this;if(!t)throw new Error(`${this._name} - load model before inference`);return jo((()=>{const n=e instanceof nG?this.faceFeatureExtractor.forwardInput(e):e,r=Ou(n,[7,7],[2,2],"valid").as2D(n.shape[0],-1);return{age:AG(r,t.fc.age).as1D(),gender:AG(r,t.fc.gender)}}))}forwardInput(e){return jo((()=>{const{age:t,gender:n}=this.runNet(e);return{age:t,gender:Th(n)}}))}async forward(e){return this.forwardInput(await rG(e))}async predictAgeAndGender(e){const t=await rG(e),n=await this.forwardInput(t),r=Kh(n.age),a=Kh(n.gender),s=r.map(((e,t)=>({ageTensor:e,genderTensor:a[t]}))),i=await Promise.all(s.map((async({ageTensor:e,genderTensor:t})=>{const n=e.dataSync()[0],r=t.dataSync()[0],a=r>.5,s=a?qG.MALE:qG.FEMALE,i=a?r:1-r;return e.dispose(),t.dispose(),{age:n,gender:s,genderProbability:i}})));return n.age.dispose(),n.gender.dispose(),t.isBatchInput?i:i[0]}getDefaultModelName(){return"age_gender_model"}dispose(e=!0){this.faceFeatureExtractor.dispose(e),super.dispose(e)}loadClassifierParams(e){const{params:t,paramMappings:n}=this.extractClassifierParams(e);this._params=t,this._paramMappings=n}extractClassifierParams(e){return function(e){const t=[],{extractWeights:n,getRemainingWeights:r}=TG(e),a=vG(n,t),s=a(512,1,"fc/age"),i=a(512,2,"fc/gender");if(0!==r().length)throw new Error(`weights remaing after extract: ${r().length}`);return{paramMappings:t,params:{fc:{age:s,gender:i}}}}(e)}extractParamsFromWeightMap(e){const{featureExtractorMap:t,classifierMap:n}=FG(e);return this.faceFeatureExtractor.loadFromWeightMap(t),function(e){const t=[],n=NG(e,t);function r(e){return{weights:n(`${e}/weights`,2),bias:n(`${e}/bias`,1)}}const a={fc:{age:r("fc/age"),gender:r("fc/gender")}};return xG(e,t),{params:a,paramMappings:t}}(n)}extractParams(e){const t=e.slice(0,e.length-1539),n=e.slice(e.length-1539);return this.faceFeatureExtractor.extractWeights(t),this.extractClassifierParams(n)}},ZG=class extends RG{postProcess(e,t,n){const r=n.map((({width:e,height:n})=>{const r=t/Math.max(n,e);return{width:e*r,height:n*r}})),a=r.length;return jo((()=>{const n=(e,t)=>Mh([Rl([68],e,"float32"),Rl([68],t,"float32")],1).as2D(1,136).as1D(),s=(e,t)=>{const{width:n,height:a}=r[e];return t(n,a)?Math.abs(n-a)/2:0};return e.mul(Rl([a,136],t,"float32")).sub(Mh(Array.from(Array(a),((e,t)=>n((e=>s(e,((e,t)=>e<t)))(t),(e=>s(e,((e,t)=>t<e)))(t)))))).div(Mh(Array.from(Array(a),((e,t)=>n(r[t].width,r[t].height)))))}))}forwardInput(e){return jo((()=>{const t=this.runNet(e);return this.postProcess(t,e.inputSize,e.inputDimensions.map((([e,t])=>({height:e,width:t}))))}))}async forward(e){return this.forwardInput(await rG(e))}async detectLandmarks(e){const t=await rG(e),n=jo((()=>Kh(this.forwardInput(t)))),r=await Promise.all(n.map((async(e,n)=>{const r=Array.from(e.dataSync()),a=r.filter(((e,t)=>JV(t))),s=r.filter(((e,t)=>!JV(t)));return new IU(Array(68).fill(0).map(((e,t)=>new iU(a[t],s[t]))),{height:t.getInputHeight(n),width:t.getInputWidth(n)})})));return n.forEach((e=>e.dispose())),t.isBatchInput?r:r[0]}getClassifierChannelsOut(){return 136}},JG=class extends ZG{constructor(e=new EG){super("FaceLandmark68Net",e)}getDefaultModelName(){return"face_landmark_68_model"}getClassifierChannelsIn(){return 256}},QG=class extends fG{constructor(){super("TinyFaceFeatureExtractor")}forwardInput(e){const{params:t}=this;if(!t)throw new Error("TinyFaceFeatureExtractor - load model before inference");return jo((()=>{let n=gG(fU(wi(e.toBatchTensor(112,!0),"float32"),[122.782,117.001,104.298]).div(255),t.dense0,!0);return n=gG(n,t.dense1),n=gG(n,t.dense2),n=Ou(n,[14,14],[2,2],"valid"),n}))}async forward(e){return this.forwardInput(await rG(e))}getDefaultModelName(){return"face_feature_extractor_tiny_model"}extractParamsFromWeightMap(e){return function(e){const t=[],{extractDenseBlock3Params:n}=_G(e,t),r={dense0:n("dense0",!0),dense1:n("dense1"),dense2:n("dense2")};return xG(e,t),{params:r,paramMappings:t}}(e)}extractParams(e){return function(e){const t=[],{extractWeights:n,getRemainingWeights:r}=TG(e),{extractDenseBlock3Params:a}=CG(n,t),s=a(3,32,"dense0",!0),i=a(32,64,"dense1"),o=a(64,128,"dense2");if(0!==r().length)throw new Error(`weights remaing after extract: ${r().length}`);return{paramMappings:t,params:{dense0:s,dense1:i,dense2:o}}}(e)}},eH=class extends ZG{constructor(e=new QG){super("FaceLandmark68TinyNet",e)}getDefaultModelName(){return"face_landmark_68_tiny_model"}getClassifierChannelsIn(){return 128}},tH=class extends JG{};function nH(e,t,n,r,a="same"){const{filters:s,bias:i}=t.conv;let o=nl(e,s,n,a);return o=su(o,i),o=function(e,t){return su(uu(e,t.weights),t.biases)}(o,t.scale),r?ih(o):o}function rH(e,t){return nH(e,t,[1,1],!1)}function aH(e,t){return nH(e,t,[2,2],!0,"valid")}function sH(e,t){let n=function(e,t){return nH(e,t,[1,1],!0)}(e,t.conv1);return n=rH(n,t.conv2),n=su(n,e),n=ih(n),n}function iH(e,t){let n=aH(e,t.conv1);n=rH(n,t.conv2);let r=Ou(e,2,2,"valid");const a=Cc(r.shape),s=r.shape[3]!==n.shape[3];if(r.shape[1]!==n.shape[1]||r.shape[2]!==n.shape[2]){const e=[...n.shape];e[1]=1;const t=Cc(e);n=zu([n,t],1);const r=[...n.shape];r[2]=1;const a=Cc(r);n=zu([n,a],2)}return r=s?zu([r,a],3):r,n=su(r,n),n=ih(n),n}var oH=class extends fG{constructor(){super("FaceRecognitionNet")}forwardInput(e){const{params:t}=this;if(!t)throw new Error("FaceRecognitionNet - load model before inference");return jo((()=>{let n=aH(fU(wi(e.toBatchTensor(150,!0),"float32"),[122.782,117.001,104.298]).div(255),t.conv32_down);n=kc(n,3,2,"valid"),n=sH(n,t.conv32_1),n=sH(n,t.conv32_2),n=sH(n,t.conv32_3),n=iH(n,t.conv64_down),n=sH(n,t.conv64_1),n=sH(n,t.conv64_2),n=sH(n,t.conv64_3),n=iH(n,t.conv128_down),n=sH(n,t.conv128_1),n=sH(n,t.conv128_2),n=iH(n,t.conv256_down),n=sH(n,t.conv256_1),n=sH(n,t.conv256_2),n=iH(n,t.conv256_down_out);const r=n.mean([1,2]);return Wi(r,t.fc)}))}async forward(e){return this.forwardInput(await rG(e))}async computeFaceDescriptor(e){var t;if(null==(t=null==e?void 0:e.shape)?void 0:t.some((e=>e<=0)))return new Float32Array(128);const n=await rG(e),r=jo((()=>Kh(this.forwardInput(n)))),a=await Promise.all(r.map((e=>e.data())));return r.forEach((e=>e.dispose())),n.isBatchInput?a:a[0]}getDefaultModelName(){return"face_recognition_model"}extractParamsFromWeightMap(e){return function(e){const t=[],{extractConvLayerParams:n,extractResidualLayerParams:r}=function(e,t){const n=NG(e,t);function r(e){return{conv:{filters:n(`${e}/conv/filters`,4),bias:n(`${e}/conv/bias`,1)},scale:function(e){return{weights:n(`${e}/scale/weights`,1),biases:n(`${e}/scale/biases`,1)}}(e)}}return{extractConvLayerParams:r,extractResidualLayerParams:function(e){return{conv1:r(`${e}/conv1`),conv2:r(`${e}/conv2`)}}}}(e,t),a=n("conv32_down"),s=r("conv32_1"),i=r("conv32_2"),o=r("conv32_3"),u=r("conv64_down"),l=r("conv64_1"),c=r("conv64_2"),h=r("conv64_3"),d=r("conv128_down"),p=r("conv128_1"),f=r("conv128_2"),m=r("conv256_down"),g=r("conv256_1"),y=r("conv256_2"),b=r("conv256_down_out"),{fc:x}=e;if(t.push({originalPath:"fc",paramPath:"fc"}),!KV(x))throw new Error(`expected weightMap[fc] to be a Tensor2D, instead have ${x}`);const w={conv32_down:a,conv32_1:s,conv32_2:i,conv32_3:o,conv64_down:u,conv64_1:l,conv64_2:c,conv64_3:h,conv128_down:d,conv128_1:p,conv128_2:f,conv256_down:m,conv256_1:g,conv256_2:y,conv256_down_out:b,fc:x};return xG(e,t),{params:w,paramMappings:t}}(e)}extractParams(e){return function(e){const{extractWeights:t,getRemainingWeights:n}=TG(e),r=[],{extractConvLayerParams:a,extractResidualLayerParams:s}=function(e,t){function n(n,r,a,s){const i=function(t,n,r){const a=e(t),s=a.length/(n*r*r);if(ZV(s))throw new Error(`depth has to be an integer: ${s}, weights.length: ${a.length}, numFilters: ${n}, filterSize: ${r}`);return jo((()=>Ui(Wh(a,[n,s,r,r]),[2,3,1,0])))}(n,r,a),o=Ph(e(r));return t.push({paramPath:`${s}/filters`},{paramPath:`${s}/bias`}),{filters:i,bias:o}}function r(r,a,s,i){return{conv:n(r,a,s,`${i}/conv`),scale:function(n,r){const a=Ph(e(n)),s=Ph(e(n));return t.push({paramPath:`${r}/weights`},{paramPath:`${r}/biases`}),{weights:a,biases:s}}(a,`${i}/scale`)}}return{extractConvLayerParams:r,extractResidualLayerParams:function(e,t,n,a,s=!1){return{conv1:r((s?.5:1)*e,t,n,`${a}/conv1`),conv2:r(e,t,n,`${a}/conv2`)}}}}(t,r),i=a(4704,32,7,"conv32_down"),o=s(9216,32,3,"conv32_1"),u=s(9216,32,3,"conv32_2"),l=s(9216,32,3,"conv32_3"),c=s(36864,64,3,"conv64_down",!0),h=s(36864,64,3,"conv64_1"),d=s(36864,64,3,"conv64_2"),p=s(36864,64,3,"conv64_3"),f=s(147456,128,3,"conv128_down",!0),m=s(147456,128,3,"conv128_1"),g=s(147456,128,3,"conv128_2"),y=s(589824,256,3,"conv256_down",!0),b=s(589824,256,3,"conv256_1"),x=s(589824,256,3,"conv256_2"),w=s(589824,256,3,"conv256_down_out"),v=jo((()=>Ui(Bh(t(32768),[128,256]),[1,0])));if(r.push({paramPath:"fc"}),0!==n().length)throw new Error(`weights remaing after extract: ${n().length}`);return{params:{conv32_down:i,conv32_1:o,conv32_2:u,conv32_3:l,conv64_down:c,conv64_1:h,conv64_2:d,conv64_3:p,conv128_down:f,conv128_1:m,conv128_2:g,conv256_down:y,conv256_1:b,conv256_2:x,conv256_down_out:w,fc:v},paramMappings:r}}(e)}};function uH(e){const t=new oH;return t.extractWeights(e),t}function lH(e,t){return{...e,descriptor:t}}function cH(e){return"number"==typeof e.age}function hH(e,t){return{...e,age:t}}function dH(e){return(e.gender===qG.MALE||e.gender===qG.FEMALE)&&sU(e.genderProbability)}function pH(e,t,n){return{...e,gender:t,genderProbability:n}}function fH(e,t,n){return jo((()=>{let r=nl(e,t.filters,n,"same");return r=su(r,t.batch_norm_offset),Zu(r,0,6)}))}function mH(e,t,n){const r=e.arraySync(),a=Math.min(r[t][0],r[t][2]),s=Math.min(r[t][1],r[t][3]),i=Math.max(r[t][0],r[t][2]),o=Math.max(r[t][1],r[t][3]),u=Math.min(r[n][0],r[n][2]),l=Math.min(r[n][1],r[n][3]),c=Math.max(r[n][0],r[n][2]),h=Math.max(r[n][1],r[n][3]),d=(i-a)*(o-s),p=(c-u)*(h-l);if(d<=0||p<=0)return 0;const f=Math.max(a,u),m=Math.max(s,l),g=Math.min(i,c),y=Math.min(o,h),b=Math.max(g-f,0)*Math.max(y-m,0);return b/(d+p-b)}function gH(e,t){return jo((()=>{const n=e.shape[0];return{boxPredictionEncoding:Mu(bG(e,t.box_encoding_predictor),[n,-1,1,4]),classPrediction:Mu(bG(e,t.class_predictor),[n,-1,3])}}))}var yH=class{constructor({minConfidence:e,maxResults:t}={}){if(this._name="SsdMobilenetv1Options",this._minConfidence=e||.5,this._maxResults=t||100,"number"!=typeof this._minConfidence||this._minConfidence<=0||this._minConfidence>=1)throw new Error(`${this._name} - expected minConfidence to be a number between 0 and 1`);if("number"!=typeof this._maxResults)throw new Error(`${this._name} - expected maxResults to be a number`)}get minConfidence(){return this._minConfidence}get maxResults(){return this._maxResults}},bH=class extends fG{constructor(){super("SsdMobilenetv1")}forwardInput(e){const{params:t}=this;if(!t)throw new Error("SsdMobilenetv1 - load model before inference");return jo((()=>{const n=wi(e.toBatchTensor(512,!1),"float32"),r=function(e,t){return jo((()=>{let n,r=fH(e,t.conv_0,[2,2]);if([t.conv_1,t.conv_2,t.conv_3,t.conv_4,t.conv_5,t.conv_6,t.conv_7,t.conv_8,t.conv_9,t.conv_10,t.conv_11,t.conv_12,t.conv_13].forEach(((e,t)=>{const a=t+1,s=function(e){return[2,4,6,12].some((t=>t===e))?[2,2]:[1,1]}(a);r=function(e,t,n){return jo((()=>{let r=fl(e,t.filters,n,"same");return r=Gu(r,t.batch_norm_mean,t.batch_norm_variance,t.batch_norm_offset,t.batch_norm_scale,.0010000000474974513),Zu(r,0,6)}))}(r,e.depthwise_conv,s),r=fH(r,e.pointwise_conv,[1,1]),11===a&&(n=r)})),null===n)throw new Error("mobileNetV1 - output of conv layer 11 is null");return{out:r,conv11:n}}))}(ic(ou(n,127.5),1),t.mobilenetv1),{boxPredictions:a,classPredictions:s}=function(e,t,n){return jo((()=>{const r=fH(e,n.conv_0,[1,1]),a=fH(r,n.conv_1,[2,2]),s=fH(a,n.conv_2,[1,1]),i=fH(s,n.conv_3,[2,2]),o=fH(i,n.conv_4,[1,1]),u=fH(o,n.conv_5,[2,2]),l=fH(u,n.conv_6,[1,1]),c=fH(l,n.conv_7,[2,2]),h=gH(t,n.box_predictor_0),d=gH(e,n.box_predictor_1),p=gH(a,n.box_predictor_2),f=gH(i,n.box_predictor_3),m=gH(u,n.box_predictor_4),g=gH(c,n.box_predictor_5);return{boxPredictions:zu([h.boxPredictionEncoding,d.boxPredictionEncoding,p.boxPredictionEncoding,f.boxPredictionEncoding,m.boxPredictionEncoding,g.boxPredictionEncoding],1),classPredictions:zu([h.classPrediction,d.classPrediction,p.classPrediction,f.classPrediction,m.classPrediction,g.classPrediction],1)}}))}(r.out,r.conv11,t.prediction_layer);return function(e,t,n){return jo((()=>{const r=e.shape[0];let a=function(e,t){const{sizes:n,centers:r}=function(e){const t=Kh(Ui(e,[1,0])),n=[ic(t[2],t[0]),ic(t[3],t[1])];return{sizes:n,centers:[su(t[0],ou(n[0],2)),su(t[1],ou(n[1],2))]}}(e),a=Kh(Ui(t,[1,0])),s=ou(uu($l(ou(a[2],5)),n[0]),2),i=su(uu(ou(a[0],10),n[0]),r[0]),o=ou(uu($l(ou(a[3],5)),n[1]),2),u=su(uu(ou(a[1],10),n[1]),r[1]);return Ui(Mh([ic(i,s),ic(u,o),su(i,s),su(u,o)]),[1,0])}(Mu(Al(n.extra_dim,[r,1,1]),[-1,4]),Mu(e,[-1,4]));a=Mu(a,[r,a.shape[0]/r,4]);const s=Pu(Bu(t,[0,0,1],[-1,-1,-1]));let i=Bu(s,[0,0,0],[-1,-1,1]);return i=Mu(i,[r,i.shape[1]]),{boxes:Kh(a),scores:Kh(i)}}))}(a,s,t.output_layer)}))}async forward(e){return this.forwardInput(await rG(e))}async locateFaces(e,t={}){const{maxResults:n,minConfidence:r}=new yH(t),a=await rG(e),{boxes:s,scores:i}=this.forwardInput(a),o=s[0],u=i[0];for(let e=1;e<s.length;e++)s[e].dispose(),i[e].dispose();const l=Array.from(u.dataSync()),c=function(e,t,n,r,a){const s=e.shape[0],i=Math.min(n,s),o=t.map(((e,t)=>({score:e,boxIndex:t}))).filter((e=>e.score>a)).sort(((e,t)=>t.score-e.score)),u=[];return o.forEach((t=>{if(u.length>=i)return;const n=t.score;for(let n=u.length-1;n>=0;--n){const r=mH(e,t.boxIndex,u[n]);if(0!==r&&(t.score*=r<=.5?1:0,t.score<=a))break}n===t.score&&u.push(t.boxIndex)})),u}(o,l,n,0,r),h=a.getReshapedInputDimensions(0),d=a.inputSize,p=d/h.width,f=d/h.height,m=o.arraySync(),g=c.map((e=>{const[t,n]=[Math.max(0,m[e][0]),Math.min(1,m[e][2])].map((e=>e*f)),[r,s]=[Math.max(0,m[e][1]),Math.min(1,m[e][3])].map((e=>e*p));return new cU(l[e],new wU(r,t,s-r,n-t),{height:a.getInputHeight(0),width:a.getInputWidth(0)})}));return o.dispose(),u.dispose(),g}getDefaultModelName(){return"ssd_mobilenetv1_model"}extractParamsFromWeightMap(e){return function(e){const t=[],{extractMobilenetV1Params:n,extractPredictionLayerParams:r}=function(e,t){const n=NG(e,t);function r(e,t,r){return{filters:n(`${e}/Conv2d_${t}_pointwise/weights`,4,`${r}/filters`),batch_norm_offset:n(`${e}/Conv2d_${t}_pointwise/convolution_bn_offset`,1,`${r}/batch_norm_offset`)}}function a(e){const t=`mobilenetv1/conv_${e}`,a=`MobilenetV1/Conv2d_${e}_depthwise`,s=`${t}/depthwise_conv`,i=`${t}/pointwise_conv`;return{depthwise_conv:{filters:n(`${a}/depthwise_weights`,4,`${s}/filters`),batch_norm_scale:n(`${a}/BatchNorm/gamma`,1,`${s}/batch_norm_scale`),batch_norm_offset:n(`${a}/BatchNorm/beta`,1,`${s}/batch_norm_offset`),batch_norm_mean:n(`${a}/BatchNorm/moving_mean`,1,`${s}/batch_norm_mean`),batch_norm_variance:n(`${a}/BatchNorm/moving_variance`,1,`${s}/batch_norm_variance`)},pointwise_conv:r("MobilenetV1",e,i)}}function s(e,t){return{filters:n(`${e}/weights`,4,`${t}/filters`),bias:n(`${e}/biases`,1,`${t}/bias`)}}function i(e){return{box_encoding_predictor:s(`Prediction/BoxPredictor_${e}/BoxEncodingPredictor`,`prediction_layer/box_predictor_${e}/box_encoding_predictor`),class_predictor:s(`Prediction/BoxPredictor_${e}/ClassPredictor`,`prediction_layer/box_predictor_${e}/class_predictor`)}}return{extractMobilenetV1Params:function(){return{conv_0:r("MobilenetV1",0,"mobilenetv1/conv_0"),conv_1:a(1),conv_2:a(2),conv_3:a(3),conv_4:a(4),conv_5:a(5),conv_6:a(6),conv_7:a(7),conv_8:a(8),conv_9:a(9),conv_10:a(10),conv_11:a(11),conv_12:a(12),conv_13:a(13)}},extractPredictionLayerParams:function(){return{conv_0:r("Prediction",0,"prediction_layer/conv_0"),conv_1:r("Prediction",1,"prediction_layer/conv_1"),conv_2:r("Prediction",2,"prediction_layer/conv_2"),conv_3:r("Prediction",3,"prediction_layer/conv_3"),conv_4:r("Prediction",4,"prediction_layer/conv_4"),conv_5:r("Prediction",5,"prediction_layer/conv_5"),conv_6:r("Prediction",6,"prediction_layer/conv_6"),conv_7:r("Prediction",7,"prediction_layer/conv_7"),box_predictor_0:i(0),box_predictor_1:i(1),box_predictor_2:i(2),box_predictor_3:i(3),box_predictor_4:i(4),box_predictor_5:i(5)}}}}(e,t),a=e["Output/extra_dim"];if(t.push({originalPath:"Output/extra_dim",paramPath:"output_layer/extra_dim"}),!XV(a))throw new Error(`expected weightMap['Output/extra_dim'] to be a Tensor3D, instead have ${a}`);const s={mobilenetv1:n(),prediction_layer:r(),output_layer:{extra_dim:a}};return xG(e,t),{params:s,paramMappings:t}}(e)}extractParams(e){return function(e){const t=[],{extractWeights:n,getRemainingWeights:r}=TG(e),{extractMobilenetV1Params:a,extractPredictionLayerParams:s}=function(e,t){function n(n,r,a,s,i){const o=Wh(e(n*r*a*a),[a,a,n,r]),u=Ph(e(r));return t.push({paramPath:`${s}/filters`},{paramPath:`${s}/${i?"batch_norm_offset":"bias"}`}),{filters:o,bias:u}}function r(e,t,r,a){const{filters:s,bias:i}=n(e,t,r,a,!0);return{filters:s,batch_norm_offset:i}}function a(n,a,s){return{depthwise_conv:function(n,r){const a=Wh(e(9*n),[3,3,n,1]),s=Ph(e(n)),i=Ph(e(n)),o=Ph(e(n)),u=Ph(e(n));return t.push({paramPath:`${r}/filters`},{paramPath:`${r}/batch_norm_scale`},{paramPath:`${r}/batch_norm_offset`},{paramPath:`${r}/batch_norm_mean`},{paramPath:`${r}/batch_norm_variance`}),{filters:a,batch_norm_scale:s,batch_norm_offset:i,batch_norm_mean:o,batch_norm_variance:u}}(n,`${s}/depthwise_conv`),pointwise_conv:r(n,a,1,`${s}/pointwise_conv`)}}return{extractMobilenetV1Params:function(){return{conv_0:r(3,32,3,"mobilenetv1/conv_0"),conv_1:a(32,64,"mobilenetv1/conv_1"),conv_2:a(64,128,"mobilenetv1/conv_2"),conv_3:a(128,128,"mobilenetv1/conv_3"),conv_4:a(128,256,"mobilenetv1/conv_4"),conv_5:a(256,256,"mobilenetv1/conv_5"),conv_6:a(256,512,"mobilenetv1/conv_6"),conv_7:a(512,512,"mobilenetv1/conv_7"),conv_8:a(512,512,"mobilenetv1/conv_8"),conv_9:a(512,512,"mobilenetv1/conv_9"),conv_10:a(512,512,"mobilenetv1/conv_10"),conv_11:a(512,512,"mobilenetv1/conv_11"),conv_12:a(512,1024,"mobilenetv1/conv_12"),conv_13:a(1024,1024,"mobilenetv1/conv_13")}},extractPredictionLayerParams:function(){return{conv_0:r(1024,256,1,"prediction_layer/conv_0"),conv_1:r(256,512,3,"prediction_layer/conv_1"),conv_2:r(512,128,1,"prediction_layer/conv_2"),conv_3:r(128,256,3,"prediction_layer/conv_3"),conv_4:r(256,128,1,"prediction_layer/conv_4"),conv_5:r(128,256,3,"prediction_layer/conv_5"),conv_6:r(256,64,1,"prediction_layer/conv_6"),conv_7:r(64,128,3,"prediction_layer/conv_7"),box_predictor_0:{box_encoding_predictor:n(512,12,1,"prediction_layer/box_predictor_0/box_encoding_predictor"),class_predictor:n(512,9,1,"prediction_layer/box_predictor_0/class_predictor")},box_predictor_1:{box_encoding_predictor:n(1024,24,1,"prediction_layer/box_predictor_1/box_encoding_predictor"),class_predictor:n(1024,18,1,"prediction_layer/box_predictor_1/class_predictor")},box_predictor_2:{box_encoding_predictor:n(512,24,1,"prediction_layer/box_predictor_2/box_encoding_predictor"),class_predictor:n(512,18,1,"prediction_layer/box_predictor_2/class_predictor")},box_predictor_3:{box_encoding_predictor:n(256,24,1,"prediction_layer/box_predictor_3/box_encoding_predictor"),class_predictor:n(256,18,1,"prediction_layer/box_predictor_3/class_predictor")},box_predictor_4:{box_encoding_predictor:n(256,24,1,"prediction_layer/box_predictor_4/box_encoding_predictor"),class_predictor:n(256,18,1,"prediction_layer/box_predictor_4/class_predictor")},box_predictor_5:{box_encoding_predictor:n(128,24,1,"prediction_layer/box_predictor_5/box_encoding_predictor"),class_predictor:n(128,18,1,"prediction_layer/box_predictor_5/class_predictor")}}}}}(n,t),i=a(),o=s(),u={extra_dim:ji(n(20472),[1,5118,4])};if(t.push({paramPath:"output_layer/extra_dim"}),0!==r().length)throw new Error(`weights remaing after extract: ${r().length}`);return{params:{mobilenetv1:i,prediction_layer:o,output_layer:u},paramMappings:t}}(e)}};function xH(e){const t=new bH;return t.extractWeights(e),t}function wH(e){return xH(e)}var vH=class extends bH{},kH=[new iU(.738768,.874946),new iU(2.42204,2.65704),new iU(4.30971,7.04493),new iU(10.246,4.59428),new iU(12.6868,11.8741)],IH=[new iU(1.603231,2.094468),new iU(6.041143,7.080126),new iU(2.882459,3.518061),new iU(4.266906,5.178857),new iU(9.041765,10.66308)],SH=[117.001,114.697,97.404],NH=e=>"number"==typeof e;function TH(e){if(!e)throw new Error(`invalid config: ${e}`);if("boolean"!=typeof e.withSeparableConvs)throw new Error(`config.withSeparableConvs has to be a boolean, have: ${e.withSeparableConvs}`);if(!NH(e.iouThreshold)||e.iouThreshold<0||e.iouThreshold>1)throw new Error(`config.iouThreshold has to be a number between [0, 1], have: ${e.iouThreshold}`);if(!Array.isArray(e.classes)||!e.classes.length||!e.classes.every((e=>"string"==typeof e)))throw new Error(`config.classes has to be an array class names: string[], have: ${JSON.stringify(e.classes)}`);if(!Array.isArray(e.anchors)||!e.anchors.length||!e.anchors.map((e=>e||{})).every((e=>NH(e.x)&&NH(e.y))))throw new Error(`config.anchors has to be an array of { x: number, y: number }, have: ${JSON.stringify(e.anchors)}`);if(e.meanRgb&&(!Array.isArray(e.meanRgb)||3!==e.meanRgb.length||!e.meanRgb.every(NH)))throw new Error(`config.meanRgb has to be an array of shape [number, number, number], have: ${JSON.stringify(e.meanRgb)}`)}function CH(e){return jo((()=>{const t=uu(e,mh(.10000000149011612));return su(ih(ic(e,t)),t)}))}function $H(e,t){return jo((()=>{let n=Wc(e,[[0,0],[1,1],[1,1],[0,0]]);return n=nl(n,t.conv.filters,[1,1],"valid"),n=ic(n,t.bn.sub),n=uu(n,t.bn.truediv),n=su(n,t.conv.bias),CH(n)}))}function _H(e,t){return jo((()=>{let n=Wc(e,[[0,0],[1,1],[1,1],[0,0]]);return n=yh(n,t.depthwise_filter,t.pointwise_filter,[1,1],"valid"),n=su(n,t.bias),CH(n)}))}var EH=class{constructor({inputSize:e,scoreThreshold:t}={}){if(this._name="TinyYolov2Options",this._inputSize=e||416,this._scoreThreshold=t||.5,"number"!=typeof this._inputSize||this._inputSize%32!=0)throw new Error(`${this._name} - expected inputSize to be a number divisible by 32`);if("number"!=typeof this._scoreThreshold||this._scoreThreshold<=0||this._scoreThreshold>=1)throw new Error(`${this._name} - expected scoreThreshold to be a number between 0 and 1`)}get inputSize(){return this._inputSize}get scoreThreshold(){return this._scoreThreshold}},AH=class extends fG{constructor(e){super("TinyYolov2"),TH(e),this._config=e}get config(){return this._config}get withClassScores(){return this.config.withClassScores||this.config.classes.length>1}get boxEncodingSize(){return 5+(this.withClassScores?this.config.classes.length:0)}runTinyYolov2(e,t){let n=$H(e,t.conv0);return n=kc(n,[2,2],[2,2],"same"),n=$H(n,t.conv1),n=kc(n,[2,2],[2,2],"same"),n=$H(n,t.conv2),n=kc(n,[2,2],[2,2],"same"),n=$H(n,t.conv3),n=kc(n,[2,2],[2,2],"same"),n=$H(n,t.conv4),n=kc(n,[2,2],[2,2],"same"),n=$H(n,t.conv5),n=kc(n,[2,2],[1,1],"same"),n=$H(n,t.conv6),n=$H(n,t.conv7),bG(n,t.conv8,"valid",!1)}runMobilenet(e,t){let n=this.config.isFirstLayerConv2d?CH(bG(e,t.conv0,"valid",!1)):_H(e,t.conv0);return n=kc(n,[2,2],[2,2],"same"),n=_H(n,t.conv1),n=kc(n,[2,2],[2,2],"same"),n=_H(n,t.conv2),n=kc(n,[2,2],[2,2],"same"),n=_H(n,t.conv3),n=kc(n,[2,2],[2,2],"same"),n=_H(n,t.conv4),n=kc(n,[2,2],[2,2],"same"),n=_H(n,t.conv5),n=kc(n,[2,2],[1,1],"same"),n=t.conv6?_H(n,t.conv6):n,n=t.conv7?_H(n,t.conv7):n,bG(n,t.conv8,"valid",!1)}forwardInput(e,t){const{params:n}=this;if(!n)throw new Error("TinyYolov2 - load model before inference");return jo((()=>{let r=wi(e.toBatchTensor(t,!1),"float32");return r=this.config.meanRgb?fU(r,this.config.meanRgb):r,r=r.div(255),this.config.withSeparableConvs?this.runMobilenet(r,n):this.runTinyYolov2(r,n)}))}async forward(e,t){return this.forwardInput(await rG(e),t)}async detect(e,t={}){const{inputSize:n,scoreThreshold:r}=new EH(t),a=await rG(e),s=await this.forwardInput(a,n),i=jo((()=>Kh(s)[0].expandDims())),o={width:a.getInputWidth(0),height:a.getInputHeight(0)},u=await this.extractBoxes(i,a.getReshapedInputDimensions(0),r);s.dispose(),i.dispose();const l=u.map((e=>e.box)),c=u.map((e=>e.score)),h=u.map((e=>e.classScore)),d=u.map((e=>this.config.classes[e.label]));return pU(l.map((e=>e.rescale(n))),c,this.config.iouThreshold,!0).map((e=>new lU(c[e],h[e],d[e],l[e],o)))}getDefaultModelName(){return""}extractParamsFromWeightMap(e){return function(e,t){const n=[],{extractConvParams:r,extractConvWithBatchNormParams:a,extractSeparableConvParams:s}=function(e,t){const n=NG(e,t);function r(e){return{filters:n(`${e}/filters`,4),bias:n(`${e}/bias`,1)}}return{extractConvParams:r,extractConvWithBatchNormParams:function(e){return{conv:r(`${e}/conv`),bn:function(e){return{sub:n(`${e}/sub`,1),truediv:n(`${e}/truediv`,1)}}(`${e}/bn`)}},extractSeparableConvParams:SG(n)}}(e,n);let i;if(t.withSeparableConvs){const e=t.filterSizes&&t.filterSizes.length||9;i={conv0:t.isFirstLayerConv2d?r("conv0"):s("conv0"),conv1:s("conv1"),conv2:s("conv2"),conv3:s("conv3"),conv4:s("conv4"),conv5:s("conv5"),conv6:e>7?s("conv6"):void 0,conv7:e>8?s("conv7"):void 0,conv8:r("conv8")}}else i={conv0:a("conv0"),conv1:a("conv1"),conv2:a("conv2"),conv3:a("conv3"),conv4:a("conv4"),conv5:a("conv5"),conv6:a("conv6"),conv7:a("conv7"),conv8:r("conv8")};return xG(e,n),{params:i,paramMappings:n}}(e,this.config)}extractParams(e){const t=this.config.filterSizes||AH.DEFAULT_FILTER_SIZES,n=t?t.length:void 0;if(7!==n&&8!==n&&9!==n)throw new Error(`TinyYolov2 - expected 7 | 8 | 9 convolutional filters, but found ${n} filterSizes in config`);return function(e,t,n,r){const{extractWeights:a,getRemainingWeights:s}=TG(e),i=[],{extractConvParams:o,extractConvWithBatchNormParams:u,extractSeparableConvParams:l}=function(e,t){const n=wG(e,t),r=IG(e,t);return{extractConvParams:n,extractConvWithBatchNormParams:function(r,a,s){return{conv:n(r,a,3,`${s}/conv`),bn:function(n,r){const a=Ph(e(n)),s=Ph(e(n));return t.push({paramPath:`${r}/sub`},{paramPath:`${r}/truediv`}),{sub:a,truediv:s}}(a,`${s}/bn`)}},extractSeparableConvParams:r}}(a,i);let c;if(t.withSeparableConvs){const[e,a,s,i,u,h,d,p,f]=r;c={conv0:t.isFirstLayerConv2d?o(e,a,3,"conv0"):l(e,a,"conv0"),conv1:l(a,s,"conv1"),conv2:l(s,i,"conv2"),conv3:l(i,u,"conv3"),conv4:l(u,h,"conv4"),conv5:l(h,d,"conv5"),conv6:p?l(d,p,"conv6"):void 0,conv7:f?l(p,f,"conv7"):void 0,conv8:o(f||p||d,5*n,1,"conv8")}}else{const[e,t,a,s,i,l,h,d,p]=r;c={conv0:u(e,t,"conv0"),conv1:u(t,a,"conv1"),conv2:u(a,s,"conv2"),conv3:u(s,i,"conv3"),conv4:u(i,l,"conv4"),conv5:u(l,h,"conv5"),conv6:u(h,d,"conv6"),conv7:u(d,p,"conv7"),conv8:o(p,5*n,1,"conv8")}}if(0!==s().length)throw new Error(`weights remaing after extract: ${s().length}`);return{params:c,paramMappings:i}}(e,this.config,this.boxEncodingSize,t)}async extractBoxes(e,t,n){const{width:r,height:a}=t,s=Math.max(r,a),i=s/r,o=s/a,u=e.shape[1],l=this.config.anchors.length,[c,h,d]=jo((()=>{const t=e.reshape([u,u,l,this.boxEncodingSize]);return[t.slice([0,0,0,0],[u,u,l,4]),t.slice([0,0,0,4],[u,u,l,1]),this.withClassScores?Th(t.slice([0,0,0,5],[u,u,l,this.config.classes.length]),3):mh(0)]})),p=[],f=await h.array(),m=await c.array();for(let e=0;e<u;e++)for(let t=0;t<u;t++)for(let r=0;r<l;r++){const a=yU(f[e][t][r][0]);if(!n||a>n){const n=(t+yU(m[e][t][r][0]))/u*i,s=(e+yU(m[e][t][r][1]))/u*o,l=Math.exp(m[e][t][r][2])*this.config.anchors[r].x/u*i,c=Math.exp(m[e][t][r][3])*this.config.anchors[r].y/u*o,h=n-l/2,f=s-c/2,g={row:e,col:t,anchor:r},{classScore:y,label:b}=this.withClassScores?await this.extractPredictedClass(d,g):{classScore:1,label:0};p.push({box:new uU(h,f,h+l,f+c),score:a,classScore:a*y,label:b,...g})}}return c.dispose(),h.dispose(),d.dispose(),p}async extractPredictedClass(e,t){const{row:n,col:r,anchor:a}=t,s=await e.array();return Array(this.config.classes.length).fill(0).map(((e,t)=>s[n][r][a][t])).map(((e,t)=>({classScore:e,label:t}))).reduce(((e,t)=>e.classScore>t.classScore?e:t))}},FH=AH;FH.DEFAULT_FILTER_SIZES=[3,16,32,64,128,256,512,1024,1024];var RH=class extends FH{constructor(e=!0){super({withSeparableConvs:e,iouThreshold:.4,classes:["face"],...e?{anchors:IH,meanRgb:SH}:{anchors:kH,withClassScores:!0}})}get withSeparableConvs(){return this.config.withSeparableConvs}get anchors(){return this.config.anchors}async locateFaces(e,t){return(await this.detect(e,t)).map((e=>new cU(e.score,e.relativeBox,{width:e.imageWidth,height:e.imageHeight})))}getDefaultModelName(){return this.withSeparableConvs?"tiny_yolov2_separable_conv_model":"tiny_yolov2_model"}extractParamsFromWeightMap(e){return super.extractParamsFromWeightMap(e)}};function DH(e,t=!0){const n=new RH(t);return n.extractWeights(e),n}var MH=class extends EH{constructor(){super(...arguments),this._name="TinyFaceDetectorOptions"}},OH=class{async then(e){return e(await this.run())}async run(){throw new Error("ComposableTask - run is not implemented")}};async function LH(e,t,n,r,a=(({alignedRect:e})=>e)){const s=e.map((e=>BG(e)?a(e):e.detection)),i=r||(t instanceof Ba?await sG(t,s):await aG(t,s)),o=await n(i);return i.forEach((e=>e instanceof Ba&&e.dispose())),o}async function zH(e,t,n,r,a){return LH([e],t,(async e=>n(e[0])),r,a)}var PH=[new iU(1.603231,2.094468),new iU(6.041143,7.080126),new iU(2.882459,3.518061),new iU(4.266906,5.178857),new iU(9.041765,10.66308)],BH=[117.001,114.697,97.404],WH=class extends FH{constructor(){super({withSeparableConvs:!0,iouThreshold:.4,classes:["face"],anchors:PH,meanRgb:BH,isFirstLayerConv2d:!0,filterSizes:[3,16,32,64,128,256,512]})}get anchors(){return this.config.anchors}async locateFaces(e,t){return(await this.detect(e,t)).map((e=>new cU(e.score,e.relativeBox,{width:e.imageWidth,height:e.imageHeight})))}getDefaultModelName(){return"tiny_face_detector_model"}extractParamsFromWeightMap(e){return super.extractParamsFromWeightMap(e)}},VH={ssdMobilenetv1:new bH,tinyFaceDetector:new WH,tinyYolov2:new RH,faceLandmark68Net:new JG,faceLandmark68TinyNet:new eH,faceRecognitionNet:new oH,faceExpressionNet:new OG,ageGenderNet:new YG},UH=(e,t)=>VH.ssdMobilenetv1.locateFaces(e,t),GH=(e,t)=>VH.tinyFaceDetector.locateFaces(e,t),HH=(e,t)=>VH.tinyYolov2.locateFaces(e,t),jH=e=>VH.faceLandmark68Net.detectLandmarks(e),qH=e=>VH.faceLandmark68TinyNet.detectLandmarks(e),KH=e=>VH.faceRecognitionNet.computeFaceDescriptor(e),XH=e=>VH.faceExpressionNet.predictExpressions(e),YH=e=>VH.ageGenderNet.predictAgeAndGender(e),ZH=e=>VH.ssdMobilenetv1.load(e),JH=e=>VH.tinyFaceDetector.load(e),QH=e=>VH.tinyYolov2.load(e),ej=e=>VH.faceLandmark68Net.load(e),tj=e=>VH.faceLandmark68TinyNet.load(e),nj=e=>VH.faceRecognitionNet.load(e),rj=e=>VH.faceExpressionNet.load(e),aj=e=>VH.ageGenderNet.load(e),sj=ZH,ij=UH,oj=jH,uj=class extends OH{constructor(e,t,n){super(),this.parentTask=e,this.input=t,this.extractedFaces=n}},lj=class extends uj{async run(){const e=await this.parentTask,t=await LH(e,this.input,(async e=>Promise.all(e.map((e=>VH.faceExpressionNet.predictExpressions(e))))),this.extractedFaces);return e.map(((e,n)=>zG(e,t[n])))}withAgeAndGender(){return new fj(this,this.input)}},cj=class extends uj{async run(){const e=await this.parentTask;if(e)return zG(e,await zH(e,this.input,(e=>VH.faceExpressionNet.predictExpressions(e)),this.extractedFaces))}withAgeAndGender(){return new mj(this,this.input)}},hj=class extends lj{withAgeAndGender(){return new gj(this,this.input)}withFaceDescriptors(){return new xj(this,this.input)}},dj=class extends cj{withAgeAndGender(){return new yj(this,this.input)}withFaceDescriptor(){return new wj(this,this.input)}},pj=class extends OH{constructor(e,t,n){super(),this.parentTask=e,this.input=t,this.extractedFaces=n}},fj=class extends pj{async run(){const e=await this.parentTask,t=await LH(e,this.input,(async e=>Promise.all(e.map((e=>VH.ageGenderNet.predictAgeAndGender(e))))),this.extractedFaces);return e.map(((e,n)=>{const{age:r,gender:a,genderProbability:s}=t[n];return hH(pH(e,a,s),r)}))}withFaceExpressions(){return new lj(this,this.input)}},mj=class extends pj{async run(){const e=await this.parentTask;if(!e)return;const{age:t,gender:n,genderProbability:r}=await zH(e,this.input,(e=>VH.ageGenderNet.predictAgeAndGender(e)),this.extractedFaces);return hH(pH(e,n,r),t)}withFaceExpressions(){return new cj(this,this.input)}},gj=class extends fj{withFaceExpressions(){return new hj(this,this.input)}withFaceDescriptors(){return new xj(this,this.input)}},yj=class extends mj{withFaceExpressions(){return new dj(this,this.input)}withFaceDescriptor(){return new wj(this,this.input)}},bj=class extends OH{constructor(e,t){super(),this.parentTask=e,this.input=t}},xj=class extends bj{async run(){const e=await this.parentTask;return(await LH(e,this.input,(e=>Promise.all(e.map((e=>VH.faceRecognitionNet.computeFaceDescriptor(e))))),null,(e=>e.landmarks.align(null,{useDlibAlignment:!0})))).map(((t,n)=>lH(e[n],t)))}withFaceExpressions(){return new hj(this,this.input)}withAgeAndGender(){return new gj(this,this.input)}},wj=class extends bj{async run(){const e=await this.parentTask;if(e)return lH(e,await zH(e,this.input,(e=>VH.faceRecognitionNet.computeFaceDescriptor(e)),null,(e=>e.landmarks.align(null,{useDlibAlignment:!0}))))}withFaceExpressions(){return new dj(this,this.input)}withAgeAndGender(){return new yj(this,this.input)}},vj=class extends OH{constructor(e,t,n){super(),this.parentTask=e,this.input=t,this.useTinyLandmarkNet=n}get landmarkNet(){return this.useTinyLandmarkNet?VH.faceLandmark68TinyNet:VH.faceLandmark68Net}},kj=class extends vj{async run(){const e=await this.parentTask,t=e.map((e=>e.detection)),n=this.input instanceof Ba?await sG(this.input,t):await aG(this.input,t),r=await Promise.all(n.map((e=>this.landmarkNet.detectLandmarks(e))));return n.forEach((e=>e instanceof Ba&&e.dispose())),e.map(((e,t)=>WG(e,r[t])))}withFaceExpressions(){return new hj(this,this.input)}withAgeAndGender(){return new gj(this,this.input)}withFaceDescriptors(){return new xj(this,this.input)}},Ij=class extends vj{async run(){const e=await this.parentTask;if(!e)return;const{detection:t}=e,n=this.input instanceof Ba?await sG(this.input,[t]):await aG(this.input,[t]),r=await this.landmarkNet.detectLandmarks(n[0]);return n.forEach((e=>e instanceof Ba&&e.dispose())),WG(e,r)}withFaceExpressions(){return new dj(this,this.input)}withAgeAndGender(){return new yj(this,this.input)}withFaceDescriptor(){return new wj(this,this.input)}},Sj=class extends OH{constructor(e,t=new yH){super(),this.input=e,this.options=t}},Nj=class extends Sj{async run(){const{input:e,options:t}=this;let n;if(t instanceof MH)n=VH.tinyFaceDetector.locateFaces(e,t);else if(t instanceof yH)n=VH.ssdMobilenetv1.locateFaces(e,t);else{if(!(t instanceof EH))throw new Error("detectFaces - expected options to be instance of TinyFaceDetectorOptions | SsdMobilenetv1Options | TinyYolov2Options");n=VH.tinyYolov2.locateFaces(e,t)}return n}runAndExtendWithFaceDetections(){return new Promise(((e,t)=>{this.run().then((t=>e(t.map((e=>_U({},e)))))).catch((e=>t(e)))}))}withFaceLandmarks(e=!1){return new kj(this.runAndExtendWithFaceDetections(),this.input,e)}withFaceExpressions(){return new lj(this.runAndExtendWithFaceDetections(),this.input)}withAgeAndGender(){return new fj(this.runAndExtendWithFaceDetections(),this.input)}},Tj=class extends Sj{async run(){const e=await new Nj(this.input,this.options);let t=e[0];return e.forEach((e=>{e.score>t.score&&(t=e)})),t}runAndExtendWithFaceDetection(){return new Promise((async e=>{const t=await this.run();e(t?_U({},t):void 0)}))}withFaceLandmarks(e=!1){return new Ij(this.runAndExtendWithFaceDetection(),this.input,e)}withFaceExpressions(){return new cj(this.runAndExtendWithFaceDetection(),this.input)}withAgeAndGender(){return new mj(this.runAndExtendWithFaceDetection(),this.input)}};function Cj(e,t=new yH){return new Tj(e,t)}function $j(e,t=new yH){return new Nj(e,t)}async function _j(e,t){return $j(e,new yH(t?{minConfidence:t}:{})).withFaceLandmarks().withFaceDescriptors()}async function Ej(e,t={}){return $j(e,new EH(t)).withFaceLandmarks().withFaceDescriptors()}var Aj=_j;function Fj(e,t){if(e.length!==t.length)throw new Error("euclideanDistance: arr1.length !== arr2.length");const n=Array.from(e),r=Array.from(t);return Math.sqrt(n.map(((e,t)=>e-r[t])).reduce(((e,t)=>e+t**2),0))}var Rj=class{constructor(e,t=.6){this._distanceThreshold=t;const n=Array.isArray(e)?e:[e];if(!n.length)throw new Error("FaceRecognizer.constructor - expected atleast one input");let r=1;const a=()=>"person "+r++;this._labeledDescriptors=n.map((e=>{if(e instanceof TU)return e;if(e instanceof Float32Array)return new TU(a(),[e]);if(e.descriptor&&e.descriptor instanceof Float32Array)return new TU(a(),[e.descriptor]);throw new Error("FaceRecognizer.constructor - expected inputs to be of type LabeledFaceDescriptors | WithFaceDescriptor<any> | Float32Array | Array<LabeledFaceDescriptors | WithFaceDescriptor<any> | Float32Array>")}))}get labeledDescriptors(){return this._labeledDescriptors}get distanceThreshold(){return this._distanceThreshold}computeMeanDistance(e,t){return t.map((t=>Fj(t,e))).reduce(((e,t)=>e+t),0)/(t.length||1)}matchDescriptor(e){return this.labeledDescriptors.map((({descriptors:t,label:n})=>new SU(n,this.computeMeanDistance(e,t)))).reduce(((e,t)=>e.distance<t.distance?e:t))}findBestMatch(e){const t=this.matchDescriptor(e);return t.distance<this.distanceThreshold?t:new SU("unknown",t.distance)}toJSON(){return{distanceThreshold:this.distanceThreshold,labeledDescriptors:this.labeledDescriptors.map((e=>e.toJSON()))}}static fromJSON(e){const t=e.labeledDescriptors.map((e=>TU.fromJSON(e)));return new Rj(t,e.distanceThreshold)}};function Dj(e){const t=new WH;return t.extractWeights(e),t}function Mj(e,t){const{width:n,height:r}=new HV(t.width,t.height);if(n<=0||r<=0)throw new Error(`resizeResults - invalid dimensions: ${JSON.stringify({width:n,height:r})}`);if(Array.isArray(e))return e.map((e=>Mj(e,{width:n,height:r})));if(BG(e)){const t=e.detection.forSize(n,r),a=e.unshiftedLandmarks.forSize(t.box.width,t.box.height);return WG(_U(e,t),a)}return $U(e)?_U(e,e.detection.forSize(n,r)):e instanceof vU||e instanceof cU?e.forSize(n,r):e}var Oj={faceapi:"1.4.1",node:"undefined"!=typeof process,browser:"undefined"!=typeof navigator&&void 0!==navigator.userAgent}},741:e=>{function t(e){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}t.keys=()=>[],t.resolve=t,t.id=741,e.exports=t},576:(e,t,n)=>{"use strict";n.d(t,{Z:()=>s});var r=n(645),a=n.n(r)()((function(e){return e[1]}));a.push([e.id,"@tailwind base;\n@tailwind components;\n@tailwind utilities;",""]);const s=a},645:e=>{"use strict";e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n=e(t);return t[2]?"@media ".concat(t[2]," {").concat(n,"}"):n})).join("")},t.i=function(e,n,r){"string"==typeof e&&(e=[[null,e,""]]);var a={};if(r)for(var s=0;s<this.length;s++){var i=this[s][0];null!=i&&(a[i]=!0)}for(var o=0;o<e.length;o++){var u=[].concat(e[o]);r&&a[u[0]]||(n&&(u[2]?u[2]="".concat(n," and ").concat(u[2]):u[2]=n),t.push(u))}},t}},826:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>y});var r=n(379),a=n.n(r),s=n(795),i=n.n(s),o=n(569),u=n.n(o),l=n(565),c=n.n(l),h=n(216),d=n.n(h),p=n(589),f=n.n(p),m=n(576),g={};g.styleTagTransform=f(),g.setAttributes=c(),g.insert=u().bind(null,"head"),g.domAPI=i(),g.insertStyleElement=d(),a()(m.Z,g);const y=m.Z&&m.Z.locals?m.Z.locals:void 0},379:e=>{"use strict";var t=[];function n(e){for(var n=-1,r=0;r<t.length;r++)if(t[r].identifier===e){n=r;break}return n}function r(e,r){for(var s={},i=[],o=0;o<e.length;o++){var u=e[o],l=r.base?u[0]+r.base:u[0],c=s[l]||0,h="".concat(l," ").concat(c);s[l]=c+1;var d=n(h),p={css:u[1],media:u[2],sourceMap:u[3]};-1!==d?(t[d].references++,t[d].updater(p)):t.push({identifier:h,updater:a(p,r),references:1}),i.push(h)}return i}function a(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap)return;n.update(e=t)}else n.remove()}}e.exports=function(e,a){var s=r(e=e||[],a=a||{});return function(e){e=e||[];for(var i=0;i<s.length;i++){var o=n(s[i]);t[o].references--}for(var u=r(e,a),l=0;l<s.length;l++){var c=n(s[l]);0===t[c].references&&(t[c].updater(),t.splice(c,1))}s=u}}},569:e=>{"use strict";var t={};e.exports=function(e,n){var r=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(n)}},216:e=>{"use strict";e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t),t}},565:(e,t,n)=>{"use strict";e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},795:e=>{"use strict";e.exports=function(e){var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var r=n.css,a=n.media,s=n.sourceMap;a?e.setAttribute("media",a):e.removeAttribute("media"),s&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(s))))," */")),t.styleTagTransform(r,e)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},589:e=>{"use strict";e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}},607:function(e,t,n){"use strict";var r=this&&this.__awaiter||function(e,t,n,r){return new(n||(n=Promise))((function(a,s){function i(e){try{u(r.next(e))}catch(e){s(e)}}function o(e){try{u(r.throw(e))}catch(e){s(e)}}function u(e){var t;e.done?a(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(i,o)}u((r=r.apply(e,t||[])).next())}))};Object.defineProperty(t,"__esModule",{value:!0}),n(826);const a=n(573),s=navigator.mediaDevices,i=!(!s||!s.getUserMedia),o=document.querySelector(".shot-sample"),u=(document.querySelector(".shots"),document.querySelector(".video-screen")),l=document.querySelector(".video-cam"),c=document.createElement("canvas"),h=document.createElement("canvas");let d=1,p=1;if(i){const e=s.getDisplayMedia({video:{height:{max:128}}}),t=s.getUserMedia({video:{height:{max:128}},audio:!0});Promise.all([e,t]).then((([e,t])=>{u.srcObject=e,l.srcObject=t;let n=!1,a=!1;l.oncanplay=()=>r(void 0,void 0,void 0,(function*(){n=!0,n&&a&&(yield f())})),u.oncanplay=()=>r(void 0,void 0,void 0,(function*(){a=!0,n&&a&&(yield f())}))}))}else alert("getUserMedia() is not supported by your browser");function f(){return r(this,void 0,void 0,(function*(){const e=h.getContext("2d");e.font="15px Arial",e.fillText("Loading AI. Please wait...",0,30),o.src=h.toDataURL("image/webp"),yield a.nets.ssdMobilenetv1.loadFromUri("./models");const t=u.videoWidth+l.videoWidth,n=u.videoHeight;c.width=3*t,c.height=4*n,setInterval((()=>r(this,void 0,void 0,(function*(){const e=t*(p-1),r=n*(d-1),s=new Date,i=c.getContext("2d");i.drawImage(l,e,r);const f=yield a.detectAllFaces(l),m=0==f.length,g=f.length>1,y=h.getContext("2d");y.clearRect(0,0,h.width,h.height),y.beginPath(),y.strokeStyle="rgba(255, 0, 0, 0.3)",y.lineWidth=3;for(const e of f){const t=e.box;y.rect(t.x,t.y,t.width,t.height)}y.stroke(),i.drawImage(h,e,r),i.beginPath(),i.rect(e,r,60,12),i.fillStyle=m?"yellow":g?"red":"white",i.fill(),i.fillStyle="black",i.fillText(s.toLocaleTimeString(),e+2,r+10),i.drawImage(u,e+l.videoWidth,r),o.src=c.toDataURL("image/webp"),3==p&&4==d?(i.clearRect(0,0,c.width,c.height),p=1,d=1):3==p&&d<4?(p=1,d++):p<3&&p++}))),1e3)}))}}},t={};function n(r){var a=t[r];if(void 0!==a)return a.exports;var s=t[r]={id:r,exports:{}};return e[r].call(s.exports,s,s.exports,n),s.exports}n.amdO={},n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n(607)})();